// Compiled by ClojureScript 0.0-3208 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string');
goog.require('goog.object');
goog.require('goog.array');
goog.require('goog.string.StringBuffer');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3208";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__113__delegate = function (args){
return console.log.apply(console,(function (){var G__112 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__112) : cljs.core.into_array.call(null,G__112));
})());
};
var G__113 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__114__i = 0, G__114__a = new Array(arguments.length -  0);
while (G__114__i < G__114__a.length) {G__114__a[G__114__i] = arguments[G__114__i + 0]; ++G__114__i;}
  args = new cljs.core.IndexedSeq(G__114__a,0);
} 
return G__113__delegate.call(this,args);};
G__113.cljs$lang$maxFixedArity = 0;
G__113.cljs$lang$applyTo = (function (arglist__115){
var args = cljs.core.seq(arglist__115);
return G__113__delegate(args);
});
G__113.cljs$core$IFn$_invoke$arity$variadic = G__113__delegate;
return G__113;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__117 = x;
return goog.isString(G__117);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__119 = x__$1;
return goog.typeOf(G__119);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3302__auto__ = ty;
if(cljs.core.truth_(and__3302__auto__)){
return ty.cljs$lang$type;
} else {
return and__3302__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__121 = obj;
return goog.typeOf(G__121);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4402__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4402__auto__)){
var s = temp__4402__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__123 = Symbol;
return goog.typeOf(G__123);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function cljs$core$make_array(){
var G__125 = arguments.length;
switch (G__125) {
case 1:
return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = (function (size){
return (new Array(size));
});

cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = (function (type,size){
return (new Array(size));
});

cljs.core.make_array.cljs$lang$maxFixedArity = 2;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__3731__auto___127 = len;
var i_128 = (0);
while(true){
if((i_128 < n__3731__auto___127)){
(new_arr[i_128] = (arr[i_128]));

var G__129 = (i_128 + (1));
i_128 = G__129;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__130 = (i + (1));
i = G__130;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 */
cljs.core.aget = (function cljs$core$aget(){
var G__135 = arguments.length;
switch (G__135) {
case 2:
return cljs.core.aget.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = (function (array,i){
return (array[i]);
});

cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = (function (array,i,idxs){
var G__136 = cljs.core.aget;
var G__137 = (array[i]);
var G__138 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__136,G__137,G__138) : cljs.core.apply.call(null,G__136,G__137,G__138));
});

cljs.core.aget.cljs$lang$applyTo = (function (seq131){
var G__132 = cljs.core.first(seq131);
var seq131__$1 = cljs.core.next(seq131);
var G__133 = cljs.core.first(seq131__$1);
var seq131__$2 = cljs.core.next(seq131__$1);
return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__132,G__133,seq131__$2);
});

cljs.core.aget.cljs$lang$maxFixedArity = 2;
/**
 * Sets the value at the index.
 */
cljs.core.aset = (function cljs$core$aset(){
var G__145 = arguments.length;
switch (G__145) {
case 3:
return cljs.core.aset.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = (function (array,i,val){
return (array[i] = val);
});

cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = (function (array,idx,idx2,idxv){
var G__146 = cljs.core.aset;
var G__147 = (array[idx]);
var G__148 = idx2;
var G__149 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__146,G__147,G__148,G__149) : cljs.core.apply.call(null,G__146,G__147,G__148,G__149));
});

cljs.core.aset.cljs$lang$applyTo = (function (seq140){
var G__141 = cljs.core.first(seq140);
var seq140__$1 = cljs.core.next(seq140);
var G__142 = cljs.core.first(seq140__$1);
var seq140__$2 = cljs.core.next(seq140__$1);
var G__143 = cljs.core.first(seq140__$2);
var seq140__$3 = cljs.core.next(seq140__$2);
return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__141,G__142,G__143,seq140__$3);
});

cljs.core.aset.cljs$lang$maxFixedArity = 3;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function cljs$core$into_array(){
var G__152 = arguments.length;
switch (G__152) {
case 1:
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = (function (aseq){
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});

cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = (function (type,aseq){
var G__153 = (function (a,x){
a.push(x);

return a;
});
var G__154 = [];
var G__155 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__153,G__154,G__155) : cljs.core.reduce.call(null,G__153,G__154,G__155));
});

cljs.core.into_array.cljs$lang$maxFixedArity = 2;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 */
cljs.core.js_invoke = (function cljs$core$js_invoke(){
var argseq__3822__auto__ = ((((2) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(2)),(0))):null);
return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3822__auto__);
});

cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = (function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
});

cljs.core.js_invoke.cljs$lang$maxFixedArity = (2);

cljs.core.js_invoke.cljs$lang$applyTo = (function (seq157){
var G__158 = cljs.core.first(seq157);
var seq157__$1 = cljs.core.next(seq157);
var G__159 = cljs.core.first(seq157__$1);
var seq157__$2 = cljs.core.next(seq157__$1);
return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__158,G__159,seq157__$2);
});

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj161 = {};
return obj161;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj163 = {};
return obj163;
})();

cljs.core._invoke = (function cljs$core$_invoke(){
var G__165 = arguments.length;
switch (G__165) {
case 1:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
case 6:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
case 7:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));

break;
case 8:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));

break;
case 9:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));

break;
case 10:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));

break;
case 11:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));

break;
case 12:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));

break;
case 13:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));

break;
case 14:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));

break;
case 15:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));

break;
case 16:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));

break;
case 17:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));

break;
case 18:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));

break;
case 19:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));

break;
case 20:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));

break;
case 21:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));

break;
case 22:
return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = (function (this$){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__167 = x__3574__auto__;
return goog.typeOf(G__167);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = (function (this$,a){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__169 = x__3574__auto__;
return goog.typeOf(G__169);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = (function (this$,a,b){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__171 = x__3574__auto__;
return goog.typeOf(G__171);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = (function (this$,a,b,c){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__173 = x__3574__auto__;
return goog.typeOf(G__173);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = (function (this$,a,b,c,d){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__175 = x__3574__auto__;
return goog.typeOf(G__175);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = (function (this$,a,b,c,d,e){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__177 = x__3574__auto__;
return goog.typeOf(G__177);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__179 = x__3574__auto__;
return goog.typeOf(G__179);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__181 = x__3574__auto__;
return goog.typeOf(G__181);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__183 = x__3574__auto__;
return goog.typeOf(G__183);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__185 = x__3574__auto__;
return goog.typeOf(G__185);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__187 = x__3574__auto__;
return goog.typeOf(G__187);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__189 = x__3574__auto__;
return goog.typeOf(G__189);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__191 = x__3574__auto__;
return goog.typeOf(G__191);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__193 = x__3574__auto__;
return goog.typeOf(G__193);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__195 = x__3574__auto__;
return goog.typeOf(G__195);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__197 = x__3574__auto__;
return goog.typeOf(G__197);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__199 = x__3574__auto__;
return goog.typeOf(G__199);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__201 = x__3574__auto__;
return goog.typeOf(G__201);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__203 = x__3574__auto__;
return goog.typeOf(G__203);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__205 = x__3574__auto__;
return goog.typeOf(G__205);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__207 = x__3574__auto__;
return goog.typeOf(G__207);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});

cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._invoke[(function (){var G__209 = x__3574__auto__;
return goog.typeOf(G__209);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._invoke["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});

cljs.core._invoke.cljs$lang$maxFixedArity = 22;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj212 = {};
return obj212;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__3302__auto__ = value;
if(and__3302__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3302__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__3574__auto__ = (((value == null))?null:value);
return (function (){var or__3310__auto__ = (cljs.core._clone[(function (){var G__216 = x__3574__auto__;
return goog.typeOf(G__216);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._clone["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj218 = {};
return obj218;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._count[(function (){var G__222 = x__3574__auto__;
return goog.typeOf(G__222);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._count["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj224 = {};
return obj224;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._empty[(function (){var G__228 = x__3574__auto__;
return goog.typeOf(G__228);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._empty["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj230 = {};
return obj230;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._conj[(function (){var G__234 = x__3574__auto__;
return goog.typeOf(G__234);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._conj["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj236 = {};
return obj236;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function cljs$core$_nth(){
var G__238 = arguments.length;
switch (G__238) {
case 2:
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = (function (coll,n){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._nth[(function (){var G__240 = x__3574__auto__;
return goog.typeOf(G__240);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._nth["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});

cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = (function (coll,n,not_found){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._nth[(function (){var G__242 = x__3574__auto__;
return goog.typeOf(G__242);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._nth["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});

cljs.core._nth.cljs$lang$maxFixedArity = 3;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj245 = {};
return obj245;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj247 = {};
return obj247;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._first[(function (){var G__251 = x__3574__auto__;
return goog.typeOf(G__251);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._first["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._rest[(function (){var G__255 = x__3574__auto__;
return goog.typeOf(G__255);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._rest["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj257 = {};
return obj257;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._next[(function (){var G__261 = x__3574__auto__;
return goog.typeOf(G__261);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._next["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj263 = {};
return obj263;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function cljs$core$_lookup(){
var G__265 = arguments.length;
switch (G__265) {
case 2:
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = (function (o,k){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._lookup[(function (){var G__267 = x__3574__auto__;
return goog.typeOf(G__267);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._lookup["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});

cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = (function (o,k,not_found){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._lookup[(function (){var G__269 = x__3574__auto__;
return goog.typeOf(G__269);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._lookup["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});

cljs.core._lookup.cljs$lang$maxFixedArity = 3;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj272 = {};
return obj272;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__276 = x__3574__auto__;
return goog.typeOf(G__276);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._assoc[(function (){var G__280 = x__3574__auto__;
return goog.typeOf(G__280);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._assoc["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj282 = {};
return obj282;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._dissoc[(function (){var G__286 = x__3574__auto__;
return goog.typeOf(G__286);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj288 = {};
return obj288;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._key[(function (){var G__292 = x__3574__auto__;
return goog.typeOf(G__292);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._key["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._val[(function (){var G__296 = x__3574__auto__;
return goog.typeOf(G__296);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._val["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj298 = {};
return obj298;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._disjoin[(function (){var G__302 = x__3574__auto__;
return goog.typeOf(G__302);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj304 = {};
return obj304;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._peek[(function (){var G__308 = x__3574__auto__;
return goog.typeOf(G__308);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._peek["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._pop[(function (){var G__312 = x__3574__auto__;
return goog.typeOf(G__312);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._pop["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj314 = {};
return obj314;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._assoc_n[(function (){var G__318 = x__3574__auto__;
return goog.typeOf(G__318);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj320 = {};
return obj320;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._deref[(function (){var G__324 = x__3574__auto__;
return goog.typeOf(G__324);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._deref["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj326 = {};
return obj326;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._deref_with_timeout[(function (){var G__330 = x__3574__auto__;
return goog.typeOf(G__330);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj332 = {};
return obj332;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._meta[(function (){var G__336 = x__3574__auto__;
return goog.typeOf(G__336);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._meta["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj338 = {};
return obj338;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._with_meta[(function (){var G__342 = x__3574__auto__;
return goog.typeOf(G__342);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj344 = {};
return obj344;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function cljs$core$_reduce(){
var G__346 = arguments.length;
switch (G__346) {
case 2:
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = (function (coll,f){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._reduce[(function (){var G__348 = x__3574__auto__;
return goog.typeOf(G__348);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._reduce["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});

cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = (function (coll,f,start){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._reduce[(function (){var G__350 = x__3574__auto__;
return goog.typeOf(G__350);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._reduce["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});

cljs.core._reduce.cljs$lang$maxFixedArity = 3;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj353 = {};
return obj353;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._kv_reduce[(function (){var G__357 = x__3574__auto__;
return goog.typeOf(G__357);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj359 = {};
return obj359;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._equiv[(function (){var G__363 = x__3574__auto__;
return goog.typeOf(G__363);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._equiv["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj365 = {};
return obj365;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._hash[(function (){var G__369 = x__3574__auto__;
return goog.typeOf(G__369);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._hash["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj371 = {};
return obj371;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._seq[(function (){var G__375 = x__3574__auto__;
return goog.typeOf(G__375);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._seq["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj377 = {};
return obj377;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj379 = {};
return obj379;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj381 = {};
return obj381;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj383 = {};
return obj383;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._rseq[(function (){var G__387 = x__3574__auto__;
return goog.typeOf(G__387);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._rseq["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj389 = {};
return obj389;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._sorted_seq[(function (){var G__393 = x__3574__auto__;
return goog.typeOf(G__393);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._sorted_seq_from[(function (){var G__397 = x__3574__auto__;
return goog.typeOf(G__397);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._entry_key[(function (){var G__401 = x__3574__auto__;
return goog.typeOf(G__401);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._comparator[(function (){var G__405 = x__3574__auto__;
return goog.typeOf(G__405);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._comparator["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj407 = {};
return obj407;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__3302__auto__ = writer;
if(and__3302__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3302__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__3574__auto__ = (((writer == null))?null:writer);
return (function (){var or__3310__auto__ = (cljs.core._write[(function (){var G__411 = x__3574__auto__;
return goog.typeOf(G__411);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._write["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__3302__auto__ = writer;
if(and__3302__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3302__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__3574__auto__ = (((writer == null))?null:writer);
return (function (){var or__3310__auto__ = (cljs.core._flush[(function (){var G__415 = x__3574__auto__;
return goog.typeOf(G__415);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._flush["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj417 = {};
return obj417;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._pr_writer[(function (){var G__421 = x__3574__auto__;
return goog.typeOf(G__421);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj423 = {};
return obj423;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__3302__auto__ = d;
if(and__3302__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3302__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__3574__auto__ = (((d == null))?null:d);
return (function (){var or__3310__auto__ = (cljs.core._realized_QMARK_[(function (){var G__427 = x__3574__auto__;
return goog.typeOf(G__427);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj429 = {};
return obj429;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._notify_watches[(function (){var G__433 = x__3574__auto__;
return goog.typeOf(G__433);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._add_watch[(function (){var G__437 = x__3574__auto__;
return goog.typeOf(G__437);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__3302__auto__ = this$;
if(and__3302__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3302__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__3574__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3310__auto__ = (cljs.core._remove_watch[(function (){var G__441 = x__3574__auto__;
return goog.typeOf(G__441);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj443 = {};
return obj443;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._as_transient[(function (){var G__447 = x__3574__auto__;
return goog.typeOf(G__447);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj449 = {};
return obj449;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__3302__auto__ = tcoll;
if(and__3302__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3302__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__3574__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3310__auto__ = (cljs.core._conj_BANG_[(function (){var G__453 = x__3574__auto__;
return goog.typeOf(G__453);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__3302__auto__ = tcoll;
if(and__3302__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3302__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__3574__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3310__auto__ = (cljs.core._persistent_BANG_[(function (){var G__457 = x__3574__auto__;
return goog.typeOf(G__457);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj459 = {};
return obj459;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__3302__auto__ = tcoll;
if(and__3302__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3302__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__3574__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3310__auto__ = (cljs.core._assoc_BANG_[(function (){var G__463 = x__3574__auto__;
return goog.typeOf(G__463);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj465 = {};
return obj465;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__3302__auto__ = tcoll;
if(and__3302__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3302__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__3574__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3310__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__469 = x__3574__auto__;
return goog.typeOf(G__469);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj471 = {};
return obj471;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3302__auto__ = tcoll;
if(and__3302__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3302__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__3574__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3310__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__475 = x__3574__auto__;
return goog.typeOf(G__475);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__3302__auto__ = tcoll;
if(and__3302__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3302__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__3574__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3310__auto__ = (cljs.core._pop_BANG_[(function (){var G__479 = x__3574__auto__;
return goog.typeOf(G__479);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj481 = {};
return obj481;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__3302__auto__ = tcoll;
if(and__3302__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3302__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__3574__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3310__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__485 = x__3574__auto__;
return goog.typeOf(G__485);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj487 = {};
return obj487;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__3302__auto__ = x;
if(and__3302__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3302__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__3574__auto__ = (((x == null))?null:x);
return (function (){var or__3310__auto__ = (cljs.core._compare[(function (){var G__491 = x__3574__auto__;
return goog.typeOf(G__491);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._compare["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj493 = {};
return obj493;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._drop_first[(function (){var G__497 = x__3574__auto__;
return goog.typeOf(G__497);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj499 = {};
return obj499;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._chunked_first[(function (){var G__503 = x__3574__auto__;
return goog.typeOf(G__503);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._chunked_rest[(function (){var G__507 = x__3574__auto__;
return goog.typeOf(G__507);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj509 = {};
return obj509;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._chunked_next[(function (){var G__513 = x__3574__auto__;
return goog.typeOf(G__513);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj515 = {};
return obj515;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__3302__auto__ = x;
if(and__3302__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3302__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__3574__auto__ = (((x == null))?null:x);
return (function (){var or__3310__auto__ = (cljs.core._name[(function (){var G__519 = x__3574__auto__;
return goog.typeOf(G__519);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._name["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__3302__auto__ = x;
if(and__3302__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3302__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__3574__auto__ = (((x == null))?null:x);
return (function (){var or__3310__auto__ = (cljs.core._namespace[(function (){var G__523 = x__3574__auto__;
return goog.typeOf(G__523);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._namespace["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj525 = {};
return obj525;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj527 = {};
return obj527;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._reset_BANG_[(function (){var G__531 = x__3574__auto__;
return goog.typeOf(G__531);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj533 = {};
return obj533;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function cljs$core$_swap_BANG_(){
var G__535 = arguments.length;
switch (G__535) {
case 2:
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (o,f){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._swap_BANG_[(function (){var G__537 = x__3574__auto__;
return goog.typeOf(G__537);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});

cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (o,f,a){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._swap_BANG_[(function (){var G__539 = x__3574__auto__;
return goog.typeOf(G__539);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});

cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (o,f,a,b){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._swap_BANG_[(function (){var G__541 = x__3574__auto__;
return goog.typeOf(G__541);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});

cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = (function (o,f,a,b,xs){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._swap_BANG_[(function (){var G__543 = x__3574__auto__;
return goog.typeOf(G__543);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});

cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj546 = {};
return obj546;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__3302__auto__ = o;
if(and__3302__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3302__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__3574__auto__ = (((o == null))?null:o);
return (function (){var or__3310__auto__ = (cljs.core._vreset_BANG_[(function (){var G__550 = x__3574__auto__;
return goog.typeOf(G__550);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj552 = {};
return obj552;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__3302__auto__ = coll;
if(and__3302__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3302__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__3574__auto__ = (((coll == null))?null:coll);
return (function (){var or__3310__auto__ = (cljs.core._iterator[(function (){var G__556 = x__3574__auto__;
return goog.typeOf(G__556);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._iterator["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__559 = (4294967295);
var G__560 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__559,G__560) : Math.imul.call(null,G__559,G__560));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__563 = a;
var G__564 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__563,G__564) : Math.imul.call(null,G__563,G__564));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__565 = (i + (2));
var G__566 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__565;
h1 = G__566;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj568 = {};
return obj568;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__569 = (i + (1));
var G__570 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__569;
hash = G__570;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj574 = {};
return obj574;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__577 = o;
if(G__577){
var bit__3601__auto__ = (G__577.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__3601__auto__) || (G__577.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__578 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__578) : Math.floor.call(null,G__578));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3302__auto__ = cljs.core.not(a.ns);
if(and__3302__auto__){
return b.ns;
} else {
return and__3302__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__585 = a.ns;
var G__586 = b.ns;
return goog.array.defaultCompare(G__585,G__586);
})();
if(((0) === nsc)){
var G__587 = a.name;
var G__588 = b.name;
return goog.array.defaultCompare(G__587,G__588);
} else {
return nsc;
}
}
} else {
var G__589 = a.name;
var G__590 = b.name;
return goog.array.defaultCompare(G__589,G__590);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.call = (function() {
var G__592 = null;
var G__592__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__592__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__592 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__592__2.call(this,self__,coll);
case 3:
return G__592__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__592.cljs$core$IFn$_invoke$arity$2 = G__592__2;
G__592.cljs$core$IFn$_invoke$arity$3 = G__592__3;
return G__592;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args591){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args591)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__3402__auto__ = self__._hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function cljs$core$symbol(){
var G__594 = arguments.length;
switch (G__594) {
case 1:
return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});

cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});

cljs.core.symbol.cljs$lang$maxFixedArity = 2;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 163841;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.call = (function() {
var G__641 = null;
var G__641__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__641__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__641__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__641__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__641__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__641__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__641__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__641__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__641__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__641__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__641__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__641__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__641__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__641__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__641__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__641__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__641__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__641__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__641__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__641__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__641__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__641__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__597 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__598 = a;
var G__599 = b;
var G__600 = c;
var G__601 = d;
var G__602 = e;
var G__603 = f;
var G__604 = g;
var G__605 = h;
var G__606 = i;
var G__607 = j;
var G__608 = k;
var G__609 = l;
var G__610 = m;
var G__611 = n;
var G__612 = o;
var G__613 = p;
var G__614 = q;
var G__615 = r;
var G__616 = s;
var G__617 = t;
var G__618 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__597,G__598,G__599,G__600,G__601,G__602,G__603,G__604,G__605,G__606,G__607,G__608,G__609,G__610,G__611,G__612,G__613,G__614,G__615,G__616,G__617,G__618) : cljs.core.apply.call(null,G__597,G__598,G__599,G__600,G__601,G__602,G__603,G__604,G__605,G__606,G__607,G__608,G__609,G__610,G__611,G__612,G__613,G__614,G__615,G__616,G__617,G__618));
});
G__641 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__641__1.call(this,self__);
case 2:
return G__641__2.call(this,self__,a);
case 3:
return G__641__3.call(this,self__,a,b);
case 4:
return G__641__4.call(this,self__,a,b,c);
case 5:
return G__641__5.call(this,self__,a,b,c,d);
case 6:
return G__641__6.call(this,self__,a,b,c,d,e);
case 7:
return G__641__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__641__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__641__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__641__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__641__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__641__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__641__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__641__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__641__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__641__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__641__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__641__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__641__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__641__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__641__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__641__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__641.cljs$core$IFn$_invoke$arity$1 = G__641__1;
G__641.cljs$core$IFn$_invoke$arity$2 = G__641__2;
G__641.cljs$core$IFn$_invoke$arity$3 = G__641__3;
G__641.cljs$core$IFn$_invoke$arity$4 = G__641__4;
G__641.cljs$core$IFn$_invoke$arity$5 = G__641__5;
G__641.cljs$core$IFn$_invoke$arity$6 = G__641__6;
G__641.cljs$core$IFn$_invoke$arity$7 = G__641__7;
G__641.cljs$core$IFn$_invoke$arity$8 = G__641__8;
G__641.cljs$core$IFn$_invoke$arity$9 = G__641__9;
G__641.cljs$core$IFn$_invoke$arity$10 = G__641__10;
G__641.cljs$core$IFn$_invoke$arity$11 = G__641__11;
G__641.cljs$core$IFn$_invoke$arity$12 = G__641__12;
G__641.cljs$core$IFn$_invoke$arity$13 = G__641__13;
G__641.cljs$core$IFn$_invoke$arity$14 = G__641__14;
G__641.cljs$core$IFn$_invoke$arity$15 = G__641__15;
G__641.cljs$core$IFn$_invoke$arity$16 = G__641__16;
G__641.cljs$core$IFn$_invoke$arity$17 = G__641__17;
G__641.cljs$core$IFn$_invoke$arity$18 = G__641__18;
G__641.cljs$core$IFn$_invoke$arity$19 = G__641__19;
G__641.cljs$core$IFn$_invoke$arity$20 = G__641__20;
G__641.cljs$core$IFn$_invoke$arity$21 = G__641__21;
G__641.cljs$core$IFn$_invoke$arity$22 = G__641__22;
return G__641;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args596){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args596)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__619 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__620 = a;
var G__621 = b;
var G__622 = c;
var G__623 = d;
var G__624 = e;
var G__625 = f;
var G__626 = g;
var G__627 = h;
var G__628 = i;
var G__629 = j;
var G__630 = k;
var G__631 = l;
var G__632 = m;
var G__633 = n;
var G__634 = o;
var G__635 = p;
var G__636 = q;
var G__637 = r;
var G__638 = s;
var G__639 = t;
var G__640 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__619,G__620,G__621,G__622,G__623,G__624,G__625,G__626,G__627,G__628,G__629,G__630,G__631,G__632,G__633,G__634,G__635,G__636,G__637,G__638,G__639,G__640) : cljs.core.apply.call(null,G__619,G__620,G__621,G__622,G__623,G__624,G__625,G__626,G__627,G__628,G__629,G__630,G__631,G__632,G__633,G__634,G__635,G__636,G__637,G__638,G__639,G__640));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__643 = x;
if(G__643){
var bit__3604__auto__ = null;
if(cljs.core.truth_((function (){var or__3310__auto__ = bit__3604__auto__;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return G__643.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__643.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__643);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__643);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__645 = value;
if(G__645){
var bit__3604__auto__ = (G__645.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__3604__auto__) || (G__645.cljs$core$ICloneable$)){
return true;
} else {
if((!G__645.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__645);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__645);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__647 = coll;
if(G__647){
var bit__3601__auto__ = (G__647.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3601__auto__) || (G__647.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__649 = coll;
if(G__649){
var bit__3601__auto__ = (G__649.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3601__auto__) || (G__649.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__651 = coll;
if(G__651){
var bit__3601__auto__ = (G__651.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3601__auto__) || (G__651.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__653 = coll;
if(G__653){
var bit__3601__auto__ = (G__653.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3601__auto__) || (G__653.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 */
cljs.core._EQ_ = (function cljs$core$_EQ_(){
var G__658 = arguments.length;
switch (G__658) {
case 1:
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return true;
});

cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});

cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
while(true){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__660 = y;
var G__661 = cljs.core.first(more);
var G__662 = cljs.core.next(more);
x = G__660;
y = G__661;
more = G__662;
continue;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
});

cljs.core._EQ_.cljs$lang$applyTo = (function (seq654){
var G__655 = cljs.core.first(seq654);
var seq654__$1 = cljs.core.next(seq654);
var G__656 = cljs.core.first(seq654__$1);
var seq654__$2 = cljs.core.next(seq654__$1);
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__655,G__656,seq654__$2);
});

cljs.core._EQ_.cljs$lang$maxFixedArity = 2;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": x, "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__663 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__663) : cljs.core.es6_iterator_seq.call(null,G__663));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__664 = (n + (1));
var G__665 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__666 = cljs.core.next(coll__$1);
n = G__664;
hash_code = G__665;
coll__$1 = G__666;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__667 = (n + (1));
var G__668 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__669 = cljs.core.next(coll__$1);
n = G__667;
hash_code = G__668;
coll__$1 = G__669;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});

Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__670 = this$__$1.valueOf();
var G__671 = other.valueOf();
return goog.array.defaultCompare(G__670,G__671);
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.Fn["function"] = true);

(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__672 = o;
return goog.getUid(G__672);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__674 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__674) : cljs.core.deref.call(null,G__674));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function cljs$core$ci_reduce(){
var G__676 = arguments.length;
switch (G__676) {
case 2:
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__677 = val;
var G__678 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__677,G__678) : f.call(null,G__677,G__678));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__684 = nval;
var G__685 = (n + (1));
val = G__684;
n = G__685;
continue;
}
} else {
return val;
}
break;
}
}
});

cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__679 = val__$1;
var G__680 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__679,G__680) : f.call(null,G__679,G__680));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__686 = nval;
var G__687 = (n + (1));
val__$1 = G__686;
n = G__687;
continue;
}
} else {
return val__$1;
}
break;
}
});

cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__681 = val__$1;
var G__682 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__681,G__682) : f.call(null,G__681,G__682));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__688 = nval;
var G__689 = (n + (1));
val__$1 = G__688;
n = G__689;
continue;
}
} else {
return val__$1;
}
break;
}
});

cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = (function cljs$core$array_reduce(){
var G__691 = arguments.length;
switch (G__691) {
case 2:
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__692 = val;
var G__693 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__692,G__693) : f.call(null,G__692,G__693));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__699 = nval;
var G__700 = (n + (1));
val = G__699;
n = G__700;
continue;
}
} else {
return val;
}
break;
}
}
});

cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__694 = val__$1;
var G__695 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__694,G__695) : f.call(null,G__694,G__695));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__701 = nval;
var G__702 = (n + (1));
val__$1 = G__701;
n = G__702;
continue;
}
} else {
return val__$1;
}
break;
}
});

cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__696 = val__$1;
var G__697 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__696,G__697) : f.call(null,G__696,G__697));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__703 = nval;
var G__704 = (n + (1));
val__$1 = G__703;
n = G__704;
continue;
}
} else {
return val__$1;
}
break;
}
});

cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__706 = x;
if(G__706){
var bit__3604__auto__ = (G__706.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3604__auto__) || (G__706.cljs$core$ICounted$)){
return true;
} else {
if((!G__706.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__706);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__706);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__708 = x;
if(G__708){
var bit__3604__auto__ = (G__708.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3604__auto__) || (G__708.cljs$core$IIndexed$)){
return true;
} else {
if((!G__708.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__708);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__708);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__709 = coll__$1;
var G__710 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__709,G__710) : cljs.core.equiv_sequential.call(null,G__709,G__710));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__711 = o;
var G__712 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__711,G__712) : cljs.core.cons.call(null,G__711,G__712));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function cljs$core$prim_seq(){
var G__714 = arguments.length;
switch (G__714) {
case 1:
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = (function (prim){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});

cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});

cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function cljs$core$array_seq(){
var G__717 = arguments.length;
switch (G__717) {
case 1:
return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});

cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});

cljs.core.array_seq.cljs$lang$maxFixedArity = 2;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__719 = coll__$1;
var G__720 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__719,G__720) : cljs.core.equiv_sequential.call(null,G__719,G__720));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__721 = cljs.core.List.EMPTY;
var G__722 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__721,G__722) : cljs.core.with_meta.call(null,G__721,G__722));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__723 = f;
var G__724 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__723,G__724) : cljs.core.seq_reduce.call(null,G__723,G__724));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__725 = f;
var G__726 = start;
var G__727 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__725,G__726,G__727) : cljs.core.seq_reduce.call(null,G__725,G__726,G__727));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__728 = o;
var G__729 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__728,G__729) : cljs.core.cons.call(null,G__728,G__729));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__730 = sn;
s = G__730;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 */
cljs.core.conj = (function cljs$core$conj(){
var G__735 = arguments.length;
switch (G__735) {
case 0:
return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.conj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = (function (coll){
return coll;
});

cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});

cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = (function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__737 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__738 = cljs.core.first(xs);
var G__739 = cljs.core.next(xs);
coll = G__737;
x = G__738;
xs = G__739;
continue;
} else {
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
});

cljs.core.conj.cljs$lang$applyTo = (function (seq731){
var G__732 = cljs.core.first(seq731);
var seq731__$1 = cljs.core.next(seq731);
var G__733 = cljs.core.first(seq731__$1);
var seq731__$2 = cljs.core.next(seq731__$1);
return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__732,G__733,seq731__$2);
});

cljs.core.conj.cljs$lang$maxFixedArity = 2;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__740 = cljs.core.next(s);
var G__741 = (acc + (1));
s = G__740;
acc = G__741;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__743 = coll;
if(G__743){
var bit__3601__auto__ = (G__743.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3601__auto__) || (G__743.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function cljs$core$linear_traversal_nth(){
var G__745 = arguments.length;
switch (G__745) {
case 2:
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__747 = cljs.core.next(coll);
var G__748 = (n - (1));
coll = G__747;
n = G__748;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});

cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__749 = cljs.core.next(coll);
var G__750 = (n - (1));
var G__751 = not_found;
coll = G__749;
n = G__750;
not_found = G__751;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});

cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function cljs$core$nth(){
var G__753 = arguments.length;
switch (G__753) {
case 2:
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__754 = coll;
if(G__754){
var bit__3601__auto__ = (G__754.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3601__auto__) || (G__754.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__755 = coll;
if(G__755){
var bit__3604__auto__ = (G__755.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3604__auto__) || (G__755.cljs$core$ISeq$)){
return true;
} else {
if((!G__755.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__755);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__755);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});

cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__756 = coll;
if(G__756){
var bit__3601__auto__ = (G__756.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3601__auto__) || (G__756.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__757 = coll;
if(G__757){
var bit__3604__auto__ = (G__757.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3604__auto__) || (G__757.cljs$core$ISeq$)){
return true;
} else {
if((!G__757.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__757);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__757);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});

cljs.core.nth.cljs$lang$maxFixedArity = 3;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__759 = (n__$1 - (1));
var G__760 = cljs.core.rest(xs);
n__$1 = G__759;
xs = G__760;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function cljs$core$get(){
var G__762 = arguments.length;
switch (G__762) {
case 2:
return cljs.core.get.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.get.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.get.cljs$core$IFn$_invoke$arity$2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__763 = o;
if(G__763){
var bit__3601__auto__ = (G__763.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3601__auto__) || (G__763.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});

cljs.core.get.cljs$core$IFn$_invoke$arity$3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__764 = o;
if(G__764){
var bit__3601__auto__ = (G__764.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3601__auto__) || (G__764.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});

cljs.core.get.cljs$lang$maxFixedArity = 3;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 */
cljs.core.assoc = (function cljs$core$assoc(){
var G__771 = arguments.length;
switch (G__771) {
case 3:
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});

cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = (function (coll,k,v,kvs){
while(true){
var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__773 = ret;
var G__774 = cljs.core.first(kvs);
var G__775 = cljs.core.second(kvs);
var G__776 = cljs.core.nnext(kvs);
coll = G__773;
k = G__774;
v = G__775;
kvs = G__776;
continue;
} else {
return ret;
}
break;
}
});

cljs.core.assoc.cljs$lang$applyTo = (function (seq766){
var G__767 = cljs.core.first(seq766);
var seq766__$1 = cljs.core.next(seq766);
var G__768 = cljs.core.first(seq766__$1);
var seq766__$2 = cljs.core.next(seq766__$1);
var G__769 = cljs.core.first(seq766__$2);
var seq766__$3 = cljs.core.next(seq766__$2);
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__767,G__768,G__769,seq766__$3);
});

cljs.core.assoc.cljs$lang$maxFixedArity = 3;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 */
cljs.core.dissoc = (function cljs$core$dissoc(){
var G__781 = arguments.length;
switch (G__781) {
case 1:
return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = (function (coll){
return coll;
});

cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});

cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = (function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__783 = ret;
var G__784 = cljs.core.first(ks);
var G__785 = cljs.core.next(ks);
coll = G__783;
k = G__784;
ks = G__785;
continue;
} else {
return ret;
}
}
break;
}
});

cljs.core.dissoc.cljs$lang$applyTo = (function (seq777){
var G__778 = cljs.core.first(seq777);
var seq777__$1 = cljs.core.next(seq777);
var G__779 = cljs.core.first(seq777__$1);
var seq777__$2 = cljs.core.next(seq777__$1);
return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__778,G__779,seq777__$2);
});

cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__3310__auto__ = (function (){var G__790 = f;
return goog.isFunction(G__790);
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var G__791 = f;
if(G__791){
var bit__3604__auto__ = null;
if(cljs.core.truth_((function (){var or__3310__auto____$1 = bit__3604__auto__;
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
return G__791.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__791.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__791);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__791);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 393217;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.call = (function() {
var G__1257 = null;
var G__1257__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__1257__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__793 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__793) : self__.afn.call(null,G__793));
});
var G__1257__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__794 = a;
var G__795 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__794,G__795) : self__.afn.call(null,G__794,G__795));
});
var G__1257__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__796 = a;
var G__797 = b;
var G__798 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__796,G__797,G__798) : self__.afn.call(null,G__796,G__797,G__798));
});
var G__1257__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__799 = a;
var G__800 = b;
var G__801 = c;
var G__802 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__799,G__800,G__801,G__802) : self__.afn.call(null,G__799,G__800,G__801,G__802));
});
var G__1257__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__803 = a;
var G__804 = b;
var G__805 = c;
var G__806 = d;
var G__807 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__803,G__804,G__805,G__806,G__807) : self__.afn.call(null,G__803,G__804,G__805,G__806,G__807));
});
var G__1257__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__808 = a;
var G__809 = b;
var G__810 = c;
var G__811 = d;
var G__812 = e;
var G__813 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__808,G__809,G__810,G__811,G__812,G__813) : self__.afn.call(null,G__808,G__809,G__810,G__811,G__812,G__813));
});
var G__1257__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__814 = a;
var G__815 = b;
var G__816 = c;
var G__817 = d;
var G__818 = e;
var G__819 = f;
var G__820 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__814,G__815,G__816,G__817,G__818,G__819,G__820) : self__.afn.call(null,G__814,G__815,G__816,G__817,G__818,G__819,G__820));
});
var G__1257__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__821 = a;
var G__822 = b;
var G__823 = c;
var G__824 = d;
var G__825 = e;
var G__826 = f;
var G__827 = g;
var G__828 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__821,G__822,G__823,G__824,G__825,G__826,G__827,G__828) : self__.afn.call(null,G__821,G__822,G__823,G__824,G__825,G__826,G__827,G__828));
});
var G__1257__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__829 = a;
var G__830 = b;
var G__831 = c;
var G__832 = d;
var G__833 = e;
var G__834 = f;
var G__835 = g;
var G__836 = h;
var G__837 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__829,G__830,G__831,G__832,G__833,G__834,G__835,G__836,G__837) : self__.afn.call(null,G__829,G__830,G__831,G__832,G__833,G__834,G__835,G__836,G__837));
});
var G__1257__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__838 = a;
var G__839 = b;
var G__840 = c;
var G__841 = d;
var G__842 = e;
var G__843 = f;
var G__844 = g;
var G__845 = h;
var G__846 = i;
var G__847 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__838,G__839,G__840,G__841,G__842,G__843,G__844,G__845,G__846,G__847) : self__.afn.call(null,G__838,G__839,G__840,G__841,G__842,G__843,G__844,G__845,G__846,G__847));
});
var G__1257__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__848 = a;
var G__849 = b;
var G__850 = c;
var G__851 = d;
var G__852 = e;
var G__853 = f;
var G__854 = g;
var G__855 = h;
var G__856 = i;
var G__857 = j;
var G__858 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__848,G__849,G__850,G__851,G__852,G__853,G__854,G__855,G__856,G__857,G__858) : self__.afn.call(null,G__848,G__849,G__850,G__851,G__852,G__853,G__854,G__855,G__856,G__857,G__858));
});
var G__1257__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__859 = a;
var G__860 = b;
var G__861 = c;
var G__862 = d;
var G__863 = e;
var G__864 = f;
var G__865 = g;
var G__866 = h;
var G__867 = i;
var G__868 = j;
var G__869 = k;
var G__870 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__859,G__860,G__861,G__862,G__863,G__864,G__865,G__866,G__867,G__868,G__869,G__870) : self__.afn.call(null,G__859,G__860,G__861,G__862,G__863,G__864,G__865,G__866,G__867,G__868,G__869,G__870));
});
var G__1257__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__871 = a;
var G__872 = b;
var G__873 = c;
var G__874 = d;
var G__875 = e;
var G__876 = f;
var G__877 = g;
var G__878 = h;
var G__879 = i;
var G__880 = j;
var G__881 = k;
var G__882 = l;
var G__883 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__871,G__872,G__873,G__874,G__875,G__876,G__877,G__878,G__879,G__880,G__881,G__882,G__883) : self__.afn.call(null,G__871,G__872,G__873,G__874,G__875,G__876,G__877,G__878,G__879,G__880,G__881,G__882,G__883));
});
var G__1257__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__884 = a;
var G__885 = b;
var G__886 = c;
var G__887 = d;
var G__888 = e;
var G__889 = f;
var G__890 = g;
var G__891 = h;
var G__892 = i;
var G__893 = j;
var G__894 = k;
var G__895 = l;
var G__896 = m;
var G__897 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__884,G__885,G__886,G__887,G__888,G__889,G__890,G__891,G__892,G__893,G__894,G__895,G__896,G__897) : self__.afn.call(null,G__884,G__885,G__886,G__887,G__888,G__889,G__890,G__891,G__892,G__893,G__894,G__895,G__896,G__897));
});
var G__1257__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__898 = a;
var G__899 = b;
var G__900 = c;
var G__901 = d;
var G__902 = e;
var G__903 = f;
var G__904 = g;
var G__905 = h;
var G__906 = i;
var G__907 = j;
var G__908 = k;
var G__909 = l;
var G__910 = m;
var G__911 = n;
var G__912 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__898,G__899,G__900,G__901,G__902,G__903,G__904,G__905,G__906,G__907,G__908,G__909,G__910,G__911,G__912) : self__.afn.call(null,G__898,G__899,G__900,G__901,G__902,G__903,G__904,G__905,G__906,G__907,G__908,G__909,G__910,G__911,G__912));
});
var G__1257__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__913 = a;
var G__914 = b;
var G__915 = c;
var G__916 = d;
var G__917 = e;
var G__918 = f;
var G__919 = g;
var G__920 = h;
var G__921 = i;
var G__922 = j;
var G__923 = k;
var G__924 = l;
var G__925 = m;
var G__926 = n;
var G__927 = o;
var G__928 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__913,G__914,G__915,G__916,G__917,G__918,G__919,G__920,G__921,G__922,G__923,G__924,G__925,G__926,G__927,G__928) : self__.afn.call(null,G__913,G__914,G__915,G__916,G__917,G__918,G__919,G__920,G__921,G__922,G__923,G__924,G__925,G__926,G__927,G__928));
});
var G__1257__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__929 = a;
var G__930 = b;
var G__931 = c;
var G__932 = d;
var G__933 = e;
var G__934 = f;
var G__935 = g;
var G__936 = h;
var G__937 = i;
var G__938 = j;
var G__939 = k;
var G__940 = l;
var G__941 = m;
var G__942 = n;
var G__943 = o;
var G__944 = p;
var G__945 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__929,G__930,G__931,G__932,G__933,G__934,G__935,G__936,G__937,G__938,G__939,G__940,G__941,G__942,G__943,G__944,G__945) : self__.afn.call(null,G__929,G__930,G__931,G__932,G__933,G__934,G__935,G__936,G__937,G__938,G__939,G__940,G__941,G__942,G__943,G__944,G__945));
});
var G__1257__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__946 = a;
var G__947 = b;
var G__948 = c;
var G__949 = d;
var G__950 = e;
var G__951 = f;
var G__952 = g;
var G__953 = h;
var G__954 = i;
var G__955 = j;
var G__956 = k;
var G__957 = l;
var G__958 = m;
var G__959 = n;
var G__960 = o;
var G__961 = p;
var G__962 = q;
var G__963 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__946,G__947,G__948,G__949,G__950,G__951,G__952,G__953,G__954,G__955,G__956,G__957,G__958,G__959,G__960,G__961,G__962,G__963) : self__.afn.call(null,G__946,G__947,G__948,G__949,G__950,G__951,G__952,G__953,G__954,G__955,G__956,G__957,G__958,G__959,G__960,G__961,G__962,G__963));
});
var G__1257__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__964 = a;
var G__965 = b;
var G__966 = c;
var G__967 = d;
var G__968 = e;
var G__969 = f;
var G__970 = g;
var G__971 = h;
var G__972 = i;
var G__973 = j;
var G__974 = k;
var G__975 = l;
var G__976 = m;
var G__977 = n;
var G__978 = o;
var G__979 = p;
var G__980 = q;
var G__981 = r;
var G__982 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__964,G__965,G__966,G__967,G__968,G__969,G__970,G__971,G__972,G__973,G__974,G__975,G__976,G__977,G__978,G__979,G__980,G__981,G__982) : self__.afn.call(null,G__964,G__965,G__966,G__967,G__968,G__969,G__970,G__971,G__972,G__973,G__974,G__975,G__976,G__977,G__978,G__979,G__980,G__981,G__982));
});
var G__1257__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__983 = a;
var G__984 = b;
var G__985 = c;
var G__986 = d;
var G__987 = e;
var G__988 = f;
var G__989 = g;
var G__990 = h;
var G__991 = i;
var G__992 = j;
var G__993 = k;
var G__994 = l;
var G__995 = m;
var G__996 = n;
var G__997 = o;
var G__998 = p;
var G__999 = q;
var G__1000 = r;
var G__1001 = s;
var G__1002 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__983,G__984,G__985,G__986,G__987,G__988,G__989,G__990,G__991,G__992,G__993,G__994,G__995,G__996,G__997,G__998,G__999,G__1000,G__1001,G__1002) : self__.afn.call(null,G__983,G__984,G__985,G__986,G__987,G__988,G__989,G__990,G__991,G__992,G__993,G__994,G__995,G__996,G__997,G__998,G__999,G__1000,G__1001,G__1002));
});
var G__1257__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1003 = self__.afn;
var G__1004 = a;
var G__1005 = b;
var G__1006 = c;
var G__1007 = d;
var G__1008 = e;
var G__1009 = f;
var G__1010 = g;
var G__1011 = h;
var G__1012 = i;
var G__1013 = j;
var G__1014 = k;
var G__1015 = l;
var G__1016 = m;
var G__1017 = n;
var G__1018 = o;
var G__1019 = p;
var G__1020 = q;
var G__1021 = r;
var G__1022 = s;
var G__1023 = t;
var G__1024 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1003,G__1004,G__1005,G__1006,G__1007,G__1008,G__1009,G__1010,G__1011,G__1012,G__1013,G__1014,G__1015,G__1016,G__1017,G__1018,G__1019,G__1020,G__1021,G__1022,G__1023,G__1024) : cljs.core.apply.call(null,G__1003,G__1004,G__1005,G__1006,G__1007,G__1008,G__1009,G__1010,G__1011,G__1012,G__1013,G__1014,G__1015,G__1016,G__1017,G__1018,G__1019,G__1020,G__1021,G__1022,G__1023,G__1024));
});
G__1257 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__1257__1.call(this,self__);
case 2:
return G__1257__2.call(this,self__,a);
case 3:
return G__1257__3.call(this,self__,a,b);
case 4:
return G__1257__4.call(this,self__,a,b,c);
case 5:
return G__1257__5.call(this,self__,a,b,c,d);
case 6:
return G__1257__6.call(this,self__,a,b,c,d,e);
case 7:
return G__1257__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__1257__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__1257__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__1257__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__1257__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__1257__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__1257__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__1257__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__1257__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__1257__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__1257__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__1257__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__1257__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__1257__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__1257__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__1257__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1257.cljs$core$IFn$_invoke$arity$1 = G__1257__1;
G__1257.cljs$core$IFn$_invoke$arity$2 = G__1257__2;
G__1257.cljs$core$IFn$_invoke$arity$3 = G__1257__3;
G__1257.cljs$core$IFn$_invoke$arity$4 = G__1257__4;
G__1257.cljs$core$IFn$_invoke$arity$5 = G__1257__5;
G__1257.cljs$core$IFn$_invoke$arity$6 = G__1257__6;
G__1257.cljs$core$IFn$_invoke$arity$7 = G__1257__7;
G__1257.cljs$core$IFn$_invoke$arity$8 = G__1257__8;
G__1257.cljs$core$IFn$_invoke$arity$9 = G__1257__9;
G__1257.cljs$core$IFn$_invoke$arity$10 = G__1257__10;
G__1257.cljs$core$IFn$_invoke$arity$11 = G__1257__11;
G__1257.cljs$core$IFn$_invoke$arity$12 = G__1257__12;
G__1257.cljs$core$IFn$_invoke$arity$13 = G__1257__13;
G__1257.cljs$core$IFn$_invoke$arity$14 = G__1257__14;
G__1257.cljs$core$IFn$_invoke$arity$15 = G__1257__15;
G__1257.cljs$core$IFn$_invoke$arity$16 = G__1257__16;
G__1257.cljs$core$IFn$_invoke$arity$17 = G__1257__17;
G__1257.cljs$core$IFn$_invoke$arity$18 = G__1257__18;
G__1257.cljs$core$IFn$_invoke$arity$19 = G__1257__19;
G__1257.cljs$core$IFn$_invoke$arity$20 = G__1257__20;
G__1257.cljs$core$IFn$_invoke$arity$21 = G__1257__21;
G__1257.cljs$core$IFn$_invoke$arity$22 = G__1257__22;
return G__1257;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args792){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args792)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__1025 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__1025) : self__.afn.call(null,G__1025));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__1026 = a;
var G__1027 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__1026,G__1027) : self__.afn.call(null,G__1026,G__1027));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__1028 = a;
var G__1029 = b;
var G__1030 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__1028,G__1029,G__1030) : self__.afn.call(null,G__1028,G__1029,G__1030));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__1031 = a;
var G__1032 = b;
var G__1033 = c;
var G__1034 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__1031,G__1032,G__1033,G__1034) : self__.afn.call(null,G__1031,G__1032,G__1033,G__1034));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__1035 = a;
var G__1036 = b;
var G__1037 = c;
var G__1038 = d;
var G__1039 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__1035,G__1036,G__1037,G__1038,G__1039) : self__.afn.call(null,G__1035,G__1036,G__1037,G__1038,G__1039));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__1040 = a;
var G__1041 = b;
var G__1042 = c;
var G__1043 = d;
var G__1044 = e;
var G__1045 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__1040,G__1041,G__1042,G__1043,G__1044,G__1045) : self__.afn.call(null,G__1040,G__1041,G__1042,G__1043,G__1044,G__1045));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__1046 = a;
var G__1047 = b;
var G__1048 = c;
var G__1049 = d;
var G__1050 = e;
var G__1051 = f;
var G__1052 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__1046,G__1047,G__1048,G__1049,G__1050,G__1051,G__1052) : self__.afn.call(null,G__1046,G__1047,G__1048,G__1049,G__1050,G__1051,G__1052));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__1053 = a;
var G__1054 = b;
var G__1055 = c;
var G__1056 = d;
var G__1057 = e;
var G__1058 = f;
var G__1059 = g;
var G__1060 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__1053,G__1054,G__1055,G__1056,G__1057,G__1058,G__1059,G__1060) : self__.afn.call(null,G__1053,G__1054,G__1055,G__1056,G__1057,G__1058,G__1059,G__1060));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__1061 = a;
var G__1062 = b;
var G__1063 = c;
var G__1064 = d;
var G__1065 = e;
var G__1066 = f;
var G__1067 = g;
var G__1068 = h;
var G__1069 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__1061,G__1062,G__1063,G__1064,G__1065,G__1066,G__1067,G__1068,G__1069) : self__.afn.call(null,G__1061,G__1062,G__1063,G__1064,G__1065,G__1066,G__1067,G__1068,G__1069));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__1070 = a;
var G__1071 = b;
var G__1072 = c;
var G__1073 = d;
var G__1074 = e;
var G__1075 = f;
var G__1076 = g;
var G__1077 = h;
var G__1078 = i;
var G__1079 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__1070,G__1071,G__1072,G__1073,G__1074,G__1075,G__1076,G__1077,G__1078,G__1079) : self__.afn.call(null,G__1070,G__1071,G__1072,G__1073,G__1074,G__1075,G__1076,G__1077,G__1078,G__1079));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__1080 = a;
var G__1081 = b;
var G__1082 = c;
var G__1083 = d;
var G__1084 = e;
var G__1085 = f;
var G__1086 = g;
var G__1087 = h;
var G__1088 = i;
var G__1089 = j;
var G__1090 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__1080,G__1081,G__1082,G__1083,G__1084,G__1085,G__1086,G__1087,G__1088,G__1089,G__1090) : self__.afn.call(null,G__1080,G__1081,G__1082,G__1083,G__1084,G__1085,G__1086,G__1087,G__1088,G__1089,G__1090));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__1091 = a;
var G__1092 = b;
var G__1093 = c;
var G__1094 = d;
var G__1095 = e;
var G__1096 = f;
var G__1097 = g;
var G__1098 = h;
var G__1099 = i;
var G__1100 = j;
var G__1101 = k;
var G__1102 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__1091,G__1092,G__1093,G__1094,G__1095,G__1096,G__1097,G__1098,G__1099,G__1100,G__1101,G__1102) : self__.afn.call(null,G__1091,G__1092,G__1093,G__1094,G__1095,G__1096,G__1097,G__1098,G__1099,G__1100,G__1101,G__1102));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__1103 = a;
var G__1104 = b;
var G__1105 = c;
var G__1106 = d;
var G__1107 = e;
var G__1108 = f;
var G__1109 = g;
var G__1110 = h;
var G__1111 = i;
var G__1112 = j;
var G__1113 = k;
var G__1114 = l;
var G__1115 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__1103,G__1104,G__1105,G__1106,G__1107,G__1108,G__1109,G__1110,G__1111,G__1112,G__1113,G__1114,G__1115) : self__.afn.call(null,G__1103,G__1104,G__1105,G__1106,G__1107,G__1108,G__1109,G__1110,G__1111,G__1112,G__1113,G__1114,G__1115));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__1116 = a;
var G__1117 = b;
var G__1118 = c;
var G__1119 = d;
var G__1120 = e;
var G__1121 = f;
var G__1122 = g;
var G__1123 = h;
var G__1124 = i;
var G__1125 = j;
var G__1126 = k;
var G__1127 = l;
var G__1128 = m;
var G__1129 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__1116,G__1117,G__1118,G__1119,G__1120,G__1121,G__1122,G__1123,G__1124,G__1125,G__1126,G__1127,G__1128,G__1129) : self__.afn.call(null,G__1116,G__1117,G__1118,G__1119,G__1120,G__1121,G__1122,G__1123,G__1124,G__1125,G__1126,G__1127,G__1128,G__1129));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__1130 = a;
var G__1131 = b;
var G__1132 = c;
var G__1133 = d;
var G__1134 = e;
var G__1135 = f;
var G__1136 = g;
var G__1137 = h;
var G__1138 = i;
var G__1139 = j;
var G__1140 = k;
var G__1141 = l;
var G__1142 = m;
var G__1143 = n;
var G__1144 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__1130,G__1131,G__1132,G__1133,G__1134,G__1135,G__1136,G__1137,G__1138,G__1139,G__1140,G__1141,G__1142,G__1143,G__1144) : self__.afn.call(null,G__1130,G__1131,G__1132,G__1133,G__1134,G__1135,G__1136,G__1137,G__1138,G__1139,G__1140,G__1141,G__1142,G__1143,G__1144));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__1145 = a;
var G__1146 = b;
var G__1147 = c;
var G__1148 = d;
var G__1149 = e;
var G__1150 = f;
var G__1151 = g;
var G__1152 = h;
var G__1153 = i;
var G__1154 = j;
var G__1155 = k;
var G__1156 = l;
var G__1157 = m;
var G__1158 = n;
var G__1159 = o;
var G__1160 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__1145,G__1146,G__1147,G__1148,G__1149,G__1150,G__1151,G__1152,G__1153,G__1154,G__1155,G__1156,G__1157,G__1158,G__1159,G__1160) : self__.afn.call(null,G__1145,G__1146,G__1147,G__1148,G__1149,G__1150,G__1151,G__1152,G__1153,G__1154,G__1155,G__1156,G__1157,G__1158,G__1159,G__1160));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__1161 = a;
var G__1162 = b;
var G__1163 = c;
var G__1164 = d;
var G__1165 = e;
var G__1166 = f;
var G__1167 = g;
var G__1168 = h;
var G__1169 = i;
var G__1170 = j;
var G__1171 = k;
var G__1172 = l;
var G__1173 = m;
var G__1174 = n;
var G__1175 = o;
var G__1176 = p;
var G__1177 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__1161,G__1162,G__1163,G__1164,G__1165,G__1166,G__1167,G__1168,G__1169,G__1170,G__1171,G__1172,G__1173,G__1174,G__1175,G__1176,G__1177) : self__.afn.call(null,G__1161,G__1162,G__1163,G__1164,G__1165,G__1166,G__1167,G__1168,G__1169,G__1170,G__1171,G__1172,G__1173,G__1174,G__1175,G__1176,G__1177));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__1178 = a;
var G__1179 = b;
var G__1180 = c;
var G__1181 = d;
var G__1182 = e;
var G__1183 = f;
var G__1184 = g;
var G__1185 = h;
var G__1186 = i;
var G__1187 = j;
var G__1188 = k;
var G__1189 = l;
var G__1190 = m;
var G__1191 = n;
var G__1192 = o;
var G__1193 = p;
var G__1194 = q;
var G__1195 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__1178,G__1179,G__1180,G__1181,G__1182,G__1183,G__1184,G__1185,G__1186,G__1187,G__1188,G__1189,G__1190,G__1191,G__1192,G__1193,G__1194,G__1195) : self__.afn.call(null,G__1178,G__1179,G__1180,G__1181,G__1182,G__1183,G__1184,G__1185,G__1186,G__1187,G__1188,G__1189,G__1190,G__1191,G__1192,G__1193,G__1194,G__1195));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__1196 = a;
var G__1197 = b;
var G__1198 = c;
var G__1199 = d;
var G__1200 = e;
var G__1201 = f;
var G__1202 = g;
var G__1203 = h;
var G__1204 = i;
var G__1205 = j;
var G__1206 = k;
var G__1207 = l;
var G__1208 = m;
var G__1209 = n;
var G__1210 = o;
var G__1211 = p;
var G__1212 = q;
var G__1213 = r;
var G__1214 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__1196,G__1197,G__1198,G__1199,G__1200,G__1201,G__1202,G__1203,G__1204,G__1205,G__1206,G__1207,G__1208,G__1209,G__1210,G__1211,G__1212,G__1213,G__1214) : self__.afn.call(null,G__1196,G__1197,G__1198,G__1199,G__1200,G__1201,G__1202,G__1203,G__1204,G__1205,G__1206,G__1207,G__1208,G__1209,G__1210,G__1211,G__1212,G__1213,G__1214));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__1215 = a;
var G__1216 = b;
var G__1217 = c;
var G__1218 = d;
var G__1219 = e;
var G__1220 = f;
var G__1221 = g;
var G__1222 = h;
var G__1223 = i;
var G__1224 = j;
var G__1225 = k;
var G__1226 = l;
var G__1227 = m;
var G__1228 = n;
var G__1229 = o;
var G__1230 = p;
var G__1231 = q;
var G__1232 = r;
var G__1233 = s;
var G__1234 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__1215,G__1216,G__1217,G__1218,G__1219,G__1220,G__1221,G__1222,G__1223,G__1224,G__1225,G__1226,G__1227,G__1228,G__1229,G__1230,G__1231,G__1232,G__1233,G__1234) : self__.afn.call(null,G__1215,G__1216,G__1217,G__1218,G__1219,G__1220,G__1221,G__1222,G__1223,G__1224,G__1225,G__1226,G__1227,G__1228,G__1229,G__1230,G__1231,G__1232,G__1233,G__1234));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__1235 = self__.afn;
var G__1236 = a;
var G__1237 = b;
var G__1238 = c;
var G__1239 = d;
var G__1240 = e;
var G__1241 = f;
var G__1242 = g;
var G__1243 = h;
var G__1244 = i;
var G__1245 = j;
var G__1246 = k;
var G__1247 = l;
var G__1248 = m;
var G__1249 = n;
var G__1250 = o;
var G__1251 = p;
var G__1252 = q;
var G__1253 = r;
var G__1254 = s;
var G__1255 = t;
var G__1256 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1235,G__1236,G__1237,G__1238,G__1239,G__1240,G__1241,G__1242,G__1243,G__1244,G__1245,G__1246,G__1247,G__1248,G__1249,G__1250,G__1251,G__1252,G__1253,G__1254,G__1255,G__1256) : cljs.core.apply.call(null,G__1235,G__1236,G__1237,G__1238,G__1239,G__1240,G__1241,G__1242,G__1243,G__1244,G__1245,G__1246,G__1247,G__1248,G__1249,G__1250,G__1251,G__1252,G__1253,G__1254,G__1255,G__1256));
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__1261 = o;
if(G__1261){
var bit__3604__auto__ = (G__1261.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__3604__auto__) || (G__1261.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__1261.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__1261);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__1261);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__3302__auto__ = !((o == null));
if(and__3302__auto__){
var G__1265 = o;
if(G__1265){
var bit__3604__auto__ = (G__1265.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3604__auto__) || (G__1265.cljs$core$IMeta$)){
return true;
} else {
if((!G__1265.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__1265);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__1265);
}
} else {
return and__3302__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 */
cljs.core.disj = (function cljs$core$disj(){
var G__1270 = arguments.length;
switch (G__1270) {
case 1:
return cljs.core.disj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.disj.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = (function (coll){
return coll;
});

cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});

cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = (function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__1272 = ret;
var G__1273 = cljs.core.first(ks);
var G__1274 = cljs.core.next(ks);
coll = G__1272;
k = G__1273;
ks = G__1274;
continue;
} else {
return ret;
}
}
break;
}
});

cljs.core.disj.cljs$lang$applyTo = (function (seq1266){
var G__1267 = cljs.core.first(seq1266);
var seq1266__$1 = cljs.core.next(seq1266);
var G__1268 = cljs.core.first(seq1266__$1);
var seq1266__$2 = cljs.core.next(seq1266__$1);
return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__1267,G__1268,seq1266__$2);
});

cljs.core.disj.cljs$lang$maxFixedArity = 2;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1276 = x;
if(G__1276){
var bit__3604__auto__ = (G__1276.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__3604__auto__) || (G__1276.cljs$core$ICollection$)){
return true;
} else {
if((!G__1276.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__1276);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__1276);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1278 = x;
if(G__1278){
var bit__3604__auto__ = (G__1278.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__3604__auto__) || (G__1278.cljs$core$ISet$)){
return true;
} else {
if((!G__1278.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__1278);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__1278);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__1280 = x;
if(G__1280){
var bit__3604__auto__ = (G__1280.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__3604__auto__) || (G__1280.cljs$core$IAssociative$)){
return true;
} else {
if((!G__1280.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__1280);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__1280);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__1282 = x;
if(G__1282){
var bit__3604__auto__ = (G__1282.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__3604__auto__) || (G__1282.cljs$core$ISequential$)){
return true;
} else {
if((!G__1282.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__1282);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__1282);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__1284 = x;
if(G__1284){
var bit__3604__auto__ = (G__1284.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__3604__auto__) || (G__1284.cljs$core$ISorted$)){
return true;
} else {
if((!G__1284.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__1284);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__1284);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__1286 = x;
if(G__1286){
var bit__3604__auto__ = (G__1286.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3604__auto__) || (G__1286.cljs$core$IReduce$)){
return true;
} else {
if((!G__1286.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__1286);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__1286);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1288 = x;
if(G__1288){
var bit__3604__auto__ = (G__1288.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3604__auto__) || (G__1288.cljs$core$IMap$)){
return true;
} else {
if((!G__1288.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__1288);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__1288);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__1290 = x;
if(G__1290){
var bit__3604__auto__ = (G__1290.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__3604__auto__) || (G__1290.cljs$core$IVector$)){
return true;
} else {
if((!G__1290.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__1290);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__1290);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__1292 = x;
if(G__1292){
var bit__3601__auto__ = (G__1292.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__3601__auto__) || (G__1292.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 */
cljs.core.js_obj = (function cljs$core$js_obj(){
var G__1295 = arguments.length;
switch (G__1295) {
case 0:
return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,0),(0)));
return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__3834__auto__);

}
});

cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = (function (){
var obj1297 = {};
return obj1297;
});

cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = (function (keyvals){
var G__1298 = goog.object.create;
var G__1299 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__1298,G__1299) : cljs.core.apply.call(null,G__1298,G__1299));
});

cljs.core.js_obj.cljs$lang$applyTo = (function (seq1293){
return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq1293));
});

cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__1303_1305 = obj;
var G__1304_1306 = ((function (G__1303_1305,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__1303_1305,keys))
;
goog.object.forEach(G__1303_1305,G__1304_1306);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__1307 = (i__$1 + (1));
var G__1308 = (j__$1 + (1));
var G__1309 = (len__$1 - (1));
i__$1 = G__1307;
j__$1 = G__1308;
len__$1 = G__1309;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__1310 = (i__$1 - (1));
var G__1311 = (j__$1 - (1));
var G__1312 = (len__$1 - (1));
i__$1 = G__1310;
j__$1 = G__1311;
len__$1 = G__1312;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj1314 = {};
return obj1314;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__1316 = s;
if(G__1316){
var bit__3604__auto__ = (G__1316.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3604__auto__) || (G__1316.cljs$core$ISeq$)){
return true;
} else {
if((!G__1316.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1316);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1316);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__1318 = s;
if(G__1318){
var bit__3604__auto__ = (G__1318.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3604__auto__) || (G__1318.cljs$core$ISeqable$)){
return true;
} else {
if((!G__1318.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__1318);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__1318);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__3310__auto__ = cljs.core.fn_QMARK_(f);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var G__1322 = f;
if(G__1322){
var bit__3604__auto__ = (G__1322.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__3604__auto__) || (G__1322.cljs$core$IFn$)){
return true;
} else {
if((!G__1322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__1322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__1322);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__1335 = n;
return isNaN(G__1335);
})())) && (!((n === Infinity))) && (((function (){var G__1336 = n;
return parseFloat(G__1336);
})() === (function (){var G__1337 = n;
var G__1338 = (10);
return parseInt(G__1337,G__1338);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 */
cljs.core.distinct_QMARK_ = (function cljs$core$distinct_QMARK_(){
var G__1343 = arguments.length;
switch (G__1343) {
case 1:
return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return true;
});

cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});

cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__1345 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__1346 = etc;
s = G__1345;
xs = G__1346;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
});

cljs.core.distinct_QMARK_.cljs$lang$applyTo = (function (seq1339){
var G__1340 = cljs.core.first(seq1339);
var seq1339__$1 = cljs.core.next(seq1339);
var G__1341 = cljs.core.first(seq1339__$1);
var seq1339__$2 = cljs.core.next(seq1339__$1);
return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__1340,G__1341,seq1339__$2);
});

cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__1350 = x;
if(G__1350){
var bit__3601__auto__ = (G__1350.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__3601__auto__) || (G__1350.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__1351 = x;
var G__1352 = y;
return goog.array.defaultCompare(G__1351,G__1352);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function cljs$core$compare_indexed(){
var G__1354 = arguments.length;
switch (G__1354) {
case 2:
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 4:
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
if((xl === (0))){
return (0);
} else {
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
}
});

cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__1356 = xs;
var G__1357 = ys;
var G__1358 = len;
var G__1359 = (n + (1));
xs = G__1356;
ys = G__1357;
len = G__1358;
n = G__1359;
continue;
} else {
return d;
}
break;
}
});

cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__1364 = x;
var G__1365 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1364,G__1365) : f.call(null,G__1364,G__1365));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__1366 = y;
var G__1367 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1366,G__1367) : f.call(null,G__1366,G__1367));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function cljs$core$sort(){
var G__1369 = arguments.length;
switch (G__1369) {
case 1:
return cljs.core.sort.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = (function (coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});

cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__1370 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__1370) : cljs.core.to_array.call(null,G__1370));
})();
var G__1371_1374 = a;
var G__1372_1375 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__1371_1374,G__1372_1375);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.sort.cljs$lang$maxFixedArity = 2;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function cljs$core$sort_by(){
var G__1377 = arguments.length;
switch (G__1377) {
case 2:
return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = (function (keyfn,coll){
return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});

cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__1378 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__1378) : keyfn.call(null,G__1378));
})(),(function (){var G__1379 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__1379) : keyfn.call(null,G__1379));
})());
}),coll);
});

cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = (function cljs$core$seq_reduce(){
var G__1382 = arguments.length;
switch (G__1382) {
case 2:
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
var temp__4402__auto__ = cljs.core.seq(coll);
if(temp__4402__auto__){
var s = temp__4402__auto__;
var G__1383 = f;
var G__1384 = cljs.core.first(s);
var G__1385 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__1383,G__1384,G__1385) : cljs.core.reduce.call(null,G__1383,G__1384,G__1385));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});

cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__1386 = val__$1;
var G__1387 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1386,G__1387) : f.call(null,G__1386,G__1387));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1389 = nval;
var G__1390 = cljs.core.next(coll__$1);
val__$1 = G__1389;
coll__$1 = G__1390;
continue;
}
} else {
return val__$1;
}
break;
}
});

cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__1394 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__1394) : cljs.core.to_array.call(null,G__1394));
})();
var G__1395_1397 = a;
goog.array.shuffle(G__1395_1397);

var G__1396 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__1396) : cljs.core.vec.call(null,G__1396));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function cljs$core$reduce(){
var G__1399 = arguments.length;
switch (G__1399) {
case 2:
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
if((function (){var G__1400 = coll;
if(G__1400){
var bit__3601__auto__ = (G__1400.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3601__auto__) || (G__1400.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});

cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = (function (f,val,coll){
if((function (){var G__1401 = coll;
if(G__1401){
var bit__3601__auto__ = (G__1401.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3601__auto__) || (G__1401.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});

cljs.core.reduce.cljs$lang$maxFixedArity = 3;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function cljs$core$completing(){
var G__1404 = arguments.length;
switch (G__1404) {
case 1:
return cljs.core.completing.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.completing.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = (function (f){
return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});

cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = (function (f,cf){
return (function() {
var G__1409 = null;
var G__1409__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__1409__1 = (function (x){
var G__1405 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__1405) : cf.call(null,G__1405));
});
var G__1409__2 = (function (x,y){
var G__1406 = x;
var G__1407 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1406,G__1407) : f.call(null,G__1406,G__1407));
});
G__1409 = function(x,y){
switch(arguments.length){
case 0:
return G__1409__0.call(this);
case 1:
return G__1409__1.call(this,x);
case 2:
return G__1409__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1409.cljs$core$IFn$_invoke$arity$0 = G__1409__0;
G__1409.cljs$core$IFn$_invoke$arity$1 = G__1409__1;
G__1409.cljs$core$IFn$_invoke$arity$2 = G__1409__2;
return G__1409;
})()
});

cljs.core.completing.cljs$lang$maxFixedArity = 2;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function cljs$core$transduce(){
var G__1411 = arguments.length;
switch (G__1411) {
case 3:
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = (function (xform,f,coll){
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});

cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__1412 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__1412) : xform.call(null,G__1412));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__1413 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__1413) : f__$1.call(null,G__1413));
});

cljs.core.transduce.cljs$lang$maxFixedArity = 4;
/**
 * Returns the sum of nums. (+) returns 0.
 */
cljs.core._PLUS_ = (function cljs$core$_PLUS_(){
var G__1419 = arguments.length;
switch (G__1419) {
case 0:
return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = (function (){
return (0);
});

cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x + y);
});

cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,(x + y),more);
});

cljs.core._PLUS_.cljs$lang$applyTo = (function (seq1415){
var G__1416 = cljs.core.first(seq1415);
var seq1415__$1 = cljs.core.next(seq1415);
var G__1417 = cljs.core.first(seq1415__$1);
var seq1415__$2 = cljs.core.next(seq1415__$1);
return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__1416,G__1417,seq1415__$2);
});

cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 */
cljs.core._ = (function cljs$core$_(){
var G__1425 = arguments.length;
switch (G__1425) {
case 1:
return cljs.core._.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._.cljs$core$IFn$_invoke$arity$1 = (function (x){
return (- x);
});

cljs.core._.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x - y);
});

cljs.core._.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._,(x - y),more);
});

cljs.core._.cljs$lang$applyTo = (function (seq1421){
var G__1422 = cljs.core.first(seq1421);
var seq1421__$1 = cljs.core.next(seq1421);
var G__1423 = cljs.core.first(seq1421__$1);
var seq1421__$2 = cljs.core.next(seq1421__$1);
return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__1422,G__1423,seq1421__$2);
});

cljs.core._.cljs$lang$maxFixedArity = 2;
/**
 * Returns the product of nums. (*) returns 1.
 */
cljs.core._STAR_ = (function cljs$core$_STAR_(){
var G__1431 = arguments.length;
switch (G__1431) {
case 0:
return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = (function (){
return (1);
});

cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x * y);
});

cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_,(x * y),more);
});

cljs.core._STAR_.cljs$lang$applyTo = (function (seq1427){
var G__1428 = cljs.core.first(seq1427);
var seq1427__$1 = cljs.core.next(seq1427);
var G__1429 = cljs.core.first(seq1427__$1);
var seq1427__$2 = cljs.core.next(seq1427__$1);
return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__1428,G__1429,seq1427__$2);
});

cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 */
cljs.core._SLASH_ = (function cljs$core$_SLASH_(){
var G__1437 = arguments.length;
switch (G__1437) {
case 1:
return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return ((1) / x);
});

cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x / y);
});

cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_,(x / y),more);
});

cljs.core._SLASH_.cljs$lang$applyTo = (function (seq1433){
var G__1434 = cljs.core.first(seq1433);
var seq1433__$1 = cljs.core.next(seq1433);
var G__1435 = cljs.core.first(seq1433__$1);
var seq1433__$2 = cljs.core.next(seq1433__$1);
return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__1434,G__1435,seq1433__$2);
});

cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 */
cljs.core._LT_ = (function cljs$core$_LT_(){
var G__1443 = arguments.length;
switch (G__1443) {
case 1:
return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return true;
});

cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x < y);
});

cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__1445 = y;
var G__1446 = cljs.core.first(more);
var G__1447 = cljs.core.next(more);
x = G__1445;
y = G__1446;
more = G__1447;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
});

cljs.core._LT_.cljs$lang$applyTo = (function (seq1439){
var G__1440 = cljs.core.first(seq1439);
var seq1439__$1 = cljs.core.next(seq1439);
var G__1441 = cljs.core.first(seq1439__$1);
var seq1439__$2 = cljs.core.next(seq1439__$1);
return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__1440,G__1441,seq1439__$2);
});

cljs.core._LT_.cljs$lang$maxFixedArity = 2;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 */
cljs.core._LT__EQ_ = (function cljs$core$_LT__EQ_(){
var G__1452 = arguments.length;
switch (G__1452) {
case 1:
return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return true;
});

cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x <= y);
});

cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__1454 = y;
var G__1455 = cljs.core.first(more);
var G__1456 = cljs.core.next(more);
x = G__1454;
y = G__1455;
more = G__1456;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
});

cljs.core._LT__EQ_.cljs$lang$applyTo = (function (seq1448){
var G__1449 = cljs.core.first(seq1448);
var seq1448__$1 = cljs.core.next(seq1448);
var G__1450 = cljs.core.first(seq1448__$1);
var seq1448__$2 = cljs.core.next(seq1448__$1);
return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__1449,G__1450,seq1448__$2);
});

cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 */
cljs.core._GT_ = (function cljs$core$_GT_(){
var G__1461 = arguments.length;
switch (G__1461) {
case 1:
return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return true;
});

cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x > y);
});

cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__1463 = y;
var G__1464 = cljs.core.first(more);
var G__1465 = cljs.core.next(more);
x = G__1463;
y = G__1464;
more = G__1465;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
});

cljs.core._GT_.cljs$lang$applyTo = (function (seq1457){
var G__1458 = cljs.core.first(seq1457);
var seq1457__$1 = cljs.core.next(seq1457);
var G__1459 = cljs.core.first(seq1457__$1);
var seq1457__$2 = cljs.core.next(seq1457__$1);
return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__1458,G__1459,seq1457__$2);
});

cljs.core._GT_.cljs$lang$maxFixedArity = 2;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 */
cljs.core._GT__EQ_ = (function cljs$core$_GT__EQ_(){
var G__1470 = arguments.length;
switch (G__1470) {
case 1:
return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return true;
});

cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x >= y);
});

cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__1472 = y;
var G__1473 = cljs.core.first(more);
var G__1474 = cljs.core.next(more);
x = G__1472;
y = G__1473;
more = G__1474;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
});

cljs.core._GT__EQ_.cljs$lang$applyTo = (function (seq1466){
var G__1467 = cljs.core.first(seq1466);
var seq1466__$1 = cljs.core.next(seq1466);
var G__1468 = cljs.core.first(seq1466__$1);
var seq1466__$2 = cljs.core.next(seq1466__$1);
return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__1467,G__1468,seq1466__$2);
});

cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 */
cljs.core.max = (function cljs$core$max(){
var G__1479 = arguments.length;
switch (G__1479) {
case 1:
return cljs.core.max.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.max.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.max.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core.max.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
var x__3378__auto__ = x;
var y__3379__auto__ = y;
return ((x__3378__auto__ > y__3379__auto__) ? x__3378__auto__ : y__3379__auto__);
});

cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max,(function (){var x__3378__auto__ = x;
var y__3379__auto__ = y;
return ((x__3378__auto__ > y__3379__auto__) ? x__3378__auto__ : y__3379__auto__);
})(),more);
});

cljs.core.max.cljs$lang$applyTo = (function (seq1475){
var G__1476 = cljs.core.first(seq1475);
var seq1475__$1 = cljs.core.next(seq1475);
var G__1477 = cljs.core.first(seq1475__$1);
var seq1475__$2 = cljs.core.next(seq1475__$1);
return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__1476,G__1477,seq1475__$2);
});

cljs.core.max.cljs$lang$maxFixedArity = 2;
/**
 * Returns the least of the nums.
 */
cljs.core.min = (function cljs$core$min(){
var G__1485 = arguments.length;
switch (G__1485) {
case 1:
return cljs.core.min.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.min.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.min.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core.min.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
var x__3381__auto__ = x;
var y__3382__auto__ = y;
return ((x__3381__auto__ < y__3382__auto__) ? x__3381__auto__ : y__3382__auto__);
});

cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min,(function (){var x__3381__auto__ = x;
var y__3382__auto__ = y;
return ((x__3381__auto__ < y__3382__auto__) ? x__3381__auto__ : y__3382__auto__);
})(),more);
});

cljs.core.min.cljs$lang$applyTo = (function (seq1481){
var G__1482 = cljs.core.first(seq1481);
var seq1481__$1 = cljs.core.next(seq1481);
var G__1483 = cljs.core.first(seq1481__$1);
var seq1481__$2 = cljs.core.next(seq1481__$1);
return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__1482,G__1483,seq1481__$2);
});

cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 */
cljs.core.unchecked_add = (function cljs$core$unchecked_add(){
var G__1491 = arguments.length;
switch (G__1491) {
case 0:
return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = (function (){
return (0);
});

cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x + y);
});

cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add,(x + y),more);
});

cljs.core.unchecked_add.cljs$lang$applyTo = (function (seq1487){
var G__1488 = cljs.core.first(seq1487);
var seq1487__$1 = cljs.core.next(seq1487);
var G__1489 = cljs.core.first(seq1487__$1);
var seq1487__$2 = cljs.core.next(seq1487__$1);
return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__1488,G__1489,seq1487__$2);
});

cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
/**
 * Returns the sum of nums. (+) returns 0.
 */
cljs.core.unchecked_add_int = (function cljs$core$unchecked_add_int(){
var G__1497 = arguments.length;
switch (G__1497) {
case 0:
return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = (function (){
return (0);
});

cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x + y);
});

cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int,(x + y),more);
});

cljs.core.unchecked_add_int.cljs$lang$applyTo = (function (seq1493){
var G__1494 = cljs.core.first(seq1493);
var seq1493__$1 = cljs.core.next(seq1493);
var G__1495 = cljs.core.first(seq1493__$1);
var seq1493__$2 = cljs.core.next(seq1493__$1);
return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__1494,G__1495,seq1493__$2);
});

cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 */
cljs.core.unchecked_divide_int = (function cljs$core$unchecked_divide_int(){
var G__1503 = arguments.length;
switch (G__1503) {
case 1:
return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = (function (x){
return ((1) / x);
});

cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x / y);
});

cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int,(x / y),more);
});

cljs.core.unchecked_divide_int.cljs$lang$applyTo = (function (seq1499){
var G__1500 = cljs.core.first(seq1499);
var seq1499__$1 = cljs.core.next(seq1499);
var G__1501 = cljs.core.first(seq1499__$1);
var seq1499__$2 = cljs.core.next(seq1499__$1);
return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__1500,G__1501,seq1499__$2);
});

cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 */
cljs.core.unchecked_multiply = (function cljs$core$unchecked_multiply(){
var G__1509 = arguments.length;
switch (G__1509) {
case 0:
return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = (function (){
return (1);
});

cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x * y);
});

cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply,(x * y),more);
});

cljs.core.unchecked_multiply.cljs$lang$applyTo = (function (seq1505){
var G__1506 = cljs.core.first(seq1505);
var seq1505__$1 = cljs.core.next(seq1505);
var G__1507 = cljs.core.first(seq1505__$1);
var seq1505__$2 = cljs.core.next(seq1505__$1);
return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__1506,G__1507,seq1505__$2);
});

cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
/**
 * Returns the product of nums. (*) returns 1.
 */
cljs.core.unchecked_multiply_int = (function cljs$core$unchecked_multiply_int(){
var G__1515 = arguments.length;
switch (G__1515) {
case 0:
return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = (function (){
return (1);
});

cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = (function (x){
return x;
});

cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x * y);
});

cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int,(x * y),more);
});

cljs.core.unchecked_multiply_int.cljs$lang$applyTo = (function (seq1511){
var G__1512 = cljs.core.first(seq1511);
var seq1511__$1 = cljs.core.next(seq1511);
var G__1513 = cljs.core.first(seq1511__$1);
var seq1511__$2 = cljs.core.next(seq1511__$1);
return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__1512,G__1513,seq1511__$2);
});

cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__1519 = x;
var G__1520 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__1519,G__1520) : cljs.core.mod.call(null,G__1519,G__1520));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 */
cljs.core.unchecked_subtract = (function cljs$core$unchecked_subtract(){
var G__1525 = arguments.length;
switch (G__1525) {
case 1:
return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = (function (x){
return (- x);
});

cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x - y);
});

cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract,(x - y),more);
});

cljs.core.unchecked_subtract.cljs$lang$applyTo = (function (seq1521){
var G__1522 = cljs.core.first(seq1521);
var seq1521__$1 = cljs.core.next(seq1521);
var G__1523 = cljs.core.first(seq1521__$1);
var seq1521__$2 = cljs.core.next(seq1521__$1);
return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__1522,G__1523,seq1521__$2);
});

cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 */
cljs.core.unchecked_subtract_int = (function cljs$core$unchecked_subtract_int(){
var G__1531 = arguments.length;
switch (G__1531) {
case 1:
return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = (function (x){
return (- x);
});

cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x - y);
});

cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int,(x - y),more);
});

cljs.core.unchecked_subtract_int.cljs$lang$applyTo = (function (seq1527){
var G__1528 = cljs.core.first(seq1527);
var seq1527__$1 = cljs.core.next(seq1527);
var G__1529 = cljs.core.first(seq1527__$1);
var seq1527__$2 = cljs.core.next(seq1527__$1);
return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__1528,G__1529,seq1527__$2);
});

cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__1535 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__1535) : Math.floor.call(null,G__1535));
} else {
var G__1536 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__1536) : Math.ceil.call(null,G__1536));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 */
cljs.core.bit_xor = (function cljs$core$bit_xor(){
var G__1541 = arguments.length;
switch (G__1541) {
case 2:
return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x ^ y);
});

cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor,(x ^ y),more);
});

cljs.core.bit_xor.cljs$lang$applyTo = (function (seq1537){
var G__1538 = cljs.core.first(seq1537);
var seq1537__$1 = cljs.core.next(seq1537);
var G__1539 = cljs.core.first(seq1537__$1);
var seq1537__$2 = cljs.core.next(seq1537__$1);
return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__1538,G__1539,seq1537__$2);
});

cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
/**
 * Bitwise and
 */
cljs.core.bit_and = (function cljs$core$bit_and(){
var G__1547 = arguments.length;
switch (G__1547) {
case 2:
return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x & y);
});

cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and,(x & y),more);
});

cljs.core.bit_and.cljs$lang$applyTo = (function (seq1543){
var G__1544 = cljs.core.first(seq1543);
var seq1543__$1 = cljs.core.next(seq1543);
var G__1545 = cljs.core.first(seq1543__$1);
var seq1543__$2 = cljs.core.next(seq1543__$1);
return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__1544,G__1545,seq1543__$2);
});

cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
/**
 * Bitwise or
 */
cljs.core.bit_or = (function cljs$core$bit_or(){
var G__1553 = arguments.length;
switch (G__1553) {
case 2:
return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x | y);
});

cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or,(x | y),more);
});

cljs.core.bit_or.cljs$lang$applyTo = (function (seq1549){
var G__1550 = cljs.core.first(seq1549);
var seq1549__$1 = cljs.core.next(seq1549);
var G__1551 = cljs.core.first(seq1549__$1);
var seq1549__$2 = cljs.core.next(seq1549__$1);
return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__1550,G__1551,seq1549__$2);
});

cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
/**
 * Bitwise and
 */
cljs.core.bit_and_not = (function cljs$core$bit_and_not(){
var G__1559 = arguments.length;
switch (G__1559) {
case 2:
return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (x & ~y);
});

cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not,(x & ~y),more);
});

cljs.core.bit_and_not.cljs$lang$applyTo = (function (seq1555){
var G__1556 = cljs.core.first(seq1555);
var seq1555__$1 = cljs.core.next(seq1555);
var G__1557 = cljs.core.first(seq1555__$1);
var seq1555__$2 = cljs.core.next(seq1555__$1);
return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__1556,G__1557,seq1555__$2);
});

cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 */
cljs.core._EQ__EQ_ = (function cljs$core$_EQ__EQ_(){
var G__1565 = arguments.length;
switch (G__1565) {
case 1:
return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return true;
});

cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return cljs.core._equiv(x,y);
});

cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
while(true){
if((x === y)){
if(cljs.core.next(more)){
var G__1567 = y;
var G__1568 = cljs.core.first(more);
var G__1569 = cljs.core.next(more);
x = G__1567;
y = G__1568;
more = G__1569;
continue;
} else {
return (y === cljs.core.first(more));
}
} else {
return false;
}
break;
}
});

cljs.core._EQ__EQ_.cljs$lang$applyTo = (function (seq1561){
var G__1562 = cljs.core.first(seq1561);
var seq1561__$1 = cljs.core.next(seq1561);
var G__1563 = cljs.core.first(seq1561__$1);
var seq1561__$2 = cljs.core.next(seq1561__$1);
return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__1562,G__1563,seq1561__$2);
});

cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__1570 = (n__$1 - (1));
var G__1571 = cljs.core.next(xs);
n__$1 = G__1570;
xs = G__1571;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 */
cljs.core.str = (function cljs$core$str(){
var G__1575 = arguments.length;
switch (G__1575) {
case 0:
return cljs.core.str.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,1),(0)));
return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3834__auto__);

}
});

cljs.core.str.cljs$core$IFn$_invoke$arity$0 = (function (){
return "";
});

cljs.core.str.cljs$core$IFn$_invoke$arity$1 = (function (x){
if((x == null)){
return "";
} else {
var G__1576 = x;
return goog.string.buildString(G__1576);
}
});

cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = (function (x,ys){
var sb = (new goog.string.StringBuffer([cljs.core.str(x)].join('')));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__1578 = sb.append([cljs.core.str(cljs.core.first(more))].join(''));
var G__1579 = cljs.core.next(more);
sb = G__1578;
more = G__1579;
continue;
} else {
return sb.toString();
}
break;
}
});

cljs.core.str.cljs$lang$applyTo = (function (seq1572){
var G__1573 = cljs.core.first(seq1572);
var seq1572__$1 = cljs.core.next(seq1572);
return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__1573,seq1572__$1);
});

cljs.core.str.cljs$lang$maxFixedArity = 1;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function cljs$core$subs(){
var G__1581 = arguments.length;
switch (G__1581) {
case 2:
return cljs.core.subs.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.subs.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = (function (s,start){
return s.substring(start);
});

cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = (function (s,start,end){
return s.substring(start,end);
});

cljs.core.subs.cljs$lang$maxFixedArity = 3;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__1583 = cljs.core.next(xs);
var G__1584 = cljs.core.next(ys);
xs = G__1583;
ys = G__1584;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__1585 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__1586 = cljs.core.next(s);
res = G__1585;
s = G__1586;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__1591 = ((h + (cljs.core.hash((function (){var G__1589 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__1589) : cljs.core.key.call(null,G__1589));
})()) ^ cljs.core.hash((function (){var G__1590 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__1590) : cljs.core.val.call(null,G__1590));
})()))) % (4503599627370496));
var G__1592 = cljs.core.next(s);
h = G__1591;
s = G__1592;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__1593 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__1594 = cljs.core.next(s__$1);
h = G__1593;
s__$1 = G__1594;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__1605_1615 = cljs.core.seq(fn_map);
var chunk__1606_1616 = null;
var count__1607_1617 = (0);
var i__1608_1618 = (0);
while(true){
if((i__1608_1618 < count__1607_1617)){
var vec__1609_1619 = chunk__1606_1616.cljs$core$IIndexed$_nth$arity$2(null,i__1608_1618);
var key_name_1620 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1609_1619,(0),null);
var f_1621 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1609_1619,(1),null);
var str_name_1622 = (function (){var G__1610 = key_name_1620;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__1610) : cljs.core.name.call(null,G__1610));
})();
(obj[str_name_1622] = f_1621);

var G__1623 = seq__1605_1615;
var G__1624 = chunk__1606_1616;
var G__1625 = count__1607_1617;
var G__1626 = (i__1608_1618 + (1));
seq__1605_1615 = G__1623;
chunk__1606_1616 = G__1624;
count__1607_1617 = G__1625;
i__1608_1618 = G__1626;
continue;
} else {
var temp__4404__auto___1627 = cljs.core.seq(seq__1605_1615);
if(temp__4404__auto___1627){
var seq__1605_1628__$1 = temp__4404__auto___1627;
if(cljs.core.chunked_seq_QMARK_(seq__1605_1628__$1)){
var c__3679__auto___1629 = (function (){var G__1611 = seq__1605_1628__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__1611) : cljs.core.chunk_first.call(null,G__1611));
})();
var G__1630 = (function (){var G__1612 = seq__1605_1628__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__1612) : cljs.core.chunk_rest.call(null,G__1612));
})();
var G__1631 = c__3679__auto___1629;
var G__1632 = cljs.core.count(c__3679__auto___1629);
var G__1633 = (0);
seq__1605_1615 = G__1630;
chunk__1606_1616 = G__1631;
count__1607_1617 = G__1632;
i__1608_1618 = G__1633;
continue;
} else {
var vec__1613_1634 = cljs.core.first(seq__1605_1628__$1);
var key_name_1635 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1613_1634,(0),null);
var f_1636 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1613_1634,(1),null);
var str_name_1637 = (function (){var G__1614 = key_name_1635;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__1614) : cljs.core.name.call(null,G__1614));
})();
(obj[str_name_1637] = f_1636);

var G__1638 = cljs.core.next(seq__1605_1628__$1);
var G__1639 = null;
var G__1640 = (0);
var G__1641 = (0);
seq__1605_1615 = G__1638;
chunk__1606_1616 = G__1639;
count__1607_1617 = G__1640;
i__1608_1618 = G__1641;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__1643 = coll;
if(G__1643){
var bit__3604__auto__ = (G__1643.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__3604__auto__) || (G__1643.cljs$core$IReversible$)){
return true;
} else {
if((!G__1643.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__1643);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__1643);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 */
cljs.core.list = (function cljs$core$list(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = (function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__1645 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__1645;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__1646 = (i - (1));
var G__1647 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__1646;
r = G__1647;
continue;
} else {
return r;
}
break;
}
});

cljs.core.list.cljs$lang$maxFixedArity = (0);

cljs.core.list.cljs$lang$applyTo = (function (seq1644){
return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq1644));
});

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__3310__auto__ = (coll == null);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var G__1651 = coll;
if(G__1651){
var bit__3601__auto__ = (G__1651.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3601__auto__) || (G__1651.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__1653 = x;
if(G__1653){
var bit__3604__auto__ = (G__1653.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__3604__auto__) || (G__1653.cljs$core$IList$)){
return true;
} else {
if((!G__1653.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__1653);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__1653);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3302__auto__ = cljs.core.not(a.ns);
if(and__3302__auto__){
return b.ns;
} else {
return and__3302__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__1660 = a.ns;
var G__1661 = b.ns;
return goog.array.defaultCompare(G__1660,G__1661);
})();
if(((0) === nsc)){
var G__1662 = a.name;
var G__1663 = b.name;
return goog.array.defaultCompare(G__1662,G__1663);
} else {
return nsc;
}
}
} else {
var G__1664 = a.name;
var G__1665 = b.name;
return goog.array.defaultCompare(G__1664,G__1665);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__1667 = null;
var G__1667__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__1667__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__1667 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__1667__2.call(this,self__,coll);
case 3:
return G__1667__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1667.cljs$core$IFn$_invoke$arity$2 = G__1667__2;
G__1667.cljs$core$IFn$_invoke$arity$3 = G__1667__3;
return G__1667;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args1666){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args1666)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__3402__auto__ = self__._hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__1669 = x;
if(G__1669){
var bit__3601__auto__ = (G__1669.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3601__auto__) || (G__1669.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function cljs$core$keyword(){
var G__1671 = arguments.length;
switch (G__1671) {
case 1:
return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__1672 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__1672) : cljs.core.name.call(null,G__1672));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});

cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});

cljs.core.keyword.cljs$lang$maxFixedArity = 2;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__1674 = ls.sval();
ls = G__1674;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 2;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 524306;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function cljs$core$array_chunk(){
var G__1676 = arguments.length;
switch (G__1676) {
case 1:
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});

cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});

cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__1679 = s;
if(G__1679){
var bit__3601__auto__ = (G__1679.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__3601__auto__) || (G__1679.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__1680 = cljs.core.next(s__$1);
s__$1 = G__1680;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_1681 = (0);
var xs_1682 = cljs.core.seq(coll);
while(true){
if(xs_1682){
(ret[i_1681] = cljs.core.to_array(cljs.core.first(xs_1682)));

var G__1683 = (i_1681 + (1));
var G__1684 = cljs.core.next(xs_1682);
i_1681 = G__1683;
xs_1682 = G__1684;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function cljs$core$int_array(){
var G__1686 = arguments.length;
switch (G__1686) {
case 1:
return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});

cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1688 = (i + (1));
var G__1689 = cljs.core.next(s__$1);
i = G__1688;
s__$1 = G__1689;
continue;
} else {
return a;
}
break;
}
} else {
var n__3731__auto___1690 = size;
var i_1691 = (0);
while(true){
if((i_1691 < n__3731__auto___1690)){
(a[i_1691] = init_val_or_seq);

var G__1692 = (i_1691 + (1));
i_1691 = G__1692;
continue;
} else {
}
break;
}

return a;
}
});

cljs.core.int_array.cljs$lang$maxFixedArity = 2;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function cljs$core$long_array(){
var G__1694 = arguments.length;
switch (G__1694) {
case 1:
return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});

cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1696 = (i + (1));
var G__1697 = cljs.core.next(s__$1);
i = G__1696;
s__$1 = G__1697;
continue;
} else {
return a;
}
break;
}
} else {
var n__3731__auto___1698 = size;
var i_1699 = (0);
while(true){
if((i_1699 < n__3731__auto___1698)){
(a[i_1699] = init_val_or_seq);

var G__1700 = (i_1699 + (1));
i_1699 = G__1700;
continue;
} else {
}
break;
}

return a;
}
});

cljs.core.long_array.cljs$lang$maxFixedArity = 2;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function cljs$core$double_array(){
var G__1702 = arguments.length;
switch (G__1702) {
case 1:
return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});

cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1704 = (i + (1));
var G__1705 = cljs.core.next(s__$1);
i = G__1704;
s__$1 = G__1705;
continue;
} else {
return a;
}
break;
}
} else {
var n__3731__auto___1706 = size;
var i_1707 = (0);
while(true){
if((i_1707 < n__3731__auto___1706)){
(a[i_1707] = init_val_or_seq);

var G__1708 = (i_1707 + (1));
i_1707 = G__1708;
continue;
} else {
}
break;
}

return a;
}
});

cljs.core.double_array.cljs$lang$maxFixedArity = 2;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function cljs$core$object_array(){
var G__1710 = arguments.length;
switch (G__1710) {
case 1:
return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});

cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1712 = (i + (1));
var G__1713 = cljs.core.next(s__$1);
i = G__1712;
s__$1 = G__1713;
continue;
} else {
return a;
}
break;
}
} else {
var n__3731__auto___1714 = size;
var i_1715 = (0);
while(true){
if((i_1715 < n__3731__auto___1714)){
(a[i_1715] = init_val_or_seq);

var G__1716 = (i_1715 + (1));
i_1715 = G__1716;
continue;
} else {
}
break;
}

return a;
}
});

cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__1717 = cljs.core.next(s__$1);
var G__1718 = (i - (1));
var G__1719 = (sum + (1));
s__$1 = G__1717;
i = G__1718;
sum = G__1719;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 */
cljs.core.concat = (function cljs$core$concat(){
var G__1725 = arguments.length;
switch (G__1725) {
case 0:
return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.concat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});

cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});

cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});

cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,zs){
var cat = (function cljs$core$cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
});

cljs.core.concat.cljs$lang$applyTo = (function (seq1721){
var G__1722 = cljs.core.first(seq1721);
var seq1721__$1 = cljs.core.next(seq1721);
var G__1723 = cljs.core.first(seq1721__$1);
var seq1721__$2 = cljs.core.next(seq1721__$1);
return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__1722,G__1723,seq1721__$2);
});

cljs.core.concat.cljs$lang$maxFixedArity = 2;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 */
cljs.core.list_STAR_ = (function cljs$core$list_STAR_(){
var G__1739 = arguments.length;
switch (G__1739) {
case 1:
return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,4),(0)));
return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__3834__auto__);

}
});

cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = (function (args){
return cljs.core.seq(args);
});

cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (a,args){
return cljs.core.cons(a,args);
});

cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});

cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});

cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
});

cljs.core.list_STAR_.cljs$lang$applyTo = (function (seq1733){
var G__1734 = cljs.core.first(seq1733);
var seq1733__$1 = cljs.core.next(seq1733);
var G__1735 = cljs.core.first(seq1733__$1);
var seq1733__$2 = cljs.core.next(seq1733__$1);
var G__1736 = cljs.core.first(seq1733__$2);
var seq1733__$3 = cljs.core.next(seq1733__$2);
var G__1737 = cljs.core.first(seq1733__$3);
var seq1733__$4 = cljs.core.next(seq1733__$3);
return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__1734,G__1735,G__1736,G__1737,seq1733__$4);
});

cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 */
cljs.core.conj_BANG_ = (function cljs$core$conj_BANG_(){
var G__1745 = arguments.length;
switch (G__1745) {
case 0:
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});

cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (coll){
return coll;
});

cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});

cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__1747 = ntcoll;
var G__1748 = cljs.core.first(vals);
var G__1749 = cljs.core.next(vals);
tcoll = G__1747;
val = G__1748;
vals = G__1749;
continue;
} else {
return ntcoll;
}
break;
}
});

cljs.core.conj_BANG_.cljs$lang$applyTo = (function (seq1741){
var G__1742 = cljs.core.first(seq1741);
var seq1741__$1 = cljs.core.next(seq1741);
var G__1743 = cljs.core.first(seq1741__$1);
var seq1741__$2 = cljs.core.next(seq1741__$1);
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__1742,G__1743,seq1741__$2);
});

cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 */
cljs.core.assoc_BANG_ = (function cljs$core$assoc_BANG_(){
var G__1755 = arguments.length;
switch (G__1755) {
case 3:
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});

cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__1757 = ntcoll;
var G__1758 = cljs.core.first(kvs);
var G__1759 = cljs.core.second(kvs);
var G__1760 = cljs.core.nnext(kvs);
tcoll = G__1757;
key = G__1758;
val = G__1759;
kvs = G__1760;
continue;
} else {
return ntcoll;
}
break;
}
});

cljs.core.assoc_BANG_.cljs$lang$applyTo = (function (seq1750){
var G__1751 = cljs.core.first(seq1750);
var seq1750__$1 = cljs.core.next(seq1750);
var G__1752 = cljs.core.first(seq1750__$1);
var seq1750__$2 = cljs.core.next(seq1750__$1);
var G__1753 = cljs.core.first(seq1750__$2);
var seq1750__$3 = cljs.core.next(seq1750__$2);
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__1751,G__1752,G__1753,seq1750__$3);
});

cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 */
cljs.core.dissoc_BANG_ = (function cljs$core$dissoc_BANG_(){
var G__1765 = arguments.length;
switch (G__1765) {
case 2:
return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});

cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__1767 = ntcoll;
var G__1768 = cljs.core.first(ks);
var G__1769 = cljs.core.next(ks);
tcoll = G__1767;
key = G__1768;
ks = G__1769;
continue;
} else {
return ntcoll;
}
break;
}
});

cljs.core.dissoc_BANG_.cljs$lang$applyTo = (function (seq1761){
var G__1762 = cljs.core.first(seq1761);
var seq1761__$1 = cljs.core.next(seq1761);
var G__1763 = cljs.core.first(seq1761__$1);
var seq1761__$2 = cljs.core.next(seq1761__$1);
return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__1762,G__1763,seq1761__$2);
});

cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 */
cljs.core.disj_BANG_ = (function cljs$core$disj_BANG_(){
var G__1774 = arguments.length;
switch (G__1774) {
case 2:
return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});

cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__1776 = ntcoll;
var G__1777 = cljs.core.first(vals);
var G__1778 = cljs.core.next(vals);
tcoll = G__1776;
val = G__1777;
vals = G__1778;
continue;
} else {
return ntcoll;
}
break;
}
});

cljs.core.disj_BANG_.cljs$lang$applyTo = (function (seq1770){
var G__1771 = cljs.core.first(seq1770);
var seq1770__$1 = cljs.core.next(seq1770);
var G__1772 = cljs.core.first(seq1770__$1);
var seq1770__$2 = cljs.core.next(seq1770__$1);
return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__1771,G__1772,seq1770__$2);
});

cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a11 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a11);
} else {
var G__1989 = a11;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__1989) : f.call(null,G__1989));
}
} else {
var b12 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a11,b12);
} else {
var G__1990 = a11;
var G__1991 = b12;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1990,G__1991) : f.call(null,G__1990,G__1991));
}
} else {
var c13 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a11,b12,c13);
} else {
var G__1992 = a11;
var G__1993 = b12;
var G__1994 = c13;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__1992,G__1993,G__1994) : f.call(null,G__1992,G__1993,G__1994));
}
} else {
var d14 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a11,b12,c13,d14);
} else {
var G__1995 = a11;
var G__1996 = b12;
var G__1997 = c13;
var G__1998 = d14;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__1995,G__1996,G__1997,G__1998) : f.call(null,G__1995,G__1996,G__1997,G__1998));
}
} else {
var e15 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a11,b12,c13,d14,e15);
} else {
var G__1999 = a11;
var G__2000 = b12;
var G__2001 = c13;
var G__2002 = d14;
var G__2003 = e15;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__1999,G__2000,G__2001,G__2002,G__2003) : f.call(null,G__1999,G__2000,G__2001,G__2002,G__2003));
}
} else {
var f16 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a11,b12,c13,d14,e15,f16);
} else {
var G__2004 = a11;
var G__2005 = b12;
var G__2006 = c13;
var G__2007 = d14;
var G__2008 = e15;
var G__2009 = f16;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__2004,G__2005,G__2006,G__2007,G__2008,G__2009) : f.call(null,G__2004,G__2005,G__2006,G__2007,G__2008,G__2009));
}
} else {
var g17 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a11,b12,c13,d14,e15,f16,g17);
} else {
var G__2010 = a11;
var G__2011 = b12;
var G__2012 = c13;
var G__2013 = d14;
var G__2014 = e15;
var G__2015 = f16;
var G__2016 = g17;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__2010,G__2011,G__2012,G__2013,G__2014,G__2015,G__2016) : f.call(null,G__2010,G__2011,G__2012,G__2013,G__2014,G__2015,G__2016));
}
} else {
var h18 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a11,b12,c13,d14,e15,f16,g17,h18);
} else {
var G__2017 = a11;
var G__2018 = b12;
var G__2019 = c13;
var G__2020 = d14;
var G__2021 = e15;
var G__2022 = f16;
var G__2023 = g17;
var G__2024 = h18;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__2017,G__2018,G__2019,G__2020,G__2021,G__2022,G__2023,G__2024) : f.call(null,G__2017,G__2018,G__2019,G__2020,G__2021,G__2022,G__2023,G__2024));
}
} else {
var i19 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a11,b12,c13,d14,e15,f16,g17,h18,i19);
} else {
var G__2025 = a11;
var G__2026 = b12;
var G__2027 = c13;
var G__2028 = d14;
var G__2029 = e15;
var G__2030 = f16;
var G__2031 = g17;
var G__2032 = h18;
var G__2033 = i19;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__2025,G__2026,G__2027,G__2028,G__2029,G__2030,G__2031,G__2032,G__2033) : f.call(null,G__2025,G__2026,G__2027,G__2028,G__2029,G__2030,G__2031,G__2032,G__2033));
}
} else {
var j20 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20);
} else {
var G__2034 = a11;
var G__2035 = b12;
var G__2036 = c13;
var G__2037 = d14;
var G__2038 = e15;
var G__2039 = f16;
var G__2040 = g17;
var G__2041 = h18;
var G__2042 = i19;
var G__2043 = j20;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__2034,G__2035,G__2036,G__2037,G__2038,G__2039,G__2040,G__2041,G__2042,G__2043) : f.call(null,G__2034,G__2035,G__2036,G__2037,G__2038,G__2039,G__2040,G__2041,G__2042,G__2043));
}
} else {
var k21 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21);
} else {
var G__2044 = a11;
var G__2045 = b12;
var G__2046 = c13;
var G__2047 = d14;
var G__2048 = e15;
var G__2049 = f16;
var G__2050 = g17;
var G__2051 = h18;
var G__2052 = i19;
var G__2053 = j20;
var G__2054 = k21;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__2044,G__2045,G__2046,G__2047,G__2048,G__2049,G__2050,G__2051,G__2052,G__2053,G__2054) : f.call(null,G__2044,G__2045,G__2046,G__2047,G__2048,G__2049,G__2050,G__2051,G__2052,G__2053,G__2054));
}
} else {
var l22 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22);
} else {
var G__2055 = a11;
var G__2056 = b12;
var G__2057 = c13;
var G__2058 = d14;
var G__2059 = e15;
var G__2060 = f16;
var G__2061 = g17;
var G__2062 = h18;
var G__2063 = i19;
var G__2064 = j20;
var G__2065 = k21;
var G__2066 = l22;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__2055,G__2056,G__2057,G__2058,G__2059,G__2060,G__2061,G__2062,G__2063,G__2064,G__2065,G__2066) : f.call(null,G__2055,G__2056,G__2057,G__2058,G__2059,G__2060,G__2061,G__2062,G__2063,G__2064,G__2065,G__2066));
}
} else {
var m23 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23);
} else {
var G__2067 = a11;
var G__2068 = b12;
var G__2069 = c13;
var G__2070 = d14;
var G__2071 = e15;
var G__2072 = f16;
var G__2073 = g17;
var G__2074 = h18;
var G__2075 = i19;
var G__2076 = j20;
var G__2077 = k21;
var G__2078 = l22;
var G__2079 = m23;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__2067,G__2068,G__2069,G__2070,G__2071,G__2072,G__2073,G__2074,G__2075,G__2076,G__2077,G__2078,G__2079) : f.call(null,G__2067,G__2068,G__2069,G__2070,G__2071,G__2072,G__2073,G__2074,G__2075,G__2076,G__2077,G__2078,G__2079));
}
} else {
var n24 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23,n24);
} else {
var G__2080 = a11;
var G__2081 = b12;
var G__2082 = c13;
var G__2083 = d14;
var G__2084 = e15;
var G__2085 = f16;
var G__2086 = g17;
var G__2087 = h18;
var G__2088 = i19;
var G__2089 = j20;
var G__2090 = k21;
var G__2091 = l22;
var G__2092 = m23;
var G__2093 = n24;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__2080,G__2081,G__2082,G__2083,G__2084,G__2085,G__2086,G__2087,G__2088,G__2089,G__2090,G__2091,G__2092,G__2093) : f.call(null,G__2080,G__2081,G__2082,G__2083,G__2084,G__2085,G__2086,G__2087,G__2088,G__2089,G__2090,G__2091,G__2092,G__2093));
}
} else {
var o25 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23,n24,o25);
} else {
var G__2094 = a11;
var G__2095 = b12;
var G__2096 = c13;
var G__2097 = d14;
var G__2098 = e15;
var G__2099 = f16;
var G__2100 = g17;
var G__2101 = h18;
var G__2102 = i19;
var G__2103 = j20;
var G__2104 = k21;
var G__2105 = l22;
var G__2106 = m23;
var G__2107 = n24;
var G__2108 = o25;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__2094,G__2095,G__2096,G__2097,G__2098,G__2099,G__2100,G__2101,G__2102,G__2103,G__2104,G__2105,G__2106,G__2107,G__2108) : f.call(null,G__2094,G__2095,G__2096,G__2097,G__2098,G__2099,G__2100,G__2101,G__2102,G__2103,G__2104,G__2105,G__2106,G__2107,G__2108));
}
} else {
var p26 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23,n24,o25,p26);
} else {
var G__2109 = a11;
var G__2110 = b12;
var G__2111 = c13;
var G__2112 = d14;
var G__2113 = e15;
var G__2114 = f16;
var G__2115 = g17;
var G__2116 = h18;
var G__2117 = i19;
var G__2118 = j20;
var G__2119 = k21;
var G__2120 = l22;
var G__2121 = m23;
var G__2122 = n24;
var G__2123 = o25;
var G__2124 = p26;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__2109,G__2110,G__2111,G__2112,G__2113,G__2114,G__2115,G__2116,G__2117,G__2118,G__2119,G__2120,G__2121,G__2122,G__2123,G__2124) : f.call(null,G__2109,G__2110,G__2111,G__2112,G__2113,G__2114,G__2115,G__2116,G__2117,G__2118,G__2119,G__2120,G__2121,G__2122,G__2123,G__2124));
}
} else {
var q27 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23,n24,o25,p26,q27);
} else {
var G__2125 = a11;
var G__2126 = b12;
var G__2127 = c13;
var G__2128 = d14;
var G__2129 = e15;
var G__2130 = f16;
var G__2131 = g17;
var G__2132 = h18;
var G__2133 = i19;
var G__2134 = j20;
var G__2135 = k21;
var G__2136 = l22;
var G__2137 = m23;
var G__2138 = n24;
var G__2139 = o25;
var G__2140 = p26;
var G__2141 = q27;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__2125,G__2126,G__2127,G__2128,G__2129,G__2130,G__2131,G__2132,G__2133,G__2134,G__2135,G__2136,G__2137,G__2138,G__2139,G__2140,G__2141) : f.call(null,G__2125,G__2126,G__2127,G__2128,G__2129,G__2130,G__2131,G__2132,G__2133,G__2134,G__2135,G__2136,G__2137,G__2138,G__2139,G__2140,G__2141));
}
} else {
var r28 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23,n24,o25,p26,q27,r28);
} else {
var G__2142 = a11;
var G__2143 = b12;
var G__2144 = c13;
var G__2145 = d14;
var G__2146 = e15;
var G__2147 = f16;
var G__2148 = g17;
var G__2149 = h18;
var G__2150 = i19;
var G__2151 = j20;
var G__2152 = k21;
var G__2153 = l22;
var G__2154 = m23;
var G__2155 = n24;
var G__2156 = o25;
var G__2157 = p26;
var G__2158 = q27;
var G__2159 = r28;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__2142,G__2143,G__2144,G__2145,G__2146,G__2147,G__2148,G__2149,G__2150,G__2151,G__2152,G__2153,G__2154,G__2155,G__2156,G__2157,G__2158,G__2159) : f.call(null,G__2142,G__2143,G__2144,G__2145,G__2146,G__2147,G__2148,G__2149,G__2150,G__2151,G__2152,G__2153,G__2154,G__2155,G__2156,G__2157,G__2158,G__2159));
}
} else {
var s29 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23,n24,o25,p26,q27,r28,s29);
} else {
var G__2160 = a11;
var G__2161 = b12;
var G__2162 = c13;
var G__2163 = d14;
var G__2164 = e15;
var G__2165 = f16;
var G__2166 = g17;
var G__2167 = h18;
var G__2168 = i19;
var G__2169 = j20;
var G__2170 = k21;
var G__2171 = l22;
var G__2172 = m23;
var G__2173 = n24;
var G__2174 = o25;
var G__2175 = p26;
var G__2176 = q27;
var G__2177 = r28;
var G__2178 = s29;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__2160,G__2161,G__2162,G__2163,G__2164,G__2165,G__2166,G__2167,G__2168,G__2169,G__2170,G__2171,G__2172,G__2173,G__2174,G__2175,G__2176,G__2177,G__2178) : f.call(null,G__2160,G__2161,G__2162,G__2163,G__2164,G__2165,G__2166,G__2167,G__2168,G__2169,G__2170,G__2171,G__2172,G__2173,G__2174,G__2175,G__2176,G__2177,G__2178));
}
} else {
var t30 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a11,b12,c13,d14,e15,f16,g17,h18,i19,j20,k21,l22,m23,n24,o25,p26,q27,r28,s29,t30);
} else {
var G__2179 = a11;
var G__2180 = b12;
var G__2181 = c13;
var G__2182 = d14;
var G__2183 = e15;
var G__2184 = f16;
var G__2185 = g17;
var G__2186 = h18;
var G__2187 = i19;
var G__2188 = j20;
var G__2189 = k21;
var G__2190 = l22;
var G__2191 = m23;
var G__2192 = n24;
var G__2193 = o25;
var G__2194 = p26;
var G__2195 = q27;
var G__2196 = r28;
var G__2197 = s29;
var G__2198 = t30;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__2179,G__2180,G__2181,G__2182,G__2183,G__2184,G__2185,G__2186,G__2187,G__2188,G__2189,G__2190,G__2191,G__2192,G__2193,G__2194,G__2195,G__2196,G__2197,G__2198) : f.call(null,G__2179,G__2180,G__2181,G__2182,G__2183,G__2184,G__2185,G__2186,G__2187,G__2188,G__2189,G__2190,G__2191,G__2192,G__2193,G__2194,G__2195,G__2196,G__2197,G__2198));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 */
cljs.core.apply = (function cljs$core$apply(){
var G__2206 = arguments.length;
switch (G__2206) {
case 2:
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,5),(0)));
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),argseq__3834__auto__);

}
});

cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});

cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});

cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});

cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});

cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = (function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});

cljs.core.apply.cljs$lang$applyTo = (function (seq2199){
var G__2200 = cljs.core.first(seq2199);
var seq2199__$1 = cljs.core.next(seq2199);
var G__2201 = cljs.core.first(seq2199__$1);
var seq2199__$2 = cljs.core.next(seq2199__$1);
var G__2202 = cljs.core.first(seq2199__$2);
var seq2199__$3 = cljs.core.next(seq2199__$2);
var G__2203 = cljs.core.first(seq2199__$3);
var seq2199__$4 = cljs.core.next(seq2199__$3);
var G__2204 = cljs.core.first(seq2199__$4);
var seq2199__$5 = cljs.core.next(seq2199__$4);
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__2200,G__2201,G__2202,G__2203,G__2204,seq2199__$5);
});

cljs.core.apply.cljs$lang$maxFixedArity = 5;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 */
cljs.core.vary_meta = (function cljs$core$vary_meta(){
var G__2216 = arguments.length;
switch (G__2216) {
case 2:
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
case 6:
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,6),(0)));
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__3834__auto__);

}
});

cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__2217 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2217) : f.call(null,G__2217));
})());
});

cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__2218 = cljs.core.meta(obj);
var G__2219 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2218,G__2219) : f.call(null,G__2218,G__2219));
})());
});

cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__2220 = cljs.core.meta(obj);
var G__2221 = a;
var G__2222 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2220,G__2221,G__2222) : f.call(null,G__2220,G__2221,G__2222));
})());
});

cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__2223 = cljs.core.meta(obj);
var G__2224 = a;
var G__2225 = b;
var G__2226 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2223,G__2224,G__2225,G__2226) : f.call(null,G__2223,G__2224,G__2225,G__2226));
})());
});

cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__2227 = cljs.core.meta(obj);
var G__2228 = a;
var G__2229 = b;
var G__2230 = c;
var G__2231 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2227,G__2228,G__2229,G__2230,G__2231) : f.call(null,G__2227,G__2228,G__2229,G__2230,G__2231));
})());
});

cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = (function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
});

cljs.core.vary_meta.cljs$lang$applyTo = (function (seq2208){
var G__2209 = cljs.core.first(seq2208);
var seq2208__$1 = cljs.core.next(seq2208);
var G__2210 = cljs.core.first(seq2208__$1);
var seq2208__$2 = cljs.core.next(seq2208__$1);
var G__2211 = cljs.core.first(seq2208__$2);
var seq2208__$3 = cljs.core.next(seq2208__$2);
var G__2212 = cljs.core.first(seq2208__$3);
var seq2208__$4 = cljs.core.next(seq2208__$3);
var G__2213 = cljs.core.first(seq2208__$4);
var seq2208__$5 = cljs.core.next(seq2208__$4);
var G__2214 = cljs.core.first(seq2208__$5);
var seq2208__$6 = cljs.core.next(seq2208__$5);
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__2209,G__2210,G__2211,G__2212,G__2213,G__2214,seq2208__$6);
});

cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
/**
 * Same as (not (= obj1 obj2))
 */
cljs.core.not_EQ_ = (function cljs$core$not_EQ_(){
var G__2237 = arguments.length;
switch (G__2237) {
case 1:
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = (function (x){
return false;
});

cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});

cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = (function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
});

cljs.core.not_EQ_.cljs$lang$applyTo = (function (seq2233){
var G__2234 = cljs.core.first(seq2233);
var seq2233__$1 = cljs.core.next(seq2233);
var G__2235 = cljs.core.first(seq2233__$1);
var seq2233__$2 = cljs.core.next(seq2233__$1);
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__2234,G__2235,seq2233__$2);
});

cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t2242 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t2242 = (function (nil_iter,meta2243){
this.nil_iter = nil_iter;
this.meta2243 = meta2243;
this.cljs$lang$protocol_mask$partition0$ = 393216;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.t2242.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_2244,meta2243__$1){
var self__ = this;
var _2244__$1 = this;
return (new cljs.core.t2242(self__.nil_iter,meta2243__$1));
});

cljs.core.t2242.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_2244){
var self__ = this;
var _2244__$1 = this;
return self__.meta2243;
});

cljs.core.t2242.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t2242.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t2242.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t2242.cljs$lang$type = true;

cljs.core.t2242.cljs$lang$ctorStr = "cljs.core/t2242";

cljs.core.t2242.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/t2242");
});

cljs.core.__GT_t2242 = (function cljs$core$nil_iter_$___GT_t2242(nil_iter__$1,meta2243){
return (new cljs.core.t2242(nil_iter__$1,meta2243));
});

}

return (new cljs.core.t2242(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.truth_(cljs.core.iterable_QMARK_(coll))){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3302__auto__ = !((lt.stepper == null));
if(and__3302__auto__){
return self__.iter.hasNext();
} else {
return and__3302__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__2245 = lt;
var G__2246 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__2245,G__2246) : self__.xform.call(null,G__2245,G__2246));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__2247 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__2247) : self__.xform.call(null,G__2247));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__2249 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2249) : xform.call(null,G__2249));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__2251 = cljs.core.next(iters__$1);
iters__$1 = G__2251;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__3731__auto___2252 = self__.iters.length;
var i_2253 = (0);
while(true){
if((i_2253 < n__3731__auto___2252)){
(self__.nexts[i_2253] = (self__.iters[i_2253]).next());

var G__2254 = (i_2253 + (1));
i_2253 = G__2254;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3302__auto__ = !((lt.stepper == null));
if(and__3302__auto__){
return this$.hasNext();
} else {
return and__3302__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__2250 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__2250) : self__.xform.call(null,G__2250));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function cljs$core$multi_stepper(){
var G__2256 = arguments.length;
switch (G__2256) {
case 2:
return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = (function (xform,iters){
return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});

cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$stepfn = null;
var cljs$core$stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepfn__1.call(this,result);
case 2:
return cljs$core$stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
return cljs$core$stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__2257 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2257) : xform.call(null,G__2257));
})(),iters,nexts));
});

cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__2259_2263 = cljs.core.seq(colls);
var chunk__2260_2264 = null;
var count__2261_2265 = (0);
var i__2262_2266 = (0);
while(true){
if((i__2262_2266 < count__2261_2265)){
var coll_2267 = chunk__2260_2264.cljs$core$IIndexed$_nth$arity$2(null,i__2262_2266);
iters.push(cljs.core.iter(coll_2267));

var G__2268 = seq__2259_2263;
var G__2269 = chunk__2260_2264;
var G__2270 = count__2261_2265;
var G__2271 = (i__2262_2266 + (1));
seq__2259_2263 = G__2268;
chunk__2260_2264 = G__2269;
count__2261_2265 = G__2270;
i__2262_2266 = G__2271;
continue;
} else {
var temp__4404__auto___2272 = cljs.core.seq(seq__2259_2263);
if(temp__4404__auto___2272){
var seq__2259_2273__$1 = temp__4404__auto___2272;
if(cljs.core.chunked_seq_QMARK_(seq__2259_2273__$1)){
var c__3679__auto___2274 = cljs.core.chunk_first(seq__2259_2273__$1);
var G__2275 = cljs.core.chunk_rest(seq__2259_2273__$1);
var G__2276 = c__3679__auto___2274;
var G__2277 = cljs.core.count(c__3679__auto___2274);
var G__2278 = (0);
seq__2259_2263 = G__2275;
chunk__2260_2264 = G__2276;
count__2261_2265 = G__2277;
i__2262_2266 = G__2278;
continue;
} else {
var coll_2279 = cljs.core.first(seq__2259_2273__$1);
iters.push(cljs.core.iter(coll_2279));

var G__2280 = cljs.core.next(seq__2259_2273__$1);
var G__2281 = null;
var G__2282 = (0);
var G__2283 = (0);
seq__2259_2263 = G__2280;
chunk__2260_2264 = G__2281;
count__2261_2265 = G__2282;
i__2262_2266 = G__2283;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 */
cljs.core.sequence = (function cljs$core$sequence(){
var G__2288 = arguments.length;
switch (G__2288) {
case 1:
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3310__auto__ = cljs.core.seq(coll);
if(or__3310__auto__){
return or__3310__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});

cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});

cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = (function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
});

cljs.core.sequence.cljs$lang$applyTo = (function (seq2284){
var G__2285 = cljs.core.first(seq2284);
var seq2284__$1 = cljs.core.next(seq2284);
var G__2286 = cljs.core.first(seq2284__$1);
var seq2284__$2 = cljs.core.next(seq2284__$1);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__2285,G__2286,seq2284__$2);
});

cljs.core.sequence.cljs$lang$maxFixedArity = 2;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__2291 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2291) : pred.call(null,G__2291));
})())){
var G__2292 = pred;
var G__2293 = cljs.core.next(coll);
pred = G__2292;
coll = G__2293;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3310__auto__ = (function (){var G__2297 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2297) : pred.call(null,G__2297));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var G__2298 = pred;
var G__2299 = cljs.core.next(coll);
pred = G__2298;
coll = G__2299;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__2306 = null;
var G__2306__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__2306__1 = (function (x){
return cljs.core.not((function (){var G__2303 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2303) : f.call(null,G__2303));
})());
});
var G__2306__2 = (function (x,y){
return cljs.core.not((function (){var G__2304 = x;
var G__2305 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2304,G__2305) : f.call(null,G__2304,G__2305));
})());
});
var G__2306__3 = (function() { 
var G__2307__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__2307 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__2308__i = 0, G__2308__a = new Array(arguments.length -  2);
while (G__2308__i < G__2308__a.length) {G__2308__a[G__2308__i] = arguments[G__2308__i + 2]; ++G__2308__i;}
  zs = new cljs.core.IndexedSeq(G__2308__a,0);
} 
return G__2307__delegate.call(this,x,y,zs);};
G__2307.cljs$lang$maxFixedArity = 2;
G__2307.cljs$lang$applyTo = (function (arglist__2309){
var x = cljs.core.first(arglist__2309);
arglist__2309 = cljs.core.next(arglist__2309);
var y = cljs.core.first(arglist__2309);
var zs = cljs.core.rest(arglist__2309);
return G__2307__delegate(x,y,zs);
});
G__2307.cljs$core$IFn$_invoke$arity$variadic = G__2307__delegate;
return G__2307;
})()
;
G__2306 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__2306__0.call(this);
case 1:
return G__2306__1.call(this,x);
case 2:
return G__2306__2.call(this,x,y);
default:
var G__2310 = null;
if (arguments.length > 2) {
var G__2311__i = 0, G__2311__a = new Array(arguments.length -  2);
while (G__2311__i < G__2311__a.length) {G__2311__a[G__2311__i] = arguments[G__2311__i + 2]; ++G__2311__i;}
G__2310 = new cljs.core.IndexedSeq(G__2311__a,0);
}
return G__2306__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2306.cljs$lang$maxFixedArity = 2;
G__2306.cljs$lang$applyTo = G__2306__3.cljs$lang$applyTo;
G__2306.cljs$core$IFn$_invoke$arity$0 = G__2306__0;
G__2306.cljs$core$IFn$_invoke$arity$1 = G__2306__1;
G__2306.cljs$core$IFn$_invoke$arity$2 = G__2306__2;
G__2306.cljs$core$IFn$_invoke$arity$variadic = G__2306__3.cljs$core$IFn$_invoke$arity$variadic;
return G__2306;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__2312__delegate = function (args){
return x;
};
var G__2312 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2313__i = 0, G__2313__a = new Array(arguments.length -  0);
while (G__2313__i < G__2313__a.length) {G__2313__a[G__2313__i] = arguments[G__2313__i + 0]; ++G__2313__i;}
  args = new cljs.core.IndexedSeq(G__2313__a,0);
} 
return G__2312__delegate.call(this,args);};
G__2312.cljs$lang$maxFixedArity = 0;
G__2312.cljs$lang$applyTo = (function (arglist__2314){
var args = cljs.core.seq(arglist__2314);
return G__2312__delegate(args);
});
G__2312.cljs$core$IFn$_invoke$arity$variadic = G__2312__delegate;
return G__2312;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 */
cljs.core.comp = (function cljs$core$comp(){
var G__2320 = arguments.length;
switch (G__2320) {
case 0:
return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.comp.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.comp.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = (function (){
return cljs.core.identity;
});

cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = (function (f){
return f;
});

cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = (function (f,g){
return (function() {
var G__2349 = null;
var G__2349__0 = (function (){
var G__2321 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2321) : f.call(null,G__2321));
});
var G__2349__1 = (function (x){
var G__2322 = (function (){var G__2323 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2323) : g.call(null,G__2323));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2322) : f.call(null,G__2322));
});
var G__2349__2 = (function (x,y){
var G__2324 = (function (){var G__2325 = x;
var G__2326 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__2325,G__2326) : g.call(null,G__2325,G__2326));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2324) : f.call(null,G__2324));
});
var G__2349__3 = (function (x,y,z){
var G__2327 = (function (){var G__2328 = x;
var G__2329 = y;
var G__2330 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__2328,G__2329,G__2330) : g.call(null,G__2328,G__2329,G__2330));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2327) : f.call(null,G__2327));
});
var G__2349__4 = (function() { 
var G__2350__delegate = function (x,y,z,args){
var G__2331 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2331) : f.call(null,G__2331));
};
var G__2350 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2351__i = 0, G__2351__a = new Array(arguments.length -  3);
while (G__2351__i < G__2351__a.length) {G__2351__a[G__2351__i] = arguments[G__2351__i + 3]; ++G__2351__i;}
  args = new cljs.core.IndexedSeq(G__2351__a,0);
} 
return G__2350__delegate.call(this,x,y,z,args);};
G__2350.cljs$lang$maxFixedArity = 3;
G__2350.cljs$lang$applyTo = (function (arglist__2352){
var x = cljs.core.first(arglist__2352);
arglist__2352 = cljs.core.next(arglist__2352);
var y = cljs.core.first(arglist__2352);
arglist__2352 = cljs.core.next(arglist__2352);
var z = cljs.core.first(arglist__2352);
var args = cljs.core.rest(arglist__2352);
return G__2350__delegate(x,y,z,args);
});
G__2350.cljs$core$IFn$_invoke$arity$variadic = G__2350__delegate;
return G__2350;
})()
;
G__2349 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2349__0.call(this);
case 1:
return G__2349__1.call(this,x);
case 2:
return G__2349__2.call(this,x,y);
case 3:
return G__2349__3.call(this,x,y,z);
default:
var G__2353 = null;
if (arguments.length > 3) {
var G__2354__i = 0, G__2354__a = new Array(arguments.length -  3);
while (G__2354__i < G__2354__a.length) {G__2354__a[G__2354__i] = arguments[G__2354__i + 3]; ++G__2354__i;}
G__2353 = new cljs.core.IndexedSeq(G__2354__a,0);
}
return G__2349__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2349.cljs$lang$maxFixedArity = 3;
G__2349.cljs$lang$applyTo = G__2349__4.cljs$lang$applyTo;
G__2349.cljs$core$IFn$_invoke$arity$0 = G__2349__0;
G__2349.cljs$core$IFn$_invoke$arity$1 = G__2349__1;
G__2349.cljs$core$IFn$_invoke$arity$2 = G__2349__2;
G__2349.cljs$core$IFn$_invoke$arity$3 = G__2349__3;
G__2349.cljs$core$IFn$_invoke$arity$variadic = G__2349__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2349;
})()
});

cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = (function (f,g,h){
return (function() {
var G__2355 = null;
var G__2355__0 = (function (){
var G__2332 = (function (){var G__2333 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2333) : g.call(null,G__2333));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2332) : f.call(null,G__2332));
});
var G__2355__1 = (function (x){
var G__2334 = (function (){var G__2335 = (function (){var G__2336 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__2336) : h.call(null,G__2336));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2335) : g.call(null,G__2335));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2334) : f.call(null,G__2334));
});
var G__2355__2 = (function (x,y){
var G__2337 = (function (){var G__2338 = (function (){var G__2339 = x;
var G__2340 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__2339,G__2340) : h.call(null,G__2339,G__2340));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2338) : g.call(null,G__2338));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2337) : f.call(null,G__2337));
});
var G__2355__3 = (function (x,y,z){
var G__2341 = (function (){var G__2342 = (function (){var G__2343 = x;
var G__2344 = y;
var G__2345 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__2343,G__2344,G__2345) : h.call(null,G__2343,G__2344,G__2345));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2342) : g.call(null,G__2342));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2341) : f.call(null,G__2341));
});
var G__2355__4 = (function() { 
var G__2356__delegate = function (x,y,z,args){
var G__2346 = (function (){var G__2347 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2347) : g.call(null,G__2347));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2346) : f.call(null,G__2346));
};
var G__2356 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2357__i = 0, G__2357__a = new Array(arguments.length -  3);
while (G__2357__i < G__2357__a.length) {G__2357__a[G__2357__i] = arguments[G__2357__i + 3]; ++G__2357__i;}
  args = new cljs.core.IndexedSeq(G__2357__a,0);
} 
return G__2356__delegate.call(this,x,y,z,args);};
G__2356.cljs$lang$maxFixedArity = 3;
G__2356.cljs$lang$applyTo = (function (arglist__2358){
var x = cljs.core.first(arglist__2358);
arglist__2358 = cljs.core.next(arglist__2358);
var y = cljs.core.first(arglist__2358);
arglist__2358 = cljs.core.next(arglist__2358);
var z = cljs.core.first(arglist__2358);
var args = cljs.core.rest(arglist__2358);
return G__2356__delegate(x,y,z,args);
});
G__2356.cljs$core$IFn$_invoke$arity$variadic = G__2356__delegate;
return G__2356;
})()
;
G__2355 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2355__0.call(this);
case 1:
return G__2355__1.call(this,x);
case 2:
return G__2355__2.call(this,x,y);
case 3:
return G__2355__3.call(this,x,y,z);
default:
var G__2359 = null;
if (arguments.length > 3) {
var G__2360__i = 0, G__2360__a = new Array(arguments.length -  3);
while (G__2360__i < G__2360__a.length) {G__2360__a[G__2360__i] = arguments[G__2360__i + 3]; ++G__2360__i;}
G__2359 = new cljs.core.IndexedSeq(G__2360__a,0);
}
return G__2355__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2355.cljs$lang$maxFixedArity = 3;
G__2355.cljs$lang$applyTo = G__2355__4.cljs$lang$applyTo;
G__2355.cljs$core$IFn$_invoke$arity$0 = G__2355__0;
G__2355.cljs$core$IFn$_invoke$arity$1 = G__2355__1;
G__2355.cljs$core$IFn$_invoke$arity$2 = G__2355__2;
G__2355.cljs$core$IFn$_invoke$arity$3 = G__2355__3;
G__2355.cljs$core$IFn$_invoke$arity$variadic = G__2355__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2355;
})()
});

cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = (function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__2361__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__2362 = cljs.core.first(fs__$2).call(null,ret);
var G__2363 = cljs.core.next(fs__$2);
ret = G__2362;
fs__$2 = G__2363;
continue;
} else {
return ret;
}
break;
}
};
var G__2361 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2364__i = 0, G__2364__a = new Array(arguments.length -  0);
while (G__2364__i < G__2364__a.length) {G__2364__a[G__2364__i] = arguments[G__2364__i + 0]; ++G__2364__i;}
  args = new cljs.core.IndexedSeq(G__2364__a,0);
} 
return G__2361__delegate.call(this,args);};
G__2361.cljs$lang$maxFixedArity = 0;
G__2361.cljs$lang$applyTo = (function (arglist__2365){
var args = cljs.core.seq(arglist__2365);
return G__2361__delegate(args);
});
G__2361.cljs$core$IFn$_invoke$arity$variadic = G__2361__delegate;
return G__2361;
})()
;
;})(fs__$1))
});

cljs.core.comp.cljs$lang$applyTo = (function (seq2315){
var G__2316 = cljs.core.first(seq2315);
var seq2315__$1 = cljs.core.next(seq2315);
var G__2317 = cljs.core.first(seq2315__$1);
var seq2315__$2 = cljs.core.next(seq2315__$1);
var G__2318 = cljs.core.first(seq2315__$2);
var seq2315__$3 = cljs.core.next(seq2315__$2);
return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__2316,G__2317,G__2318,seq2315__$3);
});

cljs.core.comp.cljs$lang$maxFixedArity = 3;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 */
cljs.core.partial = (function cljs$core$partial(){
var G__2372 = arguments.length;
switch (G__2372) {
case 1:
return cljs.core.partial.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.partial.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.partial.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.partial.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,4),(0)));
return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__3834__auto__);

}
});

cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = (function (f){
return f;
});

cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = (function (f,arg1){
return (function() {
var G__2416 = null;
var G__2416__0 = (function (){
var G__2373 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2373) : f.call(null,G__2373));
});
var G__2416__1 = (function (x){
var G__2374 = arg1;
var G__2375 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2374,G__2375) : f.call(null,G__2374,G__2375));
});
var G__2416__2 = (function (x,y){
var G__2376 = arg1;
var G__2377 = x;
var G__2378 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2376,G__2377,G__2378) : f.call(null,G__2376,G__2377,G__2378));
});
var G__2416__3 = (function (x,y,z){
var G__2379 = arg1;
var G__2380 = x;
var G__2381 = y;
var G__2382 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2379,G__2380,G__2381,G__2382) : f.call(null,G__2379,G__2380,G__2381,G__2382));
});
var G__2416__4 = (function() { 
var G__2417__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__2417 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2418__i = 0, G__2418__a = new Array(arguments.length -  3);
while (G__2418__i < G__2418__a.length) {G__2418__a[G__2418__i] = arguments[G__2418__i + 3]; ++G__2418__i;}
  args = new cljs.core.IndexedSeq(G__2418__a,0);
} 
return G__2417__delegate.call(this,x,y,z,args);};
G__2417.cljs$lang$maxFixedArity = 3;
G__2417.cljs$lang$applyTo = (function (arglist__2419){
var x = cljs.core.first(arglist__2419);
arglist__2419 = cljs.core.next(arglist__2419);
var y = cljs.core.first(arglist__2419);
arglist__2419 = cljs.core.next(arglist__2419);
var z = cljs.core.first(arglist__2419);
var args = cljs.core.rest(arglist__2419);
return G__2417__delegate(x,y,z,args);
});
G__2417.cljs$core$IFn$_invoke$arity$variadic = G__2417__delegate;
return G__2417;
})()
;
G__2416 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2416__0.call(this);
case 1:
return G__2416__1.call(this,x);
case 2:
return G__2416__2.call(this,x,y);
case 3:
return G__2416__3.call(this,x,y,z);
default:
var G__2420 = null;
if (arguments.length > 3) {
var G__2421__i = 0, G__2421__a = new Array(arguments.length -  3);
while (G__2421__i < G__2421__a.length) {G__2421__a[G__2421__i] = arguments[G__2421__i + 3]; ++G__2421__i;}
G__2420 = new cljs.core.IndexedSeq(G__2421__a,0);
}
return G__2416__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2416.cljs$lang$maxFixedArity = 3;
G__2416.cljs$lang$applyTo = G__2416__4.cljs$lang$applyTo;
G__2416.cljs$core$IFn$_invoke$arity$0 = G__2416__0;
G__2416.cljs$core$IFn$_invoke$arity$1 = G__2416__1;
G__2416.cljs$core$IFn$_invoke$arity$2 = G__2416__2;
G__2416.cljs$core$IFn$_invoke$arity$3 = G__2416__3;
G__2416.cljs$core$IFn$_invoke$arity$variadic = G__2416__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2416;
})()
});

cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = (function (f,arg1,arg2){
return (function() {
var G__2422 = null;
var G__2422__0 = (function (){
var G__2383 = arg1;
var G__2384 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2383,G__2384) : f.call(null,G__2383,G__2384));
});
var G__2422__1 = (function (x){
var G__2385 = arg1;
var G__2386 = arg2;
var G__2387 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2385,G__2386,G__2387) : f.call(null,G__2385,G__2386,G__2387));
});
var G__2422__2 = (function (x,y){
var G__2388 = arg1;
var G__2389 = arg2;
var G__2390 = x;
var G__2391 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2388,G__2389,G__2390,G__2391) : f.call(null,G__2388,G__2389,G__2390,G__2391));
});
var G__2422__3 = (function (x,y,z){
var G__2392 = arg1;
var G__2393 = arg2;
var G__2394 = x;
var G__2395 = y;
var G__2396 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2392,G__2393,G__2394,G__2395,G__2396) : f.call(null,G__2392,G__2393,G__2394,G__2395,G__2396));
});
var G__2422__4 = (function() { 
var G__2423__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__2423 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2424__i = 0, G__2424__a = new Array(arguments.length -  3);
while (G__2424__i < G__2424__a.length) {G__2424__a[G__2424__i] = arguments[G__2424__i + 3]; ++G__2424__i;}
  args = new cljs.core.IndexedSeq(G__2424__a,0);
} 
return G__2423__delegate.call(this,x,y,z,args);};
G__2423.cljs$lang$maxFixedArity = 3;
G__2423.cljs$lang$applyTo = (function (arglist__2425){
var x = cljs.core.first(arglist__2425);
arglist__2425 = cljs.core.next(arglist__2425);
var y = cljs.core.first(arglist__2425);
arglist__2425 = cljs.core.next(arglist__2425);
var z = cljs.core.first(arglist__2425);
var args = cljs.core.rest(arglist__2425);
return G__2423__delegate(x,y,z,args);
});
G__2423.cljs$core$IFn$_invoke$arity$variadic = G__2423__delegate;
return G__2423;
})()
;
G__2422 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2422__0.call(this);
case 1:
return G__2422__1.call(this,x);
case 2:
return G__2422__2.call(this,x,y);
case 3:
return G__2422__3.call(this,x,y,z);
default:
var G__2426 = null;
if (arguments.length > 3) {
var G__2427__i = 0, G__2427__a = new Array(arguments.length -  3);
while (G__2427__i < G__2427__a.length) {G__2427__a[G__2427__i] = arguments[G__2427__i + 3]; ++G__2427__i;}
G__2426 = new cljs.core.IndexedSeq(G__2427__a,0);
}
return G__2422__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2422.cljs$lang$maxFixedArity = 3;
G__2422.cljs$lang$applyTo = G__2422__4.cljs$lang$applyTo;
G__2422.cljs$core$IFn$_invoke$arity$0 = G__2422__0;
G__2422.cljs$core$IFn$_invoke$arity$1 = G__2422__1;
G__2422.cljs$core$IFn$_invoke$arity$2 = G__2422__2;
G__2422.cljs$core$IFn$_invoke$arity$3 = G__2422__3;
G__2422.cljs$core$IFn$_invoke$arity$variadic = G__2422__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2422;
})()
});

cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__2428 = null;
var G__2428__0 = (function (){
var G__2397 = arg1;
var G__2398 = arg2;
var G__2399 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2397,G__2398,G__2399) : f.call(null,G__2397,G__2398,G__2399));
});
var G__2428__1 = (function (x){
var G__2400 = arg1;
var G__2401 = arg2;
var G__2402 = arg3;
var G__2403 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2400,G__2401,G__2402,G__2403) : f.call(null,G__2400,G__2401,G__2402,G__2403));
});
var G__2428__2 = (function (x,y){
var G__2404 = arg1;
var G__2405 = arg2;
var G__2406 = arg3;
var G__2407 = x;
var G__2408 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2404,G__2405,G__2406,G__2407,G__2408) : f.call(null,G__2404,G__2405,G__2406,G__2407,G__2408));
});
var G__2428__3 = (function (x,y,z){
var G__2409 = arg1;
var G__2410 = arg2;
var G__2411 = arg3;
var G__2412 = x;
var G__2413 = y;
var G__2414 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__2409,G__2410,G__2411,G__2412,G__2413,G__2414) : f.call(null,G__2409,G__2410,G__2411,G__2412,G__2413,G__2414));
});
var G__2428__4 = (function() { 
var G__2429__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__2429 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2430__i = 0, G__2430__a = new Array(arguments.length -  3);
while (G__2430__i < G__2430__a.length) {G__2430__a[G__2430__i] = arguments[G__2430__i + 3]; ++G__2430__i;}
  args = new cljs.core.IndexedSeq(G__2430__a,0);
} 
return G__2429__delegate.call(this,x,y,z,args);};
G__2429.cljs$lang$maxFixedArity = 3;
G__2429.cljs$lang$applyTo = (function (arglist__2431){
var x = cljs.core.first(arglist__2431);
arglist__2431 = cljs.core.next(arglist__2431);
var y = cljs.core.first(arglist__2431);
arglist__2431 = cljs.core.next(arglist__2431);
var z = cljs.core.first(arglist__2431);
var args = cljs.core.rest(arglist__2431);
return G__2429__delegate(x,y,z,args);
});
G__2429.cljs$core$IFn$_invoke$arity$variadic = G__2429__delegate;
return G__2429;
})()
;
G__2428 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2428__0.call(this);
case 1:
return G__2428__1.call(this,x);
case 2:
return G__2428__2.call(this,x,y);
case 3:
return G__2428__3.call(this,x,y,z);
default:
var G__2432 = null;
if (arguments.length > 3) {
var G__2433__i = 0, G__2433__a = new Array(arguments.length -  3);
while (G__2433__i < G__2433__a.length) {G__2433__a[G__2433__i] = arguments[G__2433__i + 3]; ++G__2433__i;}
G__2432 = new cljs.core.IndexedSeq(G__2433__a,0);
}
return G__2428__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2428.cljs$lang$maxFixedArity = 3;
G__2428.cljs$lang$applyTo = G__2428__4.cljs$lang$applyTo;
G__2428.cljs$core$IFn$_invoke$arity$0 = G__2428__0;
G__2428.cljs$core$IFn$_invoke$arity$1 = G__2428__1;
G__2428.cljs$core$IFn$_invoke$arity$2 = G__2428__2;
G__2428.cljs$core$IFn$_invoke$arity$3 = G__2428__3;
G__2428.cljs$core$IFn$_invoke$arity$variadic = G__2428__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2428;
})()
});

cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = (function (f,arg1,arg2,arg3,more){
return (function() { 
var G__2434__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__2434 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2435__i = 0, G__2435__a = new Array(arguments.length -  0);
while (G__2435__i < G__2435__a.length) {G__2435__a[G__2435__i] = arguments[G__2435__i + 0]; ++G__2435__i;}
  args = new cljs.core.IndexedSeq(G__2435__a,0);
} 
return G__2434__delegate.call(this,args);};
G__2434.cljs$lang$maxFixedArity = 0;
G__2434.cljs$lang$applyTo = (function (arglist__2436){
var args = cljs.core.seq(arglist__2436);
return G__2434__delegate(args);
});
G__2434.cljs$core$IFn$_invoke$arity$variadic = G__2434__delegate;
return G__2434;
})()
;
});

cljs.core.partial.cljs$lang$applyTo = (function (seq2366){
var G__2367 = cljs.core.first(seq2366);
var seq2366__$1 = cljs.core.next(seq2366);
var G__2368 = cljs.core.first(seq2366__$1);
var seq2366__$2 = cljs.core.next(seq2366__$1);
var G__2369 = cljs.core.first(seq2366__$2);
var seq2366__$3 = cljs.core.next(seq2366__$2);
var G__2370 = cljs.core.first(seq2366__$3);
var seq2366__$4 = cljs.core.next(seq2366__$3);
return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__2367,G__2368,G__2369,G__2370,seq2366__$4);
});

cljs.core.partial.cljs$lang$maxFixedArity = 4;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function cljs$core$fnil(){
var G__2438 = arguments.length;
switch (G__2438) {
case 2:
return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = (function (f,x){
return (function() {
var G__2456 = null;
var G__2456__1 = (function (a){
var G__2439 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2439) : f.call(null,G__2439));
});
var G__2456__2 = (function (a,b){
var G__2440 = (((a == null))?x:a);
var G__2441 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2440,G__2441) : f.call(null,G__2440,G__2441));
});
var G__2456__3 = (function (a,b,c){
var G__2442 = (((a == null))?x:a);
var G__2443 = b;
var G__2444 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2442,G__2443,G__2444) : f.call(null,G__2442,G__2443,G__2444));
});
var G__2456__4 = (function() { 
var G__2457__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__2457 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__2458__i = 0, G__2458__a = new Array(arguments.length -  3);
while (G__2458__i < G__2458__a.length) {G__2458__a[G__2458__i] = arguments[G__2458__i + 3]; ++G__2458__i;}
  ds = new cljs.core.IndexedSeq(G__2458__a,0);
} 
return G__2457__delegate.call(this,a,b,c,ds);};
G__2457.cljs$lang$maxFixedArity = 3;
G__2457.cljs$lang$applyTo = (function (arglist__2459){
var a = cljs.core.first(arglist__2459);
arglist__2459 = cljs.core.next(arglist__2459);
var b = cljs.core.first(arglist__2459);
arglist__2459 = cljs.core.next(arglist__2459);
var c = cljs.core.first(arglist__2459);
var ds = cljs.core.rest(arglist__2459);
return G__2457__delegate(a,b,c,ds);
});
G__2457.cljs$core$IFn$_invoke$arity$variadic = G__2457__delegate;
return G__2457;
})()
;
G__2456 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__2456__1.call(this,a);
case 2:
return G__2456__2.call(this,a,b);
case 3:
return G__2456__3.call(this,a,b,c);
default:
var G__2460 = null;
if (arguments.length > 3) {
var G__2461__i = 0, G__2461__a = new Array(arguments.length -  3);
while (G__2461__i < G__2461__a.length) {G__2461__a[G__2461__i] = arguments[G__2461__i + 3]; ++G__2461__i;}
G__2460 = new cljs.core.IndexedSeq(G__2461__a,0);
}
return G__2456__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__2460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2456.cljs$lang$maxFixedArity = 3;
G__2456.cljs$lang$applyTo = G__2456__4.cljs$lang$applyTo;
G__2456.cljs$core$IFn$_invoke$arity$1 = G__2456__1;
G__2456.cljs$core$IFn$_invoke$arity$2 = G__2456__2;
G__2456.cljs$core$IFn$_invoke$arity$3 = G__2456__3;
G__2456.cljs$core$IFn$_invoke$arity$variadic = G__2456__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2456;
})()
});

cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = (function (f,x,y){
return (function() {
var G__2462 = null;
var G__2462__2 = (function (a,b){
var G__2445 = (((a == null))?x:a);
var G__2446 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2445,G__2446) : f.call(null,G__2445,G__2446));
});
var G__2462__3 = (function (a,b,c){
var G__2447 = (((a == null))?x:a);
var G__2448 = (((b == null))?y:b);
var G__2449 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2447,G__2448,G__2449) : f.call(null,G__2447,G__2448,G__2449));
});
var G__2462__4 = (function() { 
var G__2463__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__2463 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__2464__i = 0, G__2464__a = new Array(arguments.length -  3);
while (G__2464__i < G__2464__a.length) {G__2464__a[G__2464__i] = arguments[G__2464__i + 3]; ++G__2464__i;}
  ds = new cljs.core.IndexedSeq(G__2464__a,0);
} 
return G__2463__delegate.call(this,a,b,c,ds);};
G__2463.cljs$lang$maxFixedArity = 3;
G__2463.cljs$lang$applyTo = (function (arglist__2465){
var a = cljs.core.first(arglist__2465);
arglist__2465 = cljs.core.next(arglist__2465);
var b = cljs.core.first(arglist__2465);
arglist__2465 = cljs.core.next(arglist__2465);
var c = cljs.core.first(arglist__2465);
var ds = cljs.core.rest(arglist__2465);
return G__2463__delegate(a,b,c,ds);
});
G__2463.cljs$core$IFn$_invoke$arity$variadic = G__2463__delegate;
return G__2463;
})()
;
G__2462 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__2462__2.call(this,a,b);
case 3:
return G__2462__3.call(this,a,b,c);
default:
var G__2466 = null;
if (arguments.length > 3) {
var G__2467__i = 0, G__2467__a = new Array(arguments.length -  3);
while (G__2467__i < G__2467__a.length) {G__2467__a[G__2467__i] = arguments[G__2467__i + 3]; ++G__2467__i;}
G__2466 = new cljs.core.IndexedSeq(G__2467__a,0);
}
return G__2462__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__2466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2462.cljs$lang$maxFixedArity = 3;
G__2462.cljs$lang$applyTo = G__2462__4.cljs$lang$applyTo;
G__2462.cljs$core$IFn$_invoke$arity$2 = G__2462__2;
G__2462.cljs$core$IFn$_invoke$arity$3 = G__2462__3;
G__2462.cljs$core$IFn$_invoke$arity$variadic = G__2462__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2462;
})()
});

cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = (function (f,x,y,z){
return (function() {
var G__2468 = null;
var G__2468__2 = (function (a,b){
var G__2450 = (((a == null))?x:a);
var G__2451 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2450,G__2451) : f.call(null,G__2450,G__2451));
});
var G__2468__3 = (function (a,b,c){
var G__2452 = (((a == null))?x:a);
var G__2453 = (((b == null))?y:b);
var G__2454 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2452,G__2453,G__2454) : f.call(null,G__2452,G__2453,G__2454));
});
var G__2468__4 = (function() { 
var G__2469__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__2469 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__2470__i = 0, G__2470__a = new Array(arguments.length -  3);
while (G__2470__i < G__2470__a.length) {G__2470__a[G__2470__i] = arguments[G__2470__i + 3]; ++G__2470__i;}
  ds = new cljs.core.IndexedSeq(G__2470__a,0);
} 
return G__2469__delegate.call(this,a,b,c,ds);};
G__2469.cljs$lang$maxFixedArity = 3;
G__2469.cljs$lang$applyTo = (function (arglist__2471){
var a = cljs.core.first(arglist__2471);
arglist__2471 = cljs.core.next(arglist__2471);
var b = cljs.core.first(arglist__2471);
arglist__2471 = cljs.core.next(arglist__2471);
var c = cljs.core.first(arglist__2471);
var ds = cljs.core.rest(arglist__2471);
return G__2469__delegate(a,b,c,ds);
});
G__2469.cljs$core$IFn$_invoke$arity$variadic = G__2469__delegate;
return G__2469;
})()
;
G__2468 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__2468__2.call(this,a,b);
case 3:
return G__2468__3.call(this,a,b,c);
default:
var G__2472 = null;
if (arguments.length > 3) {
var G__2473__i = 0, G__2473__a = new Array(arguments.length -  3);
while (G__2473__i < G__2473__a.length) {G__2473__a[G__2473__i] = arguments[G__2473__i + 3]; ++G__2473__i;}
G__2472 = new cljs.core.IndexedSeq(G__2473__a,0);
}
return G__2468__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__2472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2468.cljs$lang$maxFixedArity = 3;
G__2468.cljs$lang$applyTo = G__2468__4.cljs$lang$applyTo;
G__2468.cljs$core$IFn$_invoke$arity$2 = G__2468__2;
G__2468.cljs$core$IFn$_invoke$arity$3 = G__2468__3;
G__2468.cljs$core$IFn$_invoke$arity$variadic = G__2468__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2468;
})()
});

cljs.core.fnil.cljs$lang$maxFixedArity = 4;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function cljs$core$map_indexed(){
var G__2475 = arguments.length;
switch (G__2475) {
case 1:
return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = (function (f){
return (function (rf){
var i = (function (){var G__2476 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__2476) : cljs.core.volatile_BANG_.call(null,G__2476));
})();
return ((function (i){
return (function() {
var G__2507 = null;
var G__2507__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__2507__1 = (function (result){
var G__2477 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__2477) : rf.call(null,G__2477));
});
var G__2507__2 = (function (result,input){
var G__2478 = result;
var G__2479 = (function (){var G__2480 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__2481 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2480,G__2481) : f.call(null,G__2480,G__2481));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__2478,G__2479) : rf.call(null,G__2478,G__2479));
});
G__2507 = function(result,input){
switch(arguments.length){
case 0:
return G__2507__0.call(this);
case 1:
return G__2507__1.call(this,result);
case 2:
return G__2507__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2507.cljs$core$IFn$_invoke$arity$0 = G__2507__0;
G__2507.cljs$core$IFn$_invoke$arity$1 = G__2507__1;
G__2507.cljs$core$IFn$_invoke$arity$2 = G__2507__2;
return G__2507;
})()
;})(i))
});
});

cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
var mapi = (function cljs$core$mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll__$1);
if(temp__4404__auto__){
var s = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3731__auto___2508 = size;
var i_2509 = (0);
while(true){
if((i_2509 < n__3731__auto___2508)){
cljs.core.chunk_append(b,(function (){var G__2502 = (idx + i_2509);
var G__2503 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_2509);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2502,G__2503) : f.call(null,G__2502,G__2503));
})());

var G__2510 = (i_2509 + (1));
i_2509 = G__2510;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__2504 = idx;
var G__2505 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2504,G__2505) : f.call(null,G__2504,G__2505));
})(),cljs$core$mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});

cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function cljs$core$keep(){
var G__2512 = arguments.length;
switch (G__2512) {
case 1:
return cljs.core.keep.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.keep.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = (function (f){
return (function (rf){
return (function() {
var G__2520 = null;
var G__2520__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__2520__1 = (function (result){
var G__2513 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__2513) : rf.call(null,G__2513));
});
var G__2520__2 = (function (result,input){
var v = (function (){var G__2514 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2514) : f.call(null,G__2514));
})();
if((v == null)){
return result;
} else {
var G__2515 = result;
var G__2516 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__2515,G__2516) : rf.call(null,G__2515,G__2516));
}
});
G__2520 = function(result,input){
switch(arguments.length){
case 0:
return G__2520__0.call(this);
case 1:
return G__2520__1.call(this,result);
case 2:
return G__2520__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2520.cljs$core$IFn$_invoke$arity$0 = G__2520__0;
G__2520.cljs$core$IFn$_invoke$arity$1 = G__2520__1;
G__2520.cljs$core$IFn$_invoke$arity$2 = G__2520__2;
return G__2520;
})()
});
});

cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3731__auto___2521 = size;
var i_2522 = (0);
while(true){
if((i_2522 < n__3731__auto___2521)){
var x_2523 = (function (){var G__2517 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_2522);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2517) : f.call(null,G__2517));
})();
if((x_2523 == null)){
} else {
cljs.core.chunk_append(b,x_2523);
}

var G__2524 = (i_2522 + (1));
i_2522 = G__2524;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__2518 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2518) : f.call(null,G__2518));
})();
if((x == null)){
return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});

cljs.core.keep.cljs$lang$maxFixedArity = 2;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition1$ = 16386;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
})
cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__2525 = cljs.core.seq(self__.watches);
var chunk__2526 = null;
var count__2527 = (0);
var i__2528 = (0);
while(true){
if((i__2528 < count__2527)){
var vec__2529 = chunk__2526.cljs$core$IIndexed$_nth$arity$2(null,i__2528);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2529,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2529,(1),null);
var G__2530_2540 = key;
var G__2531_2541 = this$__$1;
var G__2532_2542 = oldval;
var G__2533_2543 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2530_2540,G__2531_2541,G__2532_2542,G__2533_2543) : f.call(null,G__2530_2540,G__2531_2541,G__2532_2542,G__2533_2543));

var G__2544 = seq__2525;
var G__2545 = chunk__2526;
var G__2546 = count__2527;
var G__2547 = (i__2528 + (1));
seq__2525 = G__2544;
chunk__2526 = G__2545;
count__2527 = G__2546;
i__2528 = G__2547;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__2525);
if(temp__4404__auto__){
var seq__2525__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__2525__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__2525__$1);
var G__2548 = cljs.core.chunk_rest(seq__2525__$1);
var G__2549 = c__3679__auto__;
var G__2550 = cljs.core.count(c__3679__auto__);
var G__2551 = (0);
seq__2525 = G__2548;
chunk__2526 = G__2549;
count__2527 = G__2550;
i__2528 = G__2551;
continue;
} else {
var vec__2534 = cljs.core.first(seq__2525__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2534,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2534,(1),null);
var G__2535_2552 = key;
var G__2536_2553 = this$__$1;
var G__2537_2554 = oldval;
var G__2538_2555 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2535_2552,G__2536_2553,G__2537_2554,G__2538_2555) : f.call(null,G__2535_2552,G__2536_2553,G__2537_2554,G__2538_2555));

var G__2556 = cljs.core.next(seq__2525__$1);
var G__2557 = null;
var G__2558 = (0);
var G__2559 = (0);
seq__2525 = G__2556;
chunk__2526 = G__2557;
count__2527 = G__2558;
i__2528 = G__2559;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__2539 = this$__$1;
return goog.getUid(G__2539);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 */
cljs.core.atom = (function cljs$core$atom(){
var G__2563 = arguments.length;
switch (G__2563) {
case 1:
return cljs.core.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,1),(0)));
return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3834__auto__);

}
});

cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});

cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__2564){
var map__2565 = p__2564;
var map__2565__$1 = ((cljs.core.seq_QMARK_(map__2565))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__2565):map__2565);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2565__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2565__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
return (new cljs.core.Atom(x,meta,validator,null));
});

cljs.core.atom.cljs$lang$applyTo = (function (seq2560){
var G__2561 = cljs.core.first(seq2560);
var seq2560__$1 = cljs.core.next(seq2560);
return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__2561,seq2560__$1);
});

cljs.core.atom.cljs$lang$maxFixedArity = 1;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__2569 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__2569) : validate.call(null,G__2569));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__2570 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__2570) : cljs.core.pr_str.call(null,G__2570));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 */
cljs.core.swap_BANG_ = (function cljs$core$swap_BANG_(){
var G__2577 = arguments.length;
switch (G__2577) {
case 2:
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,4),(0)));
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__3834__auto__);

}
});

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__2578 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2578) : f.call(null,G__2578));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__2579 = a.state;
var G__2580 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2579,G__2580) : f.call(null,G__2579,G__2580));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__2581 = a.state;
var G__2582 = x;
var G__2583 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2581,G__2582,G__2583) : f.call(null,G__2581,G__2582,G__2583));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
});

cljs.core.swap_BANG_.cljs$lang$applyTo = (function (seq2571){
var G__2572 = cljs.core.first(seq2571);
var seq2571__$1 = cljs.core.next(seq2571);
var G__2573 = cljs.core.first(seq2571__$1);
var seq2571__$2 = cljs.core.next(seq2571__$1);
var G__2574 = cljs.core.first(seq2571__$2);
var seq2571__$3 = cljs.core.next(seq2571__$2);
var G__2575 = cljs.core.first(seq2571__$3);
var seq2571__$4 = cljs.core.next(seq2571__$3);
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__2572,G__2573,G__2574,G__2575,seq2571__$4);
});

cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function cljs$core$keep_indexed(){
var G__2586 = arguments.length;
switch (G__2586) {
case 1:
return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__2621 = null;
var G__2621__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__2621__1 = (function (result){
var G__2587 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__2587) : rf.call(null,G__2587));
});
var G__2621__2 = (function (result,input){
var i = cljs.core._vreset_BANG_(ia,(cljs.core._deref(ia) + (1)));
var v = (function (){var G__2588 = i;
var G__2589 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2588,G__2589) : f.call(null,G__2588,G__2589));
})();
if((v == null)){
return result;
} else {
var G__2590 = result;
var G__2591 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__2590,G__2591) : rf.call(null,G__2590,G__2591));
}
});
G__2621 = function(result,input){
switch(arguments.length){
case 0:
return G__2621__0.call(this);
case 1:
return G__2621__1.call(this,result);
case 2:
return G__2621__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2621.cljs$core$IFn$_invoke$arity$0 = G__2621__0;
G__2621.cljs$core$IFn$_invoke$arity$1 = G__2621__1;
G__2621.cljs$core$IFn$_invoke$arity$2 = G__2621__2;
return G__2621;
})()
;})(ia))
});
});

cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
var keepi = (function cljs$core$keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll__$1);
if(temp__4404__auto__){
var s = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3731__auto___2622 = size;
var i_2623 = (0);
while(true){
if((i_2623 < n__3731__auto___2622)){
var x_2624 = (function (){var G__2616 = (idx + i_2623);
var G__2617 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_2623);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2616,G__2617) : f.call(null,G__2616,G__2617));
})();
if((x_2624 == null)){
} else {
cljs.core.chunk_append(b,x_2624);
}

var G__2625 = (i_2623 + (1));
i_2623 = G__2625;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__2618 = idx;
var G__2619 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2618,G__2619) : f.call(null,G__2618,G__2619));
})();
if((x == null)){
return cljs$core$keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});

cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 */
cljs.core.every_pred = (function cljs$core$every_pred(){
var G__2637 = arguments.length;
switch (G__2637) {
case 1:
return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = (function (p){
return (function() {
var cljs$core$ep1 = null;
var cljs$core$ep1__0 = (function (){
return true;
});
var cljs$core$ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__2653 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2653) : p.call(null,G__2653));
})());
});
var cljs$core$ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2655 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2655) : p.call(null,G__2655));
})();
if(cljs.core.truth_(and__3302__auto__)){
var G__2656 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2656) : p.call(null,G__2656));
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2658 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2658) : p.call(null,G__2658));
})();
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__2660 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2660) : p.call(null,G__2660));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var G__2661 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2661) : p.call(null,G__2661));
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep1__4 = (function() { 
var G__2823__delegate = function (x,y,z,args){
return cljs.core.boolean$((function (){var and__3302__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(and__3302__auto__)){
return cljs.core.every_QMARK_(p,args);
} else {
return and__3302__auto__;
}
})());
};
var G__2823 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2824__i = 0, G__2824__a = new Array(arguments.length -  3);
while (G__2824__i < G__2824__a.length) {G__2824__a[G__2824__i] = arguments[G__2824__i + 3]; ++G__2824__i;}
  args = new cljs.core.IndexedSeq(G__2824__a,0);
} 
return G__2823__delegate.call(this,x,y,z,args);};
G__2823.cljs$lang$maxFixedArity = 3;
G__2823.cljs$lang$applyTo = (function (arglist__2825){
var x = cljs.core.first(arglist__2825);
arglist__2825 = cljs.core.next(arglist__2825);
var y = cljs.core.first(arglist__2825);
arglist__2825 = cljs.core.next(arglist__2825);
var z = cljs.core.first(arglist__2825);
var args = cljs.core.rest(arglist__2825);
return G__2823__delegate(x,y,z,args);
});
G__2823.cljs$core$IFn$_invoke$arity$variadic = G__2823__delegate;
return G__2823;
})()
;
cljs$core$ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$ep1__0.call(this);
case 1:
return cljs$core$ep1__1.call(this,x);
case 2:
return cljs$core$ep1__2.call(this,x,y);
case 3:
return cljs$core$ep1__3.call(this,x,y,z);
default:
var G__2826 = null;
if (arguments.length > 3) {
var G__2827__i = 0, G__2827__a = new Array(arguments.length -  3);
while (G__2827__i < G__2827__a.length) {G__2827__a[G__2827__i] = arguments[G__2827__i + 3]; ++G__2827__i;}
G__2826 = new cljs.core.IndexedSeq(G__2827__a,0);
}
return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2826);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ep1.cljs$lang$maxFixedArity = 3;
cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$ep1;
})()
});

cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = (function (p1,p2){
return (function() {
var cljs$core$ep2 = null;
var cljs$core$ep2__0 = (function (){
return true;
});
var cljs$core$ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2693 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2693) : p1.call(null,G__2693));
})();
if(cljs.core.truth_(and__3302__auto__)){
var G__2694 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2694) : p2.call(null,G__2694));
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2696 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2696) : p1.call(null,G__2696));
})();
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__2698 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2698) : p1.call(null,G__2698));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var and__3302__auto____$2 = (function (){var G__2700 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2700) : p2.call(null,G__2700));
})();
if(cljs.core.truth_(and__3302__auto____$2)){
var G__2701 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2701) : p2.call(null,G__2701));
} else {
return and__3302__auto____$2;
}
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2703 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2703) : p1.call(null,G__2703));
})();
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__2705 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2705) : p1.call(null,G__2705));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var and__3302__auto____$2 = (function (){var G__2707 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2707) : p1.call(null,G__2707));
})();
if(cljs.core.truth_(and__3302__auto____$2)){
var and__3302__auto____$3 = (function (){var G__2709 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2709) : p2.call(null,G__2709));
})();
if(cljs.core.truth_(and__3302__auto____$3)){
var and__3302__auto____$4 = (function (){var G__2711 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2711) : p2.call(null,G__2711));
})();
if(cljs.core.truth_(and__3302__auto____$4)){
var G__2712 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2712) : p2.call(null,G__2712));
} else {
return and__3302__auto____$4;
}
} else {
return and__3302__auto____$3;
}
} else {
return and__3302__auto____$2;
}
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep2__4 = (function() { 
var G__2828__delegate = function (x,y,z,args){
return cljs.core.boolean$((function (){var and__3302__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(and__3302__auto__)){
return cljs.core.every_QMARK_(((function (and__3302__auto__){
return (function (p1__2626_SHARP_){
var and__3302__auto____$1 = (function (){var G__2714 = p1__2626_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2714) : p1.call(null,G__2714));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var G__2715 = p1__2626_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2715) : p2.call(null,G__2715));
} else {
return and__3302__auto____$1;
}
});})(and__3302__auto__))
,args);
} else {
return and__3302__auto__;
}
})());
};
var G__2828 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2829__i = 0, G__2829__a = new Array(arguments.length -  3);
while (G__2829__i < G__2829__a.length) {G__2829__a[G__2829__i] = arguments[G__2829__i + 3]; ++G__2829__i;}
  args = new cljs.core.IndexedSeq(G__2829__a,0);
} 
return G__2828__delegate.call(this,x,y,z,args);};
G__2828.cljs$lang$maxFixedArity = 3;
G__2828.cljs$lang$applyTo = (function (arglist__2830){
var x = cljs.core.first(arglist__2830);
arglist__2830 = cljs.core.next(arglist__2830);
var y = cljs.core.first(arglist__2830);
arglist__2830 = cljs.core.next(arglist__2830);
var z = cljs.core.first(arglist__2830);
var args = cljs.core.rest(arglist__2830);
return G__2828__delegate(x,y,z,args);
});
G__2828.cljs$core$IFn$_invoke$arity$variadic = G__2828__delegate;
return G__2828;
})()
;
cljs$core$ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$ep2__0.call(this);
case 1:
return cljs$core$ep2__1.call(this,x);
case 2:
return cljs$core$ep2__2.call(this,x,y);
case 3:
return cljs$core$ep2__3.call(this,x,y,z);
default:
var G__2831 = null;
if (arguments.length > 3) {
var G__2832__i = 0, G__2832__a = new Array(arguments.length -  3);
while (G__2832__i < G__2832__a.length) {G__2832__a[G__2832__i] = arguments[G__2832__i + 3]; ++G__2832__i;}
G__2831 = new cljs.core.IndexedSeq(G__2832__a,0);
}
return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ep2.cljs$lang$maxFixedArity = 3;
cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$ep2;
})()
});

cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = (function (p1,p2,p3){
return (function() {
var cljs$core$ep3 = null;
var cljs$core$ep3__0 = (function (){
return true;
});
var cljs$core$ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2761 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2761) : p1.call(null,G__2761));
})();
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__2763 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2763) : p2.call(null,G__2763));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var G__2764 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2764) : p3.call(null,G__2764));
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2766 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2766) : p1.call(null,G__2766));
})();
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__2768 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2768) : p2.call(null,G__2768));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var and__3302__auto____$2 = (function (){var G__2770 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2770) : p3.call(null,G__2770));
})();
if(cljs.core.truth_(and__3302__auto____$2)){
var and__3302__auto____$3 = (function (){var G__2772 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2772) : p1.call(null,G__2772));
})();
if(cljs.core.truth_(and__3302__auto____$3)){
var and__3302__auto____$4 = (function (){var G__2774 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2774) : p2.call(null,G__2774));
})();
if(cljs.core.truth_(and__3302__auto____$4)){
var G__2775 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2775) : p3.call(null,G__2775));
} else {
return and__3302__auto____$4;
}
} else {
return and__3302__auto____$3;
}
} else {
return and__3302__auto____$2;
}
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3302__auto__ = (function (){var G__2777 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2777) : p1.call(null,G__2777));
})();
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__2779 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2779) : p2.call(null,G__2779));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var and__3302__auto____$2 = (function (){var G__2781 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2781) : p3.call(null,G__2781));
})();
if(cljs.core.truth_(and__3302__auto____$2)){
var and__3302__auto____$3 = (function (){var G__2783 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2783) : p1.call(null,G__2783));
})();
if(cljs.core.truth_(and__3302__auto____$3)){
var and__3302__auto____$4 = (function (){var G__2785 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2785) : p2.call(null,G__2785));
})();
if(cljs.core.truth_(and__3302__auto____$4)){
var and__3302__auto____$5 = (function (){var G__2787 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2787) : p3.call(null,G__2787));
})();
if(cljs.core.truth_(and__3302__auto____$5)){
var and__3302__auto____$6 = (function (){var G__2789 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2789) : p1.call(null,G__2789));
})();
if(cljs.core.truth_(and__3302__auto____$6)){
var and__3302__auto____$7 = (function (){var G__2791 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2791) : p2.call(null,G__2791));
})();
if(cljs.core.truth_(and__3302__auto____$7)){
var G__2792 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2792) : p3.call(null,G__2792));
} else {
return and__3302__auto____$7;
}
} else {
return and__3302__auto____$6;
}
} else {
return and__3302__auto____$5;
}
} else {
return and__3302__auto____$4;
}
} else {
return and__3302__auto____$3;
}
} else {
return and__3302__auto____$2;
}
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
})());
});
var cljs$core$ep3__4 = (function() { 
var G__2833__delegate = function (x,y,z,args){
return cljs.core.boolean$((function (){var and__3302__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(and__3302__auto__)){
return cljs.core.every_QMARK_(((function (and__3302__auto__){
return (function (p1__2627_SHARP_){
var and__3302__auto____$1 = (function (){var G__2794 = p1__2627_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2794) : p1.call(null,G__2794));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var and__3302__auto____$2 = (function (){var G__2796 = p1__2627_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2796) : p2.call(null,G__2796));
})();
if(cljs.core.truth_(and__3302__auto____$2)){
var G__2797 = p1__2627_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2797) : p3.call(null,G__2797));
} else {
return and__3302__auto____$2;
}
} else {
return and__3302__auto____$1;
}
});})(and__3302__auto__))
,args);
} else {
return and__3302__auto__;
}
})());
};
var G__2833 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2834__i = 0, G__2834__a = new Array(arguments.length -  3);
while (G__2834__i < G__2834__a.length) {G__2834__a[G__2834__i] = arguments[G__2834__i + 3]; ++G__2834__i;}
  args = new cljs.core.IndexedSeq(G__2834__a,0);
} 
return G__2833__delegate.call(this,x,y,z,args);};
G__2833.cljs$lang$maxFixedArity = 3;
G__2833.cljs$lang$applyTo = (function (arglist__2835){
var x = cljs.core.first(arglist__2835);
arglist__2835 = cljs.core.next(arglist__2835);
var y = cljs.core.first(arglist__2835);
arglist__2835 = cljs.core.next(arglist__2835);
var z = cljs.core.first(arglist__2835);
var args = cljs.core.rest(arglist__2835);
return G__2833__delegate(x,y,z,args);
});
G__2833.cljs$core$IFn$_invoke$arity$variadic = G__2833__delegate;
return G__2833;
})()
;
cljs$core$ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$ep3__0.call(this);
case 1:
return cljs$core$ep3__1.call(this,x);
case 2:
return cljs$core$ep3__2.call(this,x,y);
case 3:
return cljs$core$ep3__3.call(this,x,y,z);
default:
var G__2836 = null;
if (arguments.length > 3) {
var G__2837__i = 0, G__2837__a = new Array(arguments.length -  3);
while (G__2837__i < G__2837__a.length) {G__2837__a[G__2837__i] = arguments[G__2837__i + 3]; ++G__2837__i;}
G__2836 = new cljs.core.IndexedSeq(G__2837__a,0);
}
return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2836);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ep3.cljs$lang$maxFixedArity = 3;
cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$ep3;
})()
});

cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = (function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$epn = null;
var cljs$core$epn__0 = (function (){
return true;
});
var cljs$core$epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__2628_SHARP_){
var G__2813 = x;
return (p1__2628_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2628_SHARP_.cljs$core$IFn$_invoke$arity$1(G__2813) : p1__2628_SHARP_.call(null,G__2813));
});})(ps__$1))
,ps__$1);
});
var cljs$core$epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__2629_SHARP_){
var and__3302__auto__ = (function (){var G__2815 = x;
return (p1__2629_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2629_SHARP_.cljs$core$IFn$_invoke$arity$1(G__2815) : p1__2629_SHARP_.call(null,G__2815));
})();
if(cljs.core.truth_(and__3302__auto__)){
var G__2816 = y;
return (p1__2629_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2629_SHARP_.cljs$core$IFn$_invoke$arity$1(G__2816) : p1__2629_SHARP_.call(null,G__2816));
} else {
return and__3302__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__2630_SHARP_){
var and__3302__auto__ = (function (){var G__2818 = x;
return (p1__2630_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2630_SHARP_.cljs$core$IFn$_invoke$arity$1(G__2818) : p1__2630_SHARP_.call(null,G__2818));
})();
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__2820 = y;
return (p1__2630_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2630_SHARP_.cljs$core$IFn$_invoke$arity$1(G__2820) : p1__2630_SHARP_.call(null,G__2820));
})();
if(cljs.core.truth_(and__3302__auto____$1)){
var G__2821 = z;
return (p1__2630_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2630_SHARP_.cljs$core$IFn$_invoke$arity$1(G__2821) : p1__2630_SHARP_.call(null,G__2821));
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$epn__4 = (function() { 
var G__2838__delegate = function (x,y,z,args){
return cljs.core.boolean$((function (){var and__3302__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(and__3302__auto__)){
return cljs.core.every_QMARK_(((function (and__3302__auto__,ps__$1){
return (function (p1__2631_SHARP_){
return cljs.core.every_QMARK_(p1__2631_SHARP_,args);
});})(and__3302__auto__,ps__$1))
,ps__$1);
} else {
return and__3302__auto__;
}
})());
};
var G__2838 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2839__i = 0, G__2839__a = new Array(arguments.length -  3);
while (G__2839__i < G__2839__a.length) {G__2839__a[G__2839__i] = arguments[G__2839__i + 3]; ++G__2839__i;}
  args = new cljs.core.IndexedSeq(G__2839__a,0);
} 
return G__2838__delegate.call(this,x,y,z,args);};
G__2838.cljs$lang$maxFixedArity = 3;
G__2838.cljs$lang$applyTo = (function (arglist__2840){
var x = cljs.core.first(arglist__2840);
arglist__2840 = cljs.core.next(arglist__2840);
var y = cljs.core.first(arglist__2840);
arglist__2840 = cljs.core.next(arglist__2840);
var z = cljs.core.first(arglist__2840);
var args = cljs.core.rest(arglist__2840);
return G__2838__delegate(x,y,z,args);
});
G__2838.cljs$core$IFn$_invoke$arity$variadic = G__2838__delegate;
return G__2838;
})()
;
cljs$core$epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$epn__0.call(this);
case 1:
return cljs$core$epn__1.call(this,x);
case 2:
return cljs$core$epn__2.call(this,x,y);
case 3:
return cljs$core$epn__3.call(this,x,y,z);
default:
var G__2841 = null;
if (arguments.length > 3) {
var G__2842__i = 0, G__2842__a = new Array(arguments.length -  3);
while (G__2842__i < G__2842__a.length) {G__2842__a[G__2842__i] = arguments[G__2842__i + 3]; ++G__2842__i;}
G__2841 = new cljs.core.IndexedSeq(G__2842__a,0);
}
return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$epn.cljs$lang$maxFixedArity = 3;
cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$epn;
})()
;})(ps__$1))
});

cljs.core.every_pred.cljs$lang$applyTo = (function (seq2632){
var G__2633 = cljs.core.first(seq2632);
var seq2632__$1 = cljs.core.next(seq2632);
var G__2634 = cljs.core.first(seq2632__$1);
var seq2632__$2 = cljs.core.next(seq2632__$1);
var G__2635 = cljs.core.first(seq2632__$2);
var seq2632__$3 = cljs.core.next(seq2632__$2);
return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__2633,G__2634,G__2635,seq2632__$3);
});

cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 */
cljs.core.some_fn = (function cljs$core$some_fn(){
var G__2854 = arguments.length;
switch (G__2854) {
case 1:
return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = (function (p){
return (function() {
var cljs$core$sp1 = null;
var cljs$core$sp1__0 = (function (){
return null;
});
var cljs$core$sp1__1 = (function (x){
var G__2870 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2870) : p.call(null,G__2870));
});
var cljs$core$sp1__2 = (function (x,y){
var or__3310__auto__ = (function (){var G__2872 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2872) : p.call(null,G__2872));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var G__2873 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2873) : p.call(null,G__2873));
}
});
var cljs$core$sp1__3 = (function (x,y,z){
var or__3310__auto__ = (function (){var G__2875 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2875) : p.call(null,G__2875));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var G__2877 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2877) : p.call(null,G__2877));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var G__2878 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__2878) : p.call(null,G__2878));
}
}
});
var cljs$core$sp1__4 = (function() { 
var G__3040__delegate = function (x,y,z,args){
var or__3310__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__3040 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3041__i = 0, G__3041__a = new Array(arguments.length -  3);
while (G__3041__i < G__3041__a.length) {G__3041__a[G__3041__i] = arguments[G__3041__i + 3]; ++G__3041__i;}
  args = new cljs.core.IndexedSeq(G__3041__a,0);
} 
return G__3040__delegate.call(this,x,y,z,args);};
G__3040.cljs$lang$maxFixedArity = 3;
G__3040.cljs$lang$applyTo = (function (arglist__3042){
var x = cljs.core.first(arglist__3042);
arglist__3042 = cljs.core.next(arglist__3042);
var y = cljs.core.first(arglist__3042);
arglist__3042 = cljs.core.next(arglist__3042);
var z = cljs.core.first(arglist__3042);
var args = cljs.core.rest(arglist__3042);
return G__3040__delegate(x,y,z,args);
});
G__3040.cljs$core$IFn$_invoke$arity$variadic = G__3040__delegate;
return G__3040;
})()
;
cljs$core$sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$sp1__0.call(this);
case 1:
return cljs$core$sp1__1.call(this,x);
case 2:
return cljs$core$sp1__2.call(this,x,y);
case 3:
return cljs$core$sp1__3.call(this,x,y,z);
default:
var G__3043 = null;
if (arguments.length > 3) {
var G__3044__i = 0, G__3044__a = new Array(arguments.length -  3);
while (G__3044__i < G__3044__a.length) {G__3044__a[G__3044__i] = arguments[G__3044__i + 3]; ++G__3044__i;}
G__3043 = new cljs.core.IndexedSeq(G__3044__a,0);
}
return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sp1.cljs$lang$maxFixedArity = 3;
cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sp1;
})()
});

cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = (function (p1,p2){
return (function() {
var cljs$core$sp2 = null;
var cljs$core$sp2__0 = (function (){
return null;
});
var cljs$core$sp2__1 = (function (x){
var or__3310__auto__ = (function (){var G__2910 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2910) : p1.call(null,G__2910));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var G__2911 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2911) : p2.call(null,G__2911));
}
});
var cljs$core$sp2__2 = (function (x,y){
var or__3310__auto__ = (function (){var G__2913 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2913) : p1.call(null,G__2913));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var G__2915 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2915) : p1.call(null,G__2915));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var or__3310__auto____$2 = (function (){var G__2917 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2917) : p2.call(null,G__2917));
})();
if(cljs.core.truth_(or__3310__auto____$2)){
return or__3310__auto____$2;
} else {
var G__2918 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2918) : p2.call(null,G__2918));
}
}
}
});
var cljs$core$sp2__3 = (function (x,y,z){
var or__3310__auto__ = (function (){var G__2920 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2920) : p1.call(null,G__2920));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var G__2922 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2922) : p1.call(null,G__2922));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var or__3310__auto____$2 = (function (){var G__2924 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2924) : p1.call(null,G__2924));
})();
if(cljs.core.truth_(or__3310__auto____$2)){
return or__3310__auto____$2;
} else {
var or__3310__auto____$3 = (function (){var G__2926 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2926) : p2.call(null,G__2926));
})();
if(cljs.core.truth_(or__3310__auto____$3)){
return or__3310__auto____$3;
} else {
var or__3310__auto____$4 = (function (){var G__2928 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2928) : p2.call(null,G__2928));
})();
if(cljs.core.truth_(or__3310__auto____$4)){
return or__3310__auto____$4;
} else {
var G__2929 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2929) : p2.call(null,G__2929));
}
}
}
}
}
});
var cljs$core$sp2__4 = (function() { 
var G__3045__delegate = function (x,y,z,args){
var or__3310__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.some(((function (or__3310__auto__){
return (function (p1__2843_SHARP_){
var or__3310__auto____$1 = (function (){var G__2931 = p1__2843_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2931) : p1.call(null,G__2931));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var G__2932 = p1__2843_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2932) : p2.call(null,G__2932));
}
});})(or__3310__auto__))
,args);
}
};
var G__3045 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3046__i = 0, G__3046__a = new Array(arguments.length -  3);
while (G__3046__i < G__3046__a.length) {G__3046__a[G__3046__i] = arguments[G__3046__i + 3]; ++G__3046__i;}
  args = new cljs.core.IndexedSeq(G__3046__a,0);
} 
return G__3045__delegate.call(this,x,y,z,args);};
G__3045.cljs$lang$maxFixedArity = 3;
G__3045.cljs$lang$applyTo = (function (arglist__3047){
var x = cljs.core.first(arglist__3047);
arglist__3047 = cljs.core.next(arglist__3047);
var y = cljs.core.first(arglist__3047);
arglist__3047 = cljs.core.next(arglist__3047);
var z = cljs.core.first(arglist__3047);
var args = cljs.core.rest(arglist__3047);
return G__3045__delegate(x,y,z,args);
});
G__3045.cljs$core$IFn$_invoke$arity$variadic = G__3045__delegate;
return G__3045;
})()
;
cljs$core$sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$sp2__0.call(this);
case 1:
return cljs$core$sp2__1.call(this,x);
case 2:
return cljs$core$sp2__2.call(this,x,y);
case 3:
return cljs$core$sp2__3.call(this,x,y,z);
default:
var G__3048 = null;
if (arguments.length > 3) {
var G__3049__i = 0, G__3049__a = new Array(arguments.length -  3);
while (G__3049__i < G__3049__a.length) {G__3049__a[G__3049__i] = arguments[G__3049__i + 3]; ++G__3049__i;}
G__3048 = new cljs.core.IndexedSeq(G__3049__a,0);
}
return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sp2.cljs$lang$maxFixedArity = 3;
cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sp2;
})()
});

cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = (function (p1,p2,p3){
return (function() {
var cljs$core$sp3 = null;
var cljs$core$sp3__0 = (function (){
return null;
});
var cljs$core$sp3__1 = (function (x){
var or__3310__auto__ = (function (){var G__2978 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2978) : p1.call(null,G__2978));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var G__2980 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2980) : p2.call(null,G__2980));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var G__2981 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2981) : p3.call(null,G__2981));
}
}
});
var cljs$core$sp3__2 = (function (x,y){
var or__3310__auto__ = (function (){var G__2983 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2983) : p1.call(null,G__2983));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var G__2985 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2985) : p2.call(null,G__2985));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var or__3310__auto____$2 = (function (){var G__2987 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2987) : p3.call(null,G__2987));
})();
if(cljs.core.truth_(or__3310__auto____$2)){
return or__3310__auto____$2;
} else {
var or__3310__auto____$3 = (function (){var G__2989 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2989) : p1.call(null,G__2989));
})();
if(cljs.core.truth_(or__3310__auto____$3)){
return or__3310__auto____$3;
} else {
var or__3310__auto____$4 = (function (){var G__2991 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2991) : p2.call(null,G__2991));
})();
if(cljs.core.truth_(or__3310__auto____$4)){
return or__3310__auto____$4;
} else {
var G__2992 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2992) : p3.call(null,G__2992));
}
}
}
}
}
});
var cljs$core$sp3__3 = (function (x,y,z){
var or__3310__auto__ = (function (){var G__2994 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__2994) : p1.call(null,G__2994));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var G__2996 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__2996) : p2.call(null,G__2996));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var or__3310__auto____$2 = (function (){var G__2998 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__2998) : p3.call(null,G__2998));
})();
if(cljs.core.truth_(or__3310__auto____$2)){
return or__3310__auto____$2;
} else {
var or__3310__auto____$3 = (function (){var G__3000 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3000) : p1.call(null,G__3000));
})();
if(cljs.core.truth_(or__3310__auto____$3)){
return or__3310__auto____$3;
} else {
var or__3310__auto____$4 = (function (){var G__3002 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3002) : p2.call(null,G__3002));
})();
if(cljs.core.truth_(or__3310__auto____$4)){
return or__3310__auto____$4;
} else {
var or__3310__auto____$5 = (function (){var G__3004 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3004) : p3.call(null,G__3004));
})();
if(cljs.core.truth_(or__3310__auto____$5)){
return or__3310__auto____$5;
} else {
var or__3310__auto____$6 = (function (){var G__3006 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3006) : p1.call(null,G__3006));
})();
if(cljs.core.truth_(or__3310__auto____$6)){
return or__3310__auto____$6;
} else {
var or__3310__auto____$7 = (function (){var G__3008 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3008) : p2.call(null,G__3008));
})();
if(cljs.core.truth_(or__3310__auto____$7)){
return or__3310__auto____$7;
} else {
var G__3009 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3009) : p3.call(null,G__3009));
}
}
}
}
}
}
}
}
});
var cljs$core$sp3__4 = (function() { 
var G__3050__delegate = function (x,y,z,args){
var or__3310__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.some(((function (or__3310__auto__){
return (function (p1__2844_SHARP_){
var or__3310__auto____$1 = (function (){var G__3011 = p1__2844_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3011) : p1.call(null,G__3011));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var or__3310__auto____$2 = (function (){var G__3013 = p1__2844_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3013) : p2.call(null,G__3013));
})();
if(cljs.core.truth_(or__3310__auto____$2)){
return or__3310__auto____$2;
} else {
var G__3014 = p1__2844_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3014) : p3.call(null,G__3014));
}
}
});})(or__3310__auto__))
,args);
}
};
var G__3050 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3051__i = 0, G__3051__a = new Array(arguments.length -  3);
while (G__3051__i < G__3051__a.length) {G__3051__a[G__3051__i] = arguments[G__3051__i + 3]; ++G__3051__i;}
  args = new cljs.core.IndexedSeq(G__3051__a,0);
} 
return G__3050__delegate.call(this,x,y,z,args);};
G__3050.cljs$lang$maxFixedArity = 3;
G__3050.cljs$lang$applyTo = (function (arglist__3052){
var x = cljs.core.first(arglist__3052);
arglist__3052 = cljs.core.next(arglist__3052);
var y = cljs.core.first(arglist__3052);
arglist__3052 = cljs.core.next(arglist__3052);
var z = cljs.core.first(arglist__3052);
var args = cljs.core.rest(arglist__3052);
return G__3050__delegate(x,y,z,args);
});
G__3050.cljs$core$IFn$_invoke$arity$variadic = G__3050__delegate;
return G__3050;
})()
;
cljs$core$sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$sp3__0.call(this);
case 1:
return cljs$core$sp3__1.call(this,x);
case 2:
return cljs$core$sp3__2.call(this,x,y);
case 3:
return cljs$core$sp3__3.call(this,x,y,z);
default:
var G__3053 = null;
if (arguments.length > 3) {
var G__3054__i = 0, G__3054__a = new Array(arguments.length -  3);
while (G__3054__i < G__3054__a.length) {G__3054__a[G__3054__i] = arguments[G__3054__i + 3]; ++G__3054__i;}
G__3053 = new cljs.core.IndexedSeq(G__3054__a,0);
}
return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3053);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sp3.cljs$lang$maxFixedArity = 3;
cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sp3;
})()
});

cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = (function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$spn = null;
var cljs$core$spn__0 = (function (){
return null;
});
var cljs$core$spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__2845_SHARP_){
var G__3030 = x;
return (p1__2845_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2845_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3030) : p1__2845_SHARP_.call(null,G__3030));
});})(ps__$1))
,ps__$1);
});
var cljs$core$spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__2846_SHARP_){
var or__3310__auto__ = (function (){var G__3032 = x;
return (p1__2846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3032) : p1__2846_SHARP_.call(null,G__3032));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var G__3033 = y;
return (p1__2846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3033) : p1__2846_SHARP_.call(null,G__3033));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__2847_SHARP_){
var or__3310__auto__ = (function (){var G__3035 = x;
return (p1__2847_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2847_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3035) : p1__2847_SHARP_.call(null,G__3035));
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var G__3037 = y;
return (p1__2847_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2847_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3037) : p1__2847_SHARP_.call(null,G__3037));
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var G__3038 = z;
return (p1__2847_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2847_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3038) : p1__2847_SHARP_.call(null,G__3038));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$spn__4 = (function() { 
var G__3055__delegate = function (x,y,z,args){
var or__3310__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.some(((function (or__3310__auto__,ps__$1){
return (function (p1__2848_SHARP_){
return cljs.core.some(p1__2848_SHARP_,args);
});})(or__3310__auto__,ps__$1))
,ps__$1);
}
};
var G__3055 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3056__i = 0, G__3056__a = new Array(arguments.length -  3);
while (G__3056__i < G__3056__a.length) {G__3056__a[G__3056__i] = arguments[G__3056__i + 3]; ++G__3056__i;}
  args = new cljs.core.IndexedSeq(G__3056__a,0);
} 
return G__3055__delegate.call(this,x,y,z,args);};
G__3055.cljs$lang$maxFixedArity = 3;
G__3055.cljs$lang$applyTo = (function (arglist__3057){
var x = cljs.core.first(arglist__3057);
arglist__3057 = cljs.core.next(arglist__3057);
var y = cljs.core.first(arglist__3057);
arglist__3057 = cljs.core.next(arglist__3057);
var z = cljs.core.first(arglist__3057);
var args = cljs.core.rest(arglist__3057);
return G__3055__delegate(x,y,z,args);
});
G__3055.cljs$core$IFn$_invoke$arity$variadic = G__3055__delegate;
return G__3055;
})()
;
cljs$core$spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$spn__0.call(this);
case 1:
return cljs$core$spn__1.call(this,x);
case 2:
return cljs$core$spn__2.call(this,x,y);
case 3:
return cljs$core$spn__3.call(this,x,y,z);
default:
var G__3058 = null;
if (arguments.length > 3) {
var G__3059__i = 0, G__3059__a = new Array(arguments.length -  3);
while (G__3059__i < G__3059__a.length) {G__3059__a[G__3059__i] = arguments[G__3059__i + 3]; ++G__3059__i;}
G__3058 = new cljs.core.IndexedSeq(G__3059__a,0);
}
return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$spn.cljs$lang$maxFixedArity = 3;
cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$spn;
})()
;})(ps__$1))
});

cljs.core.some_fn.cljs$lang$applyTo = (function (seq2849){
var G__2850 = cljs.core.first(seq2849);
var seq2849__$1 = cljs.core.next(seq2849);
var G__2851 = cljs.core.first(seq2849__$1);
var seq2849__$2 = cljs.core.next(seq2849__$1);
var G__2852 = cljs.core.first(seq2849__$2);
var seq2849__$3 = cljs.core.next(seq2849__$2);
return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__2850,G__2851,G__2852,seq2849__$3);
});

cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 */
cljs.core.map = (function cljs$core$map(){
var G__3067 = arguments.length;
switch (G__3067) {
case 1:
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.map.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,4),(0)));
return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__3834__auto__);

}
});

cljs.core.map.cljs$core$IFn$_invoke$arity$1 = (function (f){
return (function (rf){
return (function() {
var G__3083 = null;
var G__3083__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3083__1 = (function (result){
var G__3068 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3068) : rf.call(null,G__3068));
});
var G__3083__2 = (function (result,input){
var G__3069 = result;
var G__3070 = (function (){var G__3071 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3071) : f.call(null,G__3071));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3069,G__3070) : rf.call(null,G__3069,G__3070));
});
var G__3083__3 = (function() { 
var G__3084__delegate = function (result,input,inputs){
var G__3072 = result;
var G__3073 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3072,G__3073) : rf.call(null,G__3072,G__3073));
};
var G__3084 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__3085__i = 0, G__3085__a = new Array(arguments.length -  2);
while (G__3085__i < G__3085__a.length) {G__3085__a[G__3085__i] = arguments[G__3085__i + 2]; ++G__3085__i;}
  inputs = new cljs.core.IndexedSeq(G__3085__a,0);
} 
return G__3084__delegate.call(this,result,input,inputs);};
G__3084.cljs$lang$maxFixedArity = 2;
G__3084.cljs$lang$applyTo = (function (arglist__3086){
var result = cljs.core.first(arglist__3086);
arglist__3086 = cljs.core.next(arglist__3086);
var input = cljs.core.first(arglist__3086);
var inputs = cljs.core.rest(arglist__3086);
return G__3084__delegate(result,input,inputs);
});
G__3084.cljs$core$IFn$_invoke$arity$variadic = G__3084__delegate;
return G__3084;
})()
;
G__3083 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__3083__0.call(this);
case 1:
return G__3083__1.call(this,result);
case 2:
return G__3083__2.call(this,result,input);
default:
var G__3087 = null;
if (arguments.length > 2) {
var G__3088__i = 0, G__3088__a = new Array(arguments.length -  2);
while (G__3088__i < G__3088__a.length) {G__3088__a[G__3088__i] = arguments[G__3088__i + 2]; ++G__3088__i;}
G__3087 = new cljs.core.IndexedSeq(G__3088__a,0);
}
return G__3083__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__3087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3083.cljs$lang$maxFixedArity = 2;
G__3083.cljs$lang$applyTo = G__3083__3.cljs$lang$applyTo;
G__3083.cljs$core$IFn$_invoke$arity$0 = G__3083__0;
G__3083.cljs$core$IFn$_invoke$arity$1 = G__3083__1;
G__3083.cljs$core$IFn$_invoke$arity$2 = G__3083__2;
G__3083.cljs$core$IFn$_invoke$arity$variadic = G__3083__3.cljs$core$IFn$_invoke$arity$variadic;
return G__3083;
})()
});
});

cljs.core.map.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3731__auto___3089 = size;
var i_3090 = (0);
while(true){
if((i_3090 < n__3731__auto___3089)){
cljs.core.chunk_append(b,(function (){var G__3074 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3090);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3074) : f.call(null,G__3074));
})());

var G__3091 = (i_3090 + (1));
i_3090 = G__3091;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__3075 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3075) : f.call(null,G__3075));
})(),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});

cljs.core.map.cljs$core$IFn$_invoke$arity$3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__3076 = cljs.core.first(s1);
var G__3077 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3076,G__3077) : f.call(null,G__3076,G__3077));
})(),cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});

cljs.core.map.cljs$core$IFn$_invoke$arity$4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__3078 = cljs.core.first(s1);
var G__3079 = cljs.core.first(s2);
var G__3080 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3078,G__3079,G__3080) : f.call(null,G__3078,G__3079,G__3080));
})(),cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});

cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = (function (f,c1,c2,c3,colls){
var step = (function cljs$core$step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__3060_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__3060_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
});

cljs.core.map.cljs$lang$applyTo = (function (seq3061){
var G__3062 = cljs.core.first(seq3061);
var seq3061__$1 = cljs.core.next(seq3061);
var G__3063 = cljs.core.first(seq3061__$1);
var seq3061__$2 = cljs.core.next(seq3061__$1);
var G__3064 = cljs.core.first(seq3061__$2);
var seq3061__$3 = cljs.core.next(seq3061__$2);
var G__3065 = cljs.core.first(seq3061__$3);
var seq3061__$4 = cljs.core.next(seq3061__$3);
return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__3062,G__3063,G__3064,G__3065,seq3061__$4);
});

cljs.core.map.cljs$lang$maxFixedArity = 4;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function cljs$core$take(){
var G__3093 = arguments.length;
switch (G__3093) {
case 1:
return cljs.core.take.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.take.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.take.cljs$core$IFn$_invoke$arity$1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__3098 = null;
var G__3098__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3098__1 = (function (result){
var G__3094 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3094) : rf.call(null,G__3094));
});
var G__3098__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = cljs.core._vreset_BANG_(na,(cljs.core._deref(na) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__3095 = result;
var G__3096 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3095,G__3096) : rf.call(null,G__3095,G__3096));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__3098 = function(result,input){
switch(arguments.length){
case 0:
return G__3098__0.call(this);
case 1:
return G__3098__1.call(this,result);
case 2:
return G__3098__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3098.cljs$core$IFn$_invoke$arity$0 = G__3098__0;
G__3098.cljs$core$IFn$_invoke$arity$1 = G__3098__1;
G__3098.cljs$core$IFn$_invoke$arity$2 = G__3098__2;
return G__3098;
})()
;})(na))
});
});

cljs.core.take.cljs$core$IFn$_invoke$arity$2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(s),cljs.core.take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});

cljs.core.take.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function cljs$core$drop(){
var G__3100 = arguments.length;
switch (G__3100) {
case 1:
return cljs.core.drop.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__3105 = null;
var G__3105__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3105__1 = (function (result){
var G__3101 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3101) : rf.call(null,G__3101));
});
var G__3105__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
cljs.core._vreset_BANG_(na,(cljs.core._deref(na) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__3102 = result;
var G__3103 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3102,G__3103) : rf.call(null,G__3102,G__3103));
}
});
G__3105 = function(result,input){
switch(arguments.length){
case 0:
return G__3105__0.call(this);
case 1:
return G__3105__1.call(this,result);
case 2:
return G__3105__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3105.cljs$core$IFn$_invoke$arity$0 = G__3105__0;
G__3105.cljs$core$IFn$_invoke$arity$1 = G__3105__1;
G__3105.cljs$core$IFn$_invoke$arity$2 = G__3105__2;
return G__3105;
})()
;})(na))
});
});

cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__3106 = (n__$1 - (1));
var G__3107 = cljs.core.rest(s);
n__$1 = G__3106;
coll__$1 = G__3107;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});

cljs.core.drop.cljs$lang$maxFixedArity = 2;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function cljs$core$drop_last(){
var G__3109 = arguments.length;
switch (G__3109) {
case 1:
return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = (function (s){
return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});

cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});

cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__3111 = cljs.core.next(s);
var G__3112 = cljs.core.next(lead);
s = G__3111;
lead = G__3112;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function cljs$core$drop_while(){
var G__3114 = arguments.length;
switch (G__3114) {
case 1:
return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__3122 = null;
var G__3122__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3122__1 = (function (result){
var G__3115 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3115) : rf.call(null,G__3115));
});
var G__3122__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3302__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3302__auto__)){
var G__3116 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3116) : pred.call(null,G__3116));
} else {
return and__3302__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__3117 = result;
var G__3118 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3117,G__3118) : rf.call(null,G__3117,G__3118));
}
});
G__3122 = function(result,input){
switch(arguments.length){
case 0:
return G__3122__0.call(this);
case 1:
return G__3122__1.call(this,result);
case 2:
return G__3122__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3122.cljs$core$IFn$_invoke$arity$0 = G__3122__0;
G__3122.cljs$core$IFn$_invoke$arity$1 = G__3122__1;
G__3122.cljs$core$IFn$_invoke$arity$2 = G__3122__2;
return G__3122;
})()
;})(da))
});
});

cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3302__auto__ = s;
if(and__3302__auto__){
var G__3120 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__3120) : pred__$1.call(null,G__3120));
} else {
return and__3302__auto__;
}
})())){
var G__3123 = pred__$1;
var G__3124 = cljs.core.rest(s);
pred__$1 = G__3123;
coll__$1 = G__3124;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});

cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function cljs$core$repeat(){
var G__3127 = arguments.length;
switch (G__3127) {
case 1:
return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});

cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});

cljs.core.repeat.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function cljs$core$repeatedly(){
var G__3130 = arguments.length;
switch (G__3130) {
case 1:
return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});

cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});

cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__3135 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3135) : f.call(null,G__3135));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 */
cljs.core.interleave = (function cljs$core$interleave(){
var G__3140 = arguments.length;
switch (G__3140) {
case 2:
return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,2),(0)));
return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3834__auto__);

}
});

cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});

cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = (function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});

cljs.core.interleave.cljs$lang$applyTo = (function (seq3136){
var G__3137 = cljs.core.first(seq3136);
var seq3136__$1 = cljs.core.next(seq3136);
var G__3138 = cljs.core.first(seq3136__$1);
var seq3136__$2 = cljs.core.next(seq3136__$1);
return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__3137,G__3138,seq3136__$2);
});

cljs.core.interleave.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function cljs$core$interpose(){
var G__3143 = arguments.length;
switch (G__3143) {
case 1:
return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__3152 = null;
var G__3152__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3152__1 = (function (result){
var G__3144 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3144) : rf.call(null,G__3144));
});
var G__3152__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__3145 = result;
var G__3146 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3145,G__3146) : rf.call(null,G__3145,G__3146));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__3147 = sepr;
var G__3148 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3147,G__3148) : rf.call(null,G__3147,G__3148));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__3149 = result;
var G__3150 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3149,G__3150) : rf.call(null,G__3149,G__3150));
}
});
G__3152 = function(result,input){
switch(arguments.length){
case 0:
return G__3152__0.call(this);
case 1:
return G__3152__1.call(this,result);
case 2:
return G__3152__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3152.cljs$core$IFn$_invoke$arity$0 = G__3152__0;
G__3152.cljs$core$IFn$_invoke$arity$1 = G__3152__1;
G__3152.cljs$core$IFn$_invoke$arity$2 = G__3152__2;
return G__3152;
})()
;})(started))
});
});

cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});

cljs.core.interpose.cljs$lang$maxFixedArity = 2;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4402__auto__ = cljs.core.seq(coll);
if(temp__4402__auto__){
var coll__$1 = temp__4402__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 */
cljs.core.mapcat = (function cljs$core$mapcat(){
var G__3164 = arguments.length;
switch (G__3164) {
case 1:
return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,1),(0)));
return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3834__auto__);

}
});

cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});

cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = (function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
});

cljs.core.mapcat.cljs$lang$applyTo = (function (seq3161){
var G__3162 = cljs.core.first(seq3161);
var seq3161__$1 = cljs.core.next(seq3161);
return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__3162,seq3161__$1);
});

cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function cljs$core$filter(){
var G__3167 = arguments.length;
switch (G__3167) {
case 1:
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = (function (pred){
return (function (rf){
return (function() {
var G__3175 = null;
var G__3175__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3175__1 = (function (result){
var G__3168 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3168) : rf.call(null,G__3168));
});
var G__3175__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__3169 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3169) : pred.call(null,G__3169));
})())){
var G__3170 = result;
var G__3171 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3170,G__3171) : rf.call(null,G__3170,G__3171));
} else {
return result;
}
});
G__3175 = function(result,input){
switch(arguments.length){
case 0:
return G__3175__0.call(this);
case 1:
return G__3175__1.call(this,result);
case 2:
return G__3175__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3175.cljs$core$IFn$_invoke$arity$0 = G__3175__0;
G__3175.cljs$core$IFn$_invoke$arity$1 = G__3175__1;
G__3175.cljs$core$IFn$_invoke$arity$2 = G__3175__2;
return G__3175;
})()
});
});

cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__3731__auto___3176 = size;
var i_3177 = (0);
while(true){
if((i_3177 < n__3731__auto___3176)){
if(cljs.core.truth_((function (){var G__3172 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3177);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3172) : pred.call(null,G__3172));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3177));
} else {
}

var G__3178 = (i_3177 + (1));
i_3177 = G__3178;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__3173 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3173) : pred.call(null,G__3173));
})())){
return cljs.core.cons(f,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});

cljs.core.filter.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function cljs$core$remove(){
var G__3180 = arguments.length;
switch (G__3180) {
case 1:
return cljs.core.remove.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.remove.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});

cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});

cljs.core.remove.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__3188 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__3188) : branch_QMARK_.call(null,G__3188));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__3189 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__3189) : children.call(null,G__3189));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__3190_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__3190_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function cljs$core$into(){
var G__3192 = arguments.length;
switch (G__3192) {
case 2:
return cljs.core.into.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.into.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.into.cljs$core$IFn$_invoke$arity$2 = (function (to,from){
if(!((to == null))){
if((function (){var G__3193 = to;
if(G__3193){
var bit__3601__auto__ = (G__3193.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3601__auto__) || (G__3193.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});

cljs.core.into.cljs$core$IFn$_invoke$arity$3 = (function (to,xform,from){
if((function (){var G__3194 = to;
if(G__3194){
var bit__3601__auto__ = (G__3194.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3601__auto__) || (G__3194.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});

cljs.core.into.cljs$lang$maxFixedArity = 3;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 */
cljs.core.mapv = (function cljs$core$mapv(){
var G__3202 = arguments.length;
switch (G__3202) {
case 2:
return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,4),(0)));
return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__3834__auto__);

}
});

cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__3203 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3203) : f.call(null,G__3203));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});

cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});

cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});

cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = (function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
});

cljs.core.mapv.cljs$lang$applyTo = (function (seq3196){
var G__3197 = cljs.core.first(seq3196);
var seq3196__$1 = cljs.core.next(seq3196);
var G__3198 = cljs.core.first(seq3196__$1);
var seq3196__$2 = cljs.core.next(seq3196__$1);
var G__3199 = cljs.core.first(seq3196__$2);
var seq3196__$3 = cljs.core.next(seq3196__$2);
var G__3200 = cljs.core.first(seq3196__$3);
var seq3196__$4 = cljs.core.next(seq3196__$3);
return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__3197,G__3198,G__3199,G__3200,seq3196__$4);
});

cljs.core.mapv.cljs$lang$maxFixedArity = 4;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__3206 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3206) : pred.call(null,G__3206));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function cljs$core$partition(){
var G__3208 = arguments.length;
switch (G__3208) {
case 2:
return cljs.core.partition.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.partition.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.partition.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = (function (n,coll){
return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});

cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});

cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});

cljs.core.partition.cljs$lang$maxFixedArity = 4;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function cljs$core$get_in(){
var G__3211 = arguments.length;
switch (G__3211) {
case 2:
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = (function (m,ks){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});

cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__3212 = m__$1;
if(G__3212){
var bit__3604__auto__ = (G__3212.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3604__auto__) || (G__3212.cljs$core$ILookup$)){
return true;
} else {
if((!G__3212.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__3212);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__3212);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__3214 = sentinel;
var G__3215 = m__$2;
var G__3216 = cljs.core.next(ks__$1);
sentinel = G__3214;
m__$1 = G__3215;
ks__$1 = G__3216;
continue;
}
}
} else {
return m__$1;
}
break;
}
});

cljs.core.get_in.cljs$lang$maxFixedArity = 3;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__3217,v){
var vec__3222 = p__3217;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3222,(0),null);
var ks = cljs.core.nthnext(vec__3222,(1));
if(cljs.core.truth_(ks)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 */
cljs.core.update_in = (function cljs$core$update_in(){
var G__3231 = arguments.length;
switch (G__3231) {
case 3:
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
case 6:
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,6),(0)));
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__3834__auto__);

}
});

cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = (function (m,p__3232,f){
var vec__3233 = p__3232;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3233,(0),null);
var ks = cljs.core.nthnext(vec__3233,(1));
if(cljs.core.truth_(ks)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3234 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3234) : f.call(null,G__3234));
})());
}
});

cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = (function (m,p__3235,f,a){
var vec__3236 = p__3235;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3236,(0),null);
var ks = cljs.core.nthnext(vec__3236,(1));
if(cljs.core.truth_(ks)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3237 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3238 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3237,G__3238) : f.call(null,G__3237,G__3238));
})());
}
});

cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = (function (m,p__3239,f,a,b){
var vec__3240 = p__3239;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3240,(0),null);
var ks = cljs.core.nthnext(vec__3240,(1));
if(cljs.core.truth_(ks)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3241 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3242 = a;
var G__3243 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3241,G__3242,G__3243) : f.call(null,G__3241,G__3242,G__3243));
})());
}
});

cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = (function (m,p__3244,f,a,b,c){
var vec__3245 = p__3244;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3245,(0),null);
var ks = cljs.core.nthnext(vec__3245,(1));
if(cljs.core.truth_(ks)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3246 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3247 = a;
var G__3248 = b;
var G__3249 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3246,G__3247,G__3248,G__3249) : f.call(null,G__3246,G__3247,G__3248,G__3249));
})());
}
});

cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = (function (m,p__3250,f,a,b,c,args){
var vec__3251 = p__3250;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3251,(0),null);
var ks = cljs.core.nthnext(vec__3251,(1));
if(cljs.core.truth_(ks)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
});

cljs.core.update_in.cljs$lang$applyTo = (function (seq3223){
var G__3224 = cljs.core.first(seq3223);
var seq3223__$1 = cljs.core.next(seq3223);
var G__3225 = cljs.core.first(seq3223__$1);
var seq3223__$2 = cljs.core.next(seq3223__$1);
var G__3226 = cljs.core.first(seq3223__$2);
var seq3223__$3 = cljs.core.next(seq3223__$2);
var G__3227 = cljs.core.first(seq3223__$3);
var seq3223__$4 = cljs.core.next(seq3223__$3);
var G__3228 = cljs.core.first(seq3223__$4);
var seq3223__$5 = cljs.core.next(seq3223__$4);
var G__3229 = cljs.core.first(seq3223__$5);
var seq3223__$6 = cljs.core.next(seq3223__$5);
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__3224,G__3225,G__3226,G__3227,G__3228,G__3229,seq3223__$6);
});

cljs.core.update_in.cljs$lang$maxFixedArity = 6;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 */
cljs.core.update = (function cljs$core$update(){
var G__3261 = arguments.length;
switch (G__3261) {
case 3:
return cljs.core.update.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.update.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return cljs.core.update.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
case 6:
return cljs.core.update.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,6),(0)));
return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__3834__auto__);

}
});

cljs.core.update.cljs$core$IFn$_invoke$arity$3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3262 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3262) : f.call(null,G__3262));
})());
});

cljs.core.update.cljs$core$IFn$_invoke$arity$4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3263 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3264 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3263,G__3264) : f.call(null,G__3263,G__3264));
})());
});

cljs.core.update.cljs$core$IFn$_invoke$arity$5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3265 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3266 = x;
var G__3267 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3265,G__3266,G__3267) : f.call(null,G__3265,G__3266,G__3267));
})());
});

cljs.core.update.cljs$core$IFn$_invoke$arity$6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3268 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3269 = x;
var G__3270 = y;
var G__3271 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3268,G__3269,G__3270,G__3271) : f.call(null,G__3268,G__3269,G__3270,G__3271));
})());
});

cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = (function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
});

cljs.core.update.cljs$lang$applyTo = (function (seq3253){
var G__3254 = cljs.core.first(seq3253);
var seq3253__$1 = cljs.core.next(seq3253);
var G__3255 = cljs.core.first(seq3253__$1);
var seq3253__$2 = cljs.core.next(seq3253__$1);
var G__3256 = cljs.core.first(seq3253__$2);
var seq3253__$3 = cljs.core.next(seq3253__$2);
var G__3257 = cljs.core.first(seq3253__$3);
var seq3253__$4 = cljs.core.next(seq3253__$3);
var G__3258 = cljs.core.first(seq3253__$4);
var seq3253__$5 = cljs.core.next(seq3253__$4);
var G__3259 = cljs.core.first(seq3253__$5);
var seq3253__$6 = cljs.core.next(seq3253__$5);
return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__3254,G__3255,G__3256,G__3257,G__3258,G__3259,seq3253__$6);
});

cljs.core.update.cljs$lang$maxFixedArity = 6;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__3273 = (ll - (5));
var G__3274 = r;
ll = G__3273;
ret = G__3274;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__3279 = cljs.core.pv_aget(node,(0));
var G__3280 = (level - (5));
node = G__3279;
level = G__3280;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__3281 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__3282 = (level - (5));
node = G__3281;
level = G__3282;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__3292 = init__$2;
var G__3293 = (j + i);
var G__3294 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3292,G__3293,G__3294) : f.call(null,G__3292,G__3293,G__3294));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__3305 = (j + (1));
var G__3306 = init__$3;
j = G__3305;
init__$2 = G__3306;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3295 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3295) : cljs.core.deref.call(null,G__3295));
} else {
var G__3307 = (i + len);
var G__3308 = init__$2;
i = G__3307;
init__$1 = G__3308;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__3296 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__3296) : cljs.core.tv_editable_root.call(null,G__3296));
})(),(function (){var G__3297 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__3297) : cljs.core.tv_editable_tail.call(null,G__3297));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__3298 = init__$2;
var G__3299 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3298,G__3299) : f.call(null,G__3298,G__3299));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__3309 = (j + (1));
var G__3310 = init__$3;
j = G__3309;
init__$2 = G__3310;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3300 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3300) : cljs.core.deref.call(null,G__3300));
} else {
var G__3311 = (i + len);
var G__3312 = init__$2;
i = G__3311;
init__$1 = G__3312;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__3301 = coll__$1;
var G__3302 = cljs.core.first_array_for_longvec(coll__$1);
var G__3303 = (0);
var G__3304 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__3301,G__3302,G__3303,G__3304) : cljs.core.chunked_seq.call(null,G__3301,G__3302,G__3303,G__3304));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__3731__auto___3313 = len;
var i_3314 = (0);
while(true){
if((i_3314 < n__3731__auto___3313)){
(new_tail[i_3314] = (self__.tail[i_3314]));

var G__3315 = (i_3314 + (1));
i_3314 = G__3315;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__3316 = null;
var G__3316__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__3316__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__3316 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3316__2.call(this,self__,k);
case 3:
return G__3316__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3316.cljs$core$IFn$_invoke$arity$2 = G__3316__2;
G__3316.cljs$core$IFn$_invoke$arity$3 = G__3316__3;
return G__3316;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args3291){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3291)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__3317 = (i + (1));
var G__3318 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__3317;
out = G__3318;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 */
cljs.core.vector = (function cljs$core$vector(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = (function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
});

cljs.core.vector.cljs$lang$maxFixedArity = (0);

cljs.core.vector.cljs$lang$applyTo = (function (seq3319){
return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3319));
});

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__3320 = self__.vec;
var G__3321 = self__.node;
var G__3322 = self__.i;
var G__3323 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__3320,G__3321,G__3322,G__3323) : cljs.core.chunked_seq.call(null,G__3320,G__3321,G__3322,G__3323));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__3324 = self__.vec;
var G__3325 = (self__.i + self__.off);
var G__3326 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__3324,G__3325,G__3326) : cljs.core.subvec.call(null,G__3324,G__3325,G__3326));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__3327 = self__.vec;
var G__3328 = (self__.i + self__.off);
var G__3329 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__3327,G__3328,G__3329) : cljs.core.subvec.call(null,G__3327,G__3328,G__3329));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__3330 = self__.vec;
var G__3331 = self__.node;
var G__3332 = self__.i;
var G__3333 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__3330,G__3331,G__3332,G__3333) : cljs.core.chunked_seq.call(null,G__3330,G__3331,G__3332,G__3333));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__3334 = self__.vec;
var G__3335 = cljs.core.unchecked_array_for(self__.vec,end);
var G__3336 = end;
var G__3337 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__3334,G__3335,G__3336,G__3337) : cljs.core.chunked_seq.call(null,G__3334,G__3335,G__3336,G__3337));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__3338 = self__.vec;
var G__3339 = self__.node;
var G__3340 = self__.i;
var G__3341 = self__.off;
var G__3342 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__3338,G__3339,G__3340,G__3341,G__3342) : cljs.core.chunked_seq.call(null,G__3338,G__3339,G__3340,G__3341,G__3342));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__3343 = self__.vec;
var G__3344 = cljs.core.unchecked_array_for(self__.vec,end);
var G__3345 = end;
var G__3346 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__3343,G__3344,G__3345,G__3346) : cljs.core.chunked_seq.call(null,G__3343,G__3344,G__3345,G__3346));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.chunked_seq = (function cljs$core$chunked_seq(){
var G__3348 = arguments.length;
switch (G__3348) {
case 3:
return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});

cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});

cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});

cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__3351 = init__$1;
var G__3352 = j;
var G__3353 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3351,G__3352,G__3353) : f.call(null,G__3351,G__3352,G__3353));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3354 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3354) : cljs.core.deref.call(null,G__3354));
} else {
var G__3376 = (i + (1));
var G__3377 = (j + (1));
var G__3378 = init__$2;
i = G__3376;
j = G__3377;
init__$1 = G__3378;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__3355 = self__.meta;
var G__3356 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__3357 = self__.start;
var G__3358 = (function (){var x__3378__auto__ = self__.end;
var y__3379__auto__ = (v_pos + (1));
return ((x__3378__auto__ > y__3379__auto__) ? x__3378__auto__ : y__3379__auto__);
})();
var G__3359 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__3355,G__3356,G__3357,G__3358,G__3359) : cljs.core.build_subvec.call(null,G__3355,G__3356,G__3357,G__3358,G__3359));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__3360 = self__.meta;
var G__3361 = self__.v;
var G__3362 = self__.start;
var G__3363 = (self__.end - (1));
var G__3364 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__3360,G__3361,G__3362,G__3363,G__3364) : cljs.core.build_subvec.call(null,G__3360,G__3361,G__3362,G__3363,G__3364));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__3366 = meta__$1;
var G__3367 = self__.v;
var G__3368 = self__.start;
var G__3369 = self__.end;
var G__3370 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__3366,G__3367,G__3368,G__3369,G__3370) : cljs.core.build_subvec.call(null,G__3366,G__3367,G__3368,G__3369,G__3370));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__3371 = self__.meta;
var G__3372 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__3373 = self__.start;
var G__3374 = (self__.end + (1));
var G__3375 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__3371,G__3372,G__3373,G__3374,G__3375) : cljs.core.build_subvec.call(null,G__3371,G__3372,G__3373,G__3374,G__3375));
});

cljs.core.Subvec.prototype.call = (function() {
var G__3379 = null;
var G__3379__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__3379__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__3379 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3379__2.call(this,self__,k);
case 3:
return G__3379__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3379.cljs$core$IFn$_invoke$arity$2 = G__3379__2;
G__3379.cljs$core$IFn$_invoke$arity$3 = G__3379__3;
return G__3379;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args3350){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3350)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__3380 = meta;
var G__3381 = v.v;
var G__3382 = (v.start + start);
var G__3383 = (v.start + end);
var G__3384 = __hash;
meta = G__3380;
v = G__3381;
start = G__3382;
end = G__3383;
__hash = G__3384;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function cljs$core$subvec(){
var G__3386 = arguments.length;
switch (G__3386) {
case 2:
return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = (function (v,start){
return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});

cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});

cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj3391 = {};
return obj3391;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__3399 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__3400 = (level - (5));
node = G__3399;
level = G__3400;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition1$ = 88;
this.cljs$lang$protocol_mask$partition0$ = 275;
})
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.call = (function() {
var G__3404 = null;
var G__3404__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3404__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3404 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3404__2.call(this,self__,k);
case 3:
return G__3404__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3404.cljs$core$IFn$_invoke$arity$2 = G__3404__2;
G__3404.cljs$core$IFn$_invoke$arity$3 = G__3404__3;
return G__3404;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args3401){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3401)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4402__auto__ = cljs.core.next(self__.front);
if(temp__4402__auto__){
var f1 = temp__4402__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4402__auto__ = cljs.core.next(self__.front);
if(temp__4402__auto__){
var f1 = temp__4402__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3310__auto__ = self__.front;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3310__auto__ = self__.rear;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition0$ = 2097152;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__3405 = (i + incr);
i = G__3405;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__3406 = (i + (1));
var G__3407 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__3406;
out = G__3407;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj3411 = {};
return obj3411;
})();
var l = ks.length;
var i_3412 = (0);
while(true){
if((i_3412 < l)){
var k_3413 = (ks[i_3412]);
(new_obj[k_3413] = (obj[k_3413]));

var G__3414 = (i_3412 + (1));
i_3412 = G__3414;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3302__auto__ = (function (){var G__3418 = k;
return goog.isString(G__3418);
})();
if(cljs.core.truth_(and__3302__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3302__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__3419 = init__$1;
var G__3420 = k;
var G__3421 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3419,G__3420,G__3421) : f.call(null,G__3419,G__3420,G__3421));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3422 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3422) : cljs.core.deref.call(null,G__3422));
} else {
var G__3428 = cljs.core.rest(keys__$1);
var G__3429 = init__$2;
keys__$1 = G__3428;
init__$1 = G__3429;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3302__auto__ = (function (){var G__3424 = k;
return goog.isString(G__3424);
})();
if(cljs.core.truth_(and__3302__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3302__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__3425 = k;
return goog.isString(G__3425);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3302__auto__ = (function (){var G__3427 = k;
return goog.isString(G__3427);
})();
if(cljs.core.truth_(and__3302__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3302__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__3415_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__3415_SHARP_,(self__.strobj[p1__3415_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__3430 = null;
var G__3430__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3430__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3430 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3430__2.call(this,self__,k);
case 3:
return G__3430__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3430.cljs$core$IFn$_invoke$arity$2 = G__3430__2;
G__3430.cljs$core$IFn$_invoke$arity$3 = G__3430__3;
return G__3430;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args3416){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3416)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj3432 = {};
return obj3432;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__3433 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3433,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3433,(1),null);
self__.s = cljs.core.next(self__.s);

return {"value": [k,v], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": [x,x], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_index_of_nil_QMARK_ = (function cljs$core$array_index_of_nil_QMARK_(arr){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__3434 = (i + (2));
i = G__3434;
continue;

}
}
break;
}
});
cljs.core.array_index_of_keyword_QMARK_ = (function cljs$core$array_index_of_keyword_QMARK_(arr,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__3435 = (i + (2));
i = G__3435;
continue;

}
}
break;
}
});
cljs.core.array_index_of_symbol_QMARK_ = (function cljs$core$array_index_of_symbol_QMARK_(arr,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__3436 = (i + (2));
i = G__3436;
continue;

}
}
break;
}
});
cljs.core.array_index_of_identical_QMARK_ = (function cljs$core$array_index_of_identical_QMARK_(arr,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__3437 = (i + (2));
i = G__3437;
continue;

}
}
break;
}
});
cljs.core.array_index_of_equiv_QMARK_ = (function cljs$core$array_index_of_equiv_QMARK_(arr,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__3438 = (i + (2));
i = G__3438;
continue;

}
}
break;
}
});
cljs.core.array_index_of = (function cljs$core$array_index_of(arr,k){
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_index_of_keyword_QMARK_(arr,k);
} else {
if(cljs.core.truth_((function (){var or__3310__auto__ = (function (){var G__3442 = k;
return goog.isString(G__3442);
})();
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_index_of_identical_QMARK_(arr,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_index_of_symbol_QMARK_(arr,k);
} else {
if((k == null)){
return cljs.core.array_index_of_nil_QMARK_(arr);
} else {
return cljs.core.array_index_of_equiv_QMARK_(arr,k);

}
}
}
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
return cljs.core.array_index_of(m.arr,k);
});
cljs.core.array_extend_kv = (function cljs$core$array_extend_kv(arr,k,v){
var l = arr.length;
var narr = (new Array((l + (2))));
var i_3443 = (0);
while(true){
if((i_3443 < l)){
(narr[i_3443] = (arr[i_3443]));

var G__3444 = (i_3443 + (1));
i_3443 = G__3444;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
return cljs.core.array_extend_kv(m.arr,k,v);
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__3446 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__3446) : cljs.core.keys.call(null,G__3446));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__3447 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__3447) : cljs.core.vals.call(null,G__3447));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__3448 = cljs.core.seq(coll);
var chunk__3449 = null;
var count__3450 = (0);
var i__3451 = (0);
while(true){
if((i__3451 < count__3450)){
var vec__3452 = chunk__3449.cljs$core$IIndexed$_nth$arity$2(null,i__3451);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3452,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3452,(1),null);
var G__3453_3466 = v;
var G__3454_3467 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3453_3466,G__3454_3467) : f.call(null,G__3453_3466,G__3454_3467));

var G__3468 = seq__3448;
var G__3469 = chunk__3449;
var G__3470 = count__3450;
var G__3471 = (i__3451 + (1));
seq__3448 = G__3468;
chunk__3449 = G__3469;
count__3450 = G__3470;
i__3451 = G__3471;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__3448);
if(temp__4404__auto__){
var seq__3448__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__3448__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__3448__$1);
var G__3472 = cljs.core.chunk_rest(seq__3448__$1);
var G__3473 = c__3679__auto__;
var G__3474 = cljs.core.count(c__3679__auto__);
var G__3475 = (0);
seq__3448 = G__3472;
chunk__3449 = G__3473;
count__3450 = G__3474;
i__3451 = G__3475;
continue;
} else {
var vec__3455 = cljs.core.first(seq__3448__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3455,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3455,(1),null);
var G__3456_3476 = v;
var G__3457_3477 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3456_3476,G__3457_3477) : f.call(null,G__3456_3476,G__3457_3477));

var G__3478 = cljs.core.next(seq__3448__$1);
var G__3479 = null;
var G__3480 = (0);
var G__3481 = (0);
seq__3448 = G__3478;
chunk__3449 = G__3479;
count__3450 = G__3480;
i__3451 = G__3481;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__3458 = init__$1;
var G__3459 = (self__.arr[i]);
var G__3460 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3458,G__3459,G__3460) : f.call(null,G__3458,G__3459,G__3460));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3461 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3461) : cljs.core.deref.call(null,G__3461));
} else {
var G__3482 = (i + (2));
var G__3483 = init__$2;
i = G__3482;
init__$1 = G__3483;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__3462 = other;
if(G__3462){
var bit__3601__auto__ = (G__3462.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3601__auto__) || (G__3462.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__3484 = (i + (2));
i = G__3484;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj3464 = {};
return obj3464;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__3485 = (s + (2));
var G__3486 = d;
s = G__3485;
d = G__3486;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__3487 = (s + (2));
var G__3488 = (d + (2));
s = G__3487;
d = G__3488;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__3465 = cljs.core.aclone(self__.arr);
(G__3465[(idx + (1))] = v);

return G__3465;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__3489 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__3490 = cljs.core.next(es);
ret = G__3489;
es = G__3490;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__3491 = null;
var G__3491__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3491__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3491 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3491__2.call(this,self__,k);
case 3:
return G__3491__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3491.cljs$core$IFn$_invoke$arity$2 = G__3491__2;
G__3491.cljs$core$IFn$_invoke$arity$3 = G__3491__3;
return G__3491;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args3445){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3445)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var arr__$2 = ((no_check)?arr__$1:(function (){var ret = [];
var i_3492 = (0);
while(true){
if((i_3492 < arr__$1.length)){
var k_3493 = (arr__$1[i_3492]);
var v_3494 = (arr__$1[(i_3492 + (1))]);
var idx_3495 = cljs.core.array_index_of(ret,k_3493);
if((idx_3495 === (-1))){
ret.push(k_3493);

ret.push(v_3494);
} else {
}

var G__3496 = (i_3492 + (2));
i_3492 = G__3496;
continue;
} else {
}
break;
}

return ret;
})());
var arr__$3 = (function (){var cnt = (arr__$2.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$2,null));
})();
return arr__$3;
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__3497 = o;
if(G__3497){
var bit__3604__auto__ = (G__3497.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3604__auto__) || (G__3497.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__3497.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__3497);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__3497);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__3498 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__3498) : cljs.core.key.call(null,G__3498));
})(),(function (){var G__3499 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__3499) : cljs.core.val.call(null,G__3499));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4402__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4402__auto__)){
var e = temp__4402__auto__;
var G__3505 = cljs.core.next(es);
var G__3506 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__3500 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__3500) : cljs.core.key.call(null,G__3500));
})(),(function (){var G__3501 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__3501) : cljs.core.val.call(null,G__3501));
})());
es = G__3505;
tcoll__$2 = G__3506;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__3502 = self__.len;
var G__3503 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__3502,G__3503) : cljs.core.array__GT_transient_hash_map.call(null,G__3502,G__3503));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__3504_3507 = self__.arr;
G__3504_3507.pop();

G__3504_3507.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__3508 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__3509 = (i + (2));
out = G__3508;
i = G__3509;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function cljs$core$clone_and_set(){
var G__3511 = arguments.length;
switch (G__3511) {
case 3:
return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 5:
return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = (function (arr,i,a){
var G__3512 = cljs.core.aclone(arr);
(G__3512[i] = a);

return G__3512;
});

cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = (function (arr,i,a,j,b){
var G__3513 = cljs.core.aclone(arr);
(G__3513[i] = a);

(G__3513[j] = b);

return G__3513;
});

cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function cljs$core$edit_and_set(){
var G__3516 = arguments.length;
switch (G__3516) {
case 4:
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 6:
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});

cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});

cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__3522 = init__$1;
var G__3523 = k;
var G__3524 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3522,G__3523,G__3524) : f.call(null,G__3522,G__3523,G__3524));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3525 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3525) : cljs.core.deref.call(null,G__3525));
} else {
var G__3526 = (i + (2));
var G__3527 = init__$2;
i = G__3526;
init__$1 = G__3527;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__3528 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__3528) : cljs.core.create_inode_seq.call(null,G__3528));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_3542 = (0);
var j_3543 = (0);
while(true){
if((i_3542 < (32))){
if((((self__.bitmap >>> i_3542) & (1)) === (0))){
var G__3544 = (i_3542 + (1));
var G__3545 = j_3543;
i_3542 = G__3544;
j_3543 = G__3545;
continue;
} else {
(nodes[i_3542] = ((!(((self__.arr[j_3543]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_3543])),(self__.arr[j_3543]),(self__.arr[(j_3543 + (1))]),added_leaf_QMARK_):(self__.arr[(j_3543 + (1))])));

var G__3546 = (i_3542 + (1));
var G__3547 = (j_3543 + (2));
i_3542 = G__3546;
j_3543 = G__3547;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__3529 = edit__$1;
var G__3530 = (shift + (5));
var G__3531 = key_or_nil;
var G__3532 = val_or_node;
var G__3533 = hash;
var G__3534 = key;
var G__3535 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__3529,G__3530,G__3531,G__3532,G__3533,G__3534,G__3535) : cljs.core.create_node.call(null,G__3529,G__3530,G__3531,G__3532,G__3533,G__3534,G__3535));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_3548 = (0);
var j_3549 = (0);
while(true){
if((i_3548 < (32))){
if((((self__.bitmap >>> i_3548) & (1)) === (0))){
var G__3550 = (i_3548 + (1));
var G__3551 = j_3549;
i_3548 = G__3550;
j_3549 = G__3551;
continue;
} else {
(nodes[i_3548] = ((!(((self__.arr[j_3549]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_3549])),(self__.arr[j_3549]),(self__.arr[(j_3549 + (1))]),added_leaf_QMARK_):(self__.arr[(j_3549 + (1))])));

var G__3552 = (i_3548 + (1));
var G__3553 = (j_3549 + (2));
i_3548 = G__3552;
j_3549 = G__3553;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__3536 = (shift + (5));
var G__3537 = key_or_nil;
var G__3538 = val_or_node;
var G__3539 = hash;
var G__3540 = key;
var G__3541 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__3536,G__3537,G__3538,G__3539,G__3540,G__3541) : cljs.core.create_node.call(null,G__3536,G__3537,G__3538,G__3539,G__3540,G__3541));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__3554 = (i + (1));
var G__3555 = (j + (2));
var G__3556 = (bitmap | ((1) << i));
i = G__3554;
j = G__3555;
bitmap = G__3556;
continue;
} else {
var G__3557 = (i + (1));
var G__3558 = j;
var G__3559 = bitmap;
i = G__3557;
j = G__3558;
bitmap = G__3559;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__3560 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__3560) : cljs.core.create_array_node_seq.call(null,G__3560));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3561 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3561) : cljs.core.deref.call(null,G__3561));
} else {
var G__3562 = (i + (1));
var G__3563 = init__$2;
i = G__3562;
init__$1 = G__3563;
continue;
}
} else {
var G__3564 = (i + (1));
var G__3565 = init__$1;
i = G__3564;
init__$1 = G__3565;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__3566 = (i + (2));
i = G__3566;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__3567 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__3567) : cljs.core.create_inode_seq.call(null,G__3567));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function cljs$core$create_node(){
var G__3569 = arguments.length;
switch (G__3569) {
case 6:
return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
case 7:
return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});

cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});

cljs.core.create_node.cljs$lang$maxFixedArity = 7;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__3571 = self__.nodes;
var G__3572 = (self__.i + (2));
var G__3573 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__3571,G__3572,G__3573) : cljs.core.create_inode_seq.call(null,G__3571,G__3572,G__3573));
} else {
var G__3574 = self__.nodes;
var G__3575 = self__.i;
var G__3576 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__3574,G__3575,G__3576) : cljs.core.create_inode_seq.call(null,G__3574,G__3575,G__3576));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.create_inode_seq = (function cljs$core$create_inode_seq(){
var G__3578 = arguments.length;
switch (G__3578) {
case 1:
return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 3:
return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = (function (nodes){
return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});

cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4402__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4402__auto__)){
var node = temp__4402__auto__;
var temp__4402__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4402__auto____$1)){
var node_seq = temp__4402__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__3580 = (j + (2));
j = G__3580;
continue;
}
} else {
var G__3581 = (j + (2));
j = G__3581;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});

cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__3582 = null;
var G__3583 = self__.nodes;
var G__3584 = self__.i;
var G__3585 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__3582,G__3583,G__3584,G__3585) : cljs.core.create_array_node_seq.call(null,G__3582,G__3583,G__3584,G__3585));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.create_array_node_seq = (function cljs$core$create_array_node_seq(){
var G__3587 = arguments.length;
switch (G__3587) {
case 1:
return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 4:
return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = (function (nodes){
return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});

cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4402__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4402__auto__)){
var nj = temp__4402__auto__;
var temp__4402__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4402__auto____$1)){
var ns = temp__4402__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__3589 = (j + (1));
j = G__3589;
continue;
}
} else {
var G__3590 = (j + (1));
j = G__3590;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});

cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__3592 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__3592) : cljs.core.keys.call(null,G__3592));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__3593 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__3593) : cljs.core.vals.call(null,G__3593));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__3594 = cljs.core.seq(coll);
var chunk__3595 = null;
var count__3596 = (0);
var i__3597 = (0);
while(true){
if((i__3597 < count__3596)){
var vec__3598 = chunk__3595.cljs$core$IIndexed$_nth$arity$2(null,i__3597);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3598,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3598,(1),null);
var G__3599_3610 = v;
var G__3600_3611 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3599_3610,G__3600_3611) : f.call(null,G__3599_3610,G__3600_3611));

var G__3612 = seq__3594;
var G__3613 = chunk__3595;
var G__3614 = count__3596;
var G__3615 = (i__3597 + (1));
seq__3594 = G__3612;
chunk__3595 = G__3613;
count__3596 = G__3614;
i__3597 = G__3615;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__3594);
if(temp__4404__auto__){
var seq__3594__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__3594__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__3594__$1);
var G__3616 = cljs.core.chunk_rest(seq__3594__$1);
var G__3617 = c__3679__auto__;
var G__3618 = cljs.core.count(c__3679__auto__);
var G__3619 = (0);
seq__3594 = G__3616;
chunk__3595 = G__3617;
count__3596 = G__3618;
i__3597 = G__3619;
continue;
} else {
var vec__3601 = cljs.core.first(seq__3594__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3601,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3601,(1),null);
var G__3602_3620 = v;
var G__3603_3621 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3602_3620,G__3603_3621) : f.call(null,G__3602_3620,G__3603_3621));

var G__3622 = cljs.core.next(seq__3594__$1);
var G__3623 = null;
var G__3624 = (0);
var G__3625 = (0);
seq__3594 = G__3622;
chunk__3595 = G__3623;
count__3596 = G__3624;
i__3597 = G__3625;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__3604 = init;
var G__3605 = null;
var G__3606 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3604,G__3605,G__3606) : f.call(null,G__3604,G__3605,G__3606));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__3607 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3607) : cljs.core.deref.call(null,G__3607));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj3609 = {};
return obj3609;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__3626 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__3627 = cljs.core.next(es);
ret = G__3626;
es = G__3627;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__3628 = null;
var G__3628__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3628__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3628 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3628__2.call(this,self__,k);
case 3:
return G__3628__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3628.cljs$core$IFn$_invoke$arity$2 = G__3628__2;
G__3628.cljs$core$IFn$_invoke$arity$3 = G__3628__3;
return G__3628;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args3591){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3591)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__3629 = (i + (2));
var G__3630 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__3629;
ret = G__3630;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__3631 = (i + (1));
var G__3632 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__3631;
out = G__3632;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__3633 = o;
if(G__3633){
var bit__3604__auto__ = (G__3633.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3604__auto__) || (G__3633.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__3633.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__3633);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__3633);
}
})()){
return tcoll.assoc_BANG_((function (){var G__3634 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__3634) : cljs.core.key.call(null,G__3634));
})(),(function (){var G__3635 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__3635) : cljs.core.val.call(null,G__3635));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4402__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4402__auto__)){
var e = temp__4402__auto__;
var G__3638 = cljs.core.next(es);
var G__3639 = tcoll__$1.assoc_BANG_((function (){var G__3636 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__3636) : cljs.core.key.call(null,G__3636));
})(),(function (){var G__3637 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__3637) : cljs.core.val.call(null,G__3637));
})());
es = G__3638;
tcoll__$1 = G__3639;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__3640 = ((ascending_QMARK_)?t.left:t.right);
var G__3641 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__3640;
stack__$1 = G__3641;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__3654 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3654) : cljs.core.deref.call(null,G__3654));
} else {
var init__$2 = (function (){var G__3655 = init__$1;
var G__3656 = node.key;
var G__3657 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3655,G__3656,G__3657) : f.call(null,G__3655,G__3656,G__3657));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3658 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3658) : cljs.core.deref.call(null,G__3658));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__3659 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3659) : cljs.core.deref.call(null,G__3659));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__3661 = null;
var G__3661__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3661__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3661 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3661__2.call(this,self__,k);
case 3:
return G__3661__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3661.cljs$core$IFn$_invoke$arity$2 = G__3661__2;
G__3661.cljs$core$IFn$_invoke$arity$3 = G__3661__3;
return G__3661;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args3660){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3660)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__3663 = null;
var G__3663__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3663__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3663 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3663__2.call(this,self__,k);
case 3:
return G__3663__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3663.cljs$core$IFn$_invoke$arity$2 = G__3663__2;
G__3663.cljs$core$IFn$_invoke$arity$3 = G__3663__3;
return G__3663;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args3662){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3662)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__3676 = k;
var G__3677 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3676,G__3677) : comp.call(null,G__3676,G__3677));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__3696 = k;
var G__3697 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3696,G__3697) : comp.call(null,G__3696,G__3697));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__3708 = k;
var G__3709 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3708,G__3709) : comp.call(null,G__3708,G__3709));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__3711 = cljs.core.seq(coll);
var chunk__3712 = null;
var count__3713 = (0);
var i__3714 = (0);
while(true){
if((i__3714 < count__3713)){
var vec__3715 = chunk__3712.cljs$core$IIndexed$_nth$arity$2(null,i__3714);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3715,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3715,(1),null);
var G__3716_3728 = v;
var G__3717_3729 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3716_3728,G__3717_3729) : f.call(null,G__3716_3728,G__3717_3729));

var G__3730 = seq__3711;
var G__3731 = chunk__3712;
var G__3732 = count__3713;
var G__3733 = (i__3714 + (1));
seq__3711 = G__3730;
chunk__3712 = G__3731;
count__3713 = G__3732;
i__3714 = G__3733;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__3711);
if(temp__4404__auto__){
var seq__3711__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__3711__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__3711__$1);
var G__3734 = cljs.core.chunk_rest(seq__3711__$1);
var G__3735 = c__3679__auto__;
var G__3736 = cljs.core.count(c__3679__auto__);
var G__3737 = (0);
seq__3711 = G__3734;
chunk__3712 = G__3735;
count__3713 = G__3736;
i__3714 = G__3737;
continue;
} else {
var vec__3718 = cljs.core.first(seq__3711__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3718,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3718,(1),null);
var G__3719_3738 = v;
var G__3720_3739 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3719_3738,G__3720_3739) : f.call(null,G__3719_3738,G__3720_3739));

var G__3740 = cljs.core.next(seq__3711__$1);
var G__3741 = null;
var G__3742 = (0);
var G__3743 = (0);
seq__3711 = G__3740;
chunk__3712 = G__3741;
count__3713 = G__3742;
i__3714 = G__3743;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__3721 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__3721) : cljs.core.keys.call(null,G__3721));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__3722 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__3722) : cljs.core.vals.call(null,G__3722));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__3723 = k;
var G__3724 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3723,G__3724) : self__.comp.call(null,G__3723,G__3724));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__3744 = t.left;
t = G__3744;
continue;
} else {
var G__3745 = t.right;
t = G__3745;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__3746 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__3747 = cljs.core.next(es);
ret = G__3746;
es = G__3747;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__3748 = null;
var G__3748__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3748__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3748 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3748__2.call(this,self__,k);
case 3:
return G__3748__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3748.cljs$core$IFn$_invoke$arity$2 = G__3748__2;
G__3748.cljs$core$IFn$_invoke$arity$3 = G__3748__3;
return G__3748;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args3710){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3710)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__3725 = k;
var G__3726 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3725,G__3726) : self__.comp.call(null,G__3725,G__3726));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__3749 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__3750 = t.left;
stack = G__3749;
t = G__3750;
continue;
} else {
var G__3751 = stack;
var G__3752 = t.right;
stack = G__3751;
t = G__3752;
continue;
}
} else {
if((c > (0))){
var G__3753 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__3754 = t.right;
stack = G__3753;
t = G__3754;
continue;
} else {
var G__3755 = stack;
var G__3756 = t.left;
stack = G__3755;
t = G__3756;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__3727 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__3727) : cljs.core.key.call(null,G__3727));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 */
cljs.core.hash_map = (function cljs$core$hash_map(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = (function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__3758 = cljs.core.nnext(in$);
var G__3759 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__3758;
out = G__3759;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});

cljs.core.hash_map.cljs$lang$maxFixedArity = (0);

cljs.core.hash_map.cljs$lang$applyTo = (function (seq3757){
return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3757));
});
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 */
cljs.core.array_map = (function cljs$core$array_map(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = (function (keyvals){
var arr = ((((keyvals instanceof cljs.core.IndexedSeq)) && ((keyvals.i === (0))))?keyvals.arr:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals));
return cljs.core.PersistentArrayMap.fromArray(arr,true,false);
});

cljs.core.array_map.cljs$lang$maxFixedArity = (0);

cljs.core.array_map.cljs$lang$applyTo = (function (seq3760){
return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3760));
});
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 */
cljs.core.obj_map = (function cljs$core$obj_map(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = (function (keyvals){
var ks = [];
var obj = (function (){var obj3763 = {};
return obj3763;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__3764 = cljs.core.nnext(kvs);
kvs = G__3764;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
});

cljs.core.obj_map.cljs$lang$maxFixedArity = (0);

cljs.core.obj_map.cljs$lang$applyTo = (function (seq3761){
return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3761));
});
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 */
cljs.core.sorted_map = (function cljs$core$sorted_map(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = (function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__3766 = cljs.core.nnext(in$);
var G__3767 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__3766;
out = G__3767;
continue;
} else {
return out;
}
break;
}
});

cljs.core.sorted_map.cljs$lang$maxFixedArity = (0);

cljs.core.sorted_map.cljs$lang$applyTo = (function (seq3765){
return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3765));
});
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 */
cljs.core.sorted_map_by = (function cljs$core$sorted_map_by(){
var argseq__3822__auto__ = ((((1) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(1)),(0))):null);
return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3822__auto__);
});

cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = (function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__3770 = cljs.core.nnext(in$);
var G__3771 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__3770;
out = G__3771;
continue;
} else {
return out;
}
break;
}
});

cljs.core.sorted_map_by.cljs$lang$maxFixedArity = (1);

cljs.core.sorted_map_by.cljs$lang$applyTo = (function (seq3768){
var G__3769 = cljs.core.first(seq3768);
var seq3768__$1 = cljs.core.next(seq3768);
return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__3769,seq3768__$1);
});

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__3772 = self__.mseq;
if(G__3772){
var bit__3604__auto__ = (G__3772.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3604__auto__) || (G__3772.cljs$core$INext$)){
return true;
} else {
if((!G__3772.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3772);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3772);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__3773 = self__.mseq;
if(G__3773){
var bit__3604__auto__ = (G__3773.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3604__auto__) || (G__3773.cljs$core$INext$)){
return true;
} else {
if((!G__3773.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3773);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3773);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4404__auto__ = cljs.core.seq(hash_map);
if(temp__4404__auto__){
var mseq = temp__4404__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__3774 = self__.mseq;
if(G__3774){
var bit__3604__auto__ = (G__3774.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3604__auto__) || (G__3774.cljs$core$INext$)){
return true;
} else {
if((!G__3774.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3774);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3774);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__3775 = self__.mseq;
if(G__3775){
var bit__3604__auto__ = (G__3775.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3604__auto__) || (G__3775.cljs$core$INext$)){
return true;
} else {
if((!G__3775.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3775);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__3775);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4404__auto__ = cljs.core.seq(hash_map);
if(temp__4404__auto__){
var mseq = temp__4404__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 */
cljs.core.merge = (function cljs$core$merge(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = (function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__3776_SHARP_,p2__3777_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3310__auto__ = p1__3776_SHARP_;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__3777_SHARP_);
}),maps);
} else {
return null;
}
});

cljs.core.merge.cljs$lang$maxFixedArity = (0);

cljs.core.merge.cljs$lang$applyTo = (function (seq3778){
return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3778));
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 */
cljs.core.merge_with = (function cljs$core$merge_with(){
var argseq__3822__auto__ = ((((1) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(1)),(0))):null);
return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3822__auto__);
});

cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = (function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3781 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3782 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3781,G__3782) : f.call(null,G__3781,G__3782));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3310__auto__ = m1;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
});

cljs.core.merge_with.cljs$lang$maxFixedArity = (1);

cljs.core.merge_with.cljs$lang$applyTo = (function (seq3779){
var G__3780 = cljs.core.first(seq3779);
var seq3779__$1 = cljs.core.next(seq3779);
return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__3780,seq3779__$1);
});
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__3783 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__3784 = cljs.core.next(keys);
ret = G__3783;
keys = G__3784;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__3787 = cljs.core.seq(coll);
var chunk__3788 = null;
var count__3789 = (0);
var i__3790 = (0);
while(true){
if((i__3790 < count__3789)){
var vec__3791 = chunk__3788.cljs$core$IIndexed$_nth$arity$2(null,i__3790);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3791,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3791,(1),null);
var G__3792_3797 = v;
var G__3793_3798 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3792_3797,G__3793_3798) : f.call(null,G__3792_3797,G__3793_3798));

var G__3799 = seq__3787;
var G__3800 = chunk__3788;
var G__3801 = count__3789;
var G__3802 = (i__3790 + (1));
seq__3787 = G__3799;
chunk__3788 = G__3800;
count__3789 = G__3801;
i__3790 = G__3802;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__3787);
if(temp__4404__auto__){
var seq__3787__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__3787__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__3787__$1);
var G__3803 = cljs.core.chunk_rest(seq__3787__$1);
var G__3804 = c__3679__auto__;
var G__3805 = cljs.core.count(c__3679__auto__);
var G__3806 = (0);
seq__3787 = G__3803;
chunk__3788 = G__3804;
count__3789 = G__3805;
i__3790 = G__3806;
continue;
} else {
var vec__3794 = cljs.core.first(seq__3787__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3794,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3794,(1),null);
var G__3795_3807 = v;
var G__3796_3808 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3795_3807,G__3796_3808) : f.call(null,G__3795_3807,G__3796_3808));

var G__3809 = cljs.core.next(seq__3787__$1);
var G__3810 = null;
var G__3811 = (0);
var G__3812 = (0);
seq__3787 = G__3809;
chunk__3788 = G__3810;
count__3789 = G__3811;
i__3790 = G__3812;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__3785_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__3785_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__3813 = null;
var G__3813__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3813__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3813 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3813__2.call(this,self__,k);
case 3:
return G__3813__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3813.cljs$core$IFn$_invoke$arity$2 = G__3813__2;
G__3813.cljs$core$IFn$_invoke$arity$3 = G__3813__3;
return G__3813;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args3786){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3786)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__3814 = (i + (1));
var G__3815 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__3814;
out = G__3815;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__3816 = (i + (1));
var G__3817 = cljs.core._conj_BANG_(out,(items[i]));
i = G__3816;
out = G__3817;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition1$ = 136;
this.cljs$lang$protocol_mask$partition0$ = 259;
})
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.call = (function() {
var G__3819 = null;
var G__3819__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__3819__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__3819 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3819__2.call(this,self__,k);
case 3:
return G__3819__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3819.cljs$core$IFn$_invoke$arity$2 = G__3819__2;
G__3819.cljs$core$IFn$_invoke$arity$3 = G__3819__3;
return G__3819;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args3818){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3818)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__3822 = cljs.core.seq(coll);
var chunk__3823 = null;
var count__3824 = (0);
var i__3825 = (0);
while(true){
if((i__3825 < count__3824)){
var vec__3826 = chunk__3823.cljs$core$IIndexed$_nth$arity$2(null,i__3825);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3826,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3826,(1),null);
var G__3827_3832 = v;
var G__3828_3833 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3827_3832,G__3828_3833) : f.call(null,G__3827_3832,G__3828_3833));

var G__3834 = seq__3822;
var G__3835 = chunk__3823;
var G__3836 = count__3824;
var G__3837 = (i__3825 + (1));
seq__3822 = G__3834;
chunk__3823 = G__3835;
count__3824 = G__3836;
i__3825 = G__3837;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__3822);
if(temp__4404__auto__){
var seq__3822__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__3822__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__3822__$1);
var G__3838 = cljs.core.chunk_rest(seq__3822__$1);
var G__3839 = c__3679__auto__;
var G__3840 = cljs.core.count(c__3679__auto__);
var G__3841 = (0);
seq__3822 = G__3838;
chunk__3823 = G__3839;
count__3824 = G__3840;
i__3825 = G__3841;
continue;
} else {
var vec__3829 = cljs.core.first(seq__3822__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3829,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3829,(1),null);
var G__3830_3842 = v;
var G__3831_3843 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3830_3842,G__3831_3843) : f.call(null,G__3830_3842,G__3831_3843));

var G__3844 = cljs.core.next(seq__3822__$1);
var G__3845 = null;
var G__3846 = (0);
var G__3847 = (0);
seq__3822 = G__3844;
chunk__3823 = G__3845;
count__3824 = G__3846;
i__3825 = G__3847;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__3820_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__3820_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__3848 = null;
var G__3848__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__3848__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__3848 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3848__2.call(this,self__,k);
case 3:
return G__3848__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3848.cljs$core$IFn$_invoke$arity$2 = G__3848__2;
G__3848.cljs$core$IFn$_invoke$arity$3 = G__3848__3;
return G__3848;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args3821){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3821)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__3729__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__3729__auto__.length)){
var G__3849 = (i + (1));
var G__3850 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__3849;
res = G__3850;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__3851 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__3852 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__3851;
out = G__3852;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 */
cljs.core.hash_set = (function cljs$core$hash_set(){
var G__3855 = arguments.length;
switch (G__3855) {
case 0:
return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,0),(0)));
return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__3834__auto__);

}
});

cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});

cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = (function (keys){
return cljs.core.set(keys);
});

cljs.core.hash_set.cljs$lang$applyTo = (function (seq3853){
return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3853));
});

cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
/**
 * Returns a new sorted set with supplied keys.
 */
cljs.core.sorted_set = (function cljs$core$sorted_set(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = (function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
});

cljs.core.sorted_set.cljs$lang$maxFixedArity = (0);

cljs.core.sorted_set.cljs$lang$applyTo = (function (seq3857){
return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3857));
});
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 */
cljs.core.sorted_set_by = (function cljs$core$sorted_set_by(){
var argseq__3822__auto__ = ((((1) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(1)),(0))):null);
return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3822__auto__);
});

cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = (function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
});

cljs.core.sorted_set_by.cljs$lang$maxFixedArity = (1);

cljs.core.sorted_set_by.cljs$lang$applyTo = (function (seq3858){
var G__3859 = cljs.core.first(seq3858);
var seq3858__$1 = cljs.core.next(seq3858);
return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__3859,seq3858__$1);
});
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function cljs$core$replace(){
var G__3863 = arguments.length;
switch (G__3863) {
case 1:
return cljs.core.replace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.replace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__3860_SHARP_){
var temp__4402__auto__ = cljs.core.find(smap,p1__3860_SHARP_);
if(cljs.core.truth_(temp__4402__auto__)){
var e = temp__4402__auto__;
return cljs.core.val(e);
} else {
return p1__3860_SHARP_;
}
}));
});

cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4402__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4402__auto__)){
var e = temp__4402__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__3861_SHARP_){
var temp__4402__auto__ = cljs.core.find(smap,p1__3861_SHARP_);
if(cljs.core.truth_(temp__4402__auto__)){
var e = temp__4402__auto__;
return cljs.core.second(e);
} else {
return p1__3861_SHARP_;
}
}),coll);
}
});

cljs.core.replace.cljs$lang$maxFixedArity = 2;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function cljs$core$distinct(){
var G__3866 = arguments.length;
switch (G__3866) {
case 0:
return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__3878 = null;
var G__3878__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3878__1 = (function (result){
var G__3867 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3867) : rf.call(null,G__3867));
});
var G__3878__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__3868 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3868) : cljs.core.deref.call(null,G__3868));
})(),input)){
return result;
} else {
cljs.core._vreset_BANG_(seen,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen),input));

var G__3869 = result;
var G__3870 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3869,G__3870) : rf.call(null,G__3869,G__3870));
}
});
G__3878 = function(result,input){
switch(arguments.length){
case 0:
return G__3878__0.call(this);
case 1:
return G__3878__1.call(this,result);
case 2:
return G__3878__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3878.cljs$core$IFn$_invoke$arity$0 = G__3878__0;
G__3878.cljs$core$IFn$_invoke$arity$1 = G__3878__1;
G__3878.cljs$core$IFn$_invoke$arity$2 = G__3878__2;
return G__3878;
})()
;})(seen))
});
});

cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var step = (function cljs$core$step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__3875,seen__$1){
while(true){
var vec__3876 = p__3875;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3876,(0),null);
var xs__$1 = vec__3876;
var temp__4404__auto__ = cljs.core.seq(xs__$1);
if(temp__4404__auto__){
var s = temp__4404__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__3879 = cljs.core.rest(s);
var G__3880 = seen__$1;
p__3875 = G__3879;
seen__$1 = G__3880;
continue;
} else {
return cljs.core.cons(f,cljs$core$step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});

cljs.core.distinct.cljs$lang$maxFixedArity = 1;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__3881 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__3882 = cljs.core.next(s__$1);
ret = G__3881;
s__$1 = G__3882;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__3884 = x;
if(G__3884){
var bit__3601__auto__ = (G__3884.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3601__auto__) || (G__3884.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__3885 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__3886 = cljs.core.next(ks);
var G__3887 = cljs.core.next(vs);
map = G__3885;
ks = G__3886;
vs = G__3887;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 */
cljs.core.max_key = (function cljs$core$max_key(){
var G__3895 = arguments.length;
switch (G__3895) {
case 2:
return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = (function (k,x){
return x;
});

cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = (function (k,x,y){
if(((function (){var G__3896 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__3896) : k.call(null,G__3896));
})() > (function (){var G__3897 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__3897) : k.call(null,G__3897));
})())){
return x;
} else {
return y;
}
});

cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = (function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__3888_SHARP_,p2__3889_SHARP_){
return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,p1__3888_SHARP_,p2__3889_SHARP_);
}),cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
});

cljs.core.max_key.cljs$lang$applyTo = (function (seq3890){
var G__3891 = cljs.core.first(seq3890);
var seq3890__$1 = cljs.core.next(seq3890);
var G__3892 = cljs.core.first(seq3890__$1);
var seq3890__$2 = cljs.core.next(seq3890__$1);
var G__3893 = cljs.core.first(seq3890__$2);
var seq3890__$3 = cljs.core.next(seq3890__$2);
return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__3891,G__3892,G__3893,seq3890__$3);
});

cljs.core.max_key.cljs$lang$maxFixedArity = 3;
/**
 * Returns the x for which (k x), a number, is least.
 */
cljs.core.min_key = (function cljs$core$min_key(){
var G__3906 = arguments.length;
switch (G__3906) {
case 2:
return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = (function (k,x){
return x;
});

cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = (function (k,x,y){
if(((function (){var G__3907 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__3907) : k.call(null,G__3907));
})() < (function (){var G__3908 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__3908) : k.call(null,G__3908));
})())){
return x;
} else {
return y;
}
});

cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = (function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__3899_SHARP_,p2__3900_SHARP_){
return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,p1__3899_SHARP_,p2__3900_SHARP_);
}),cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
});

cljs.core.min_key.cljs$lang$applyTo = (function (seq3901){
var G__3902 = cljs.core.first(seq3901);
var seq3901__$1 = cljs.core.next(seq3901);
var G__3903 = cljs.core.first(seq3901__$1);
var seq3901__$2 = cljs.core.next(seq3901__$1);
var G__3904 = cljs.core.first(seq3901__$2);
var seq3901__$3 = cljs.core.next(seq3901__$2);
return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__3902,G__3903,G__3904,seq3901__$3);
});

cljs.core.min_key.cljs$lang$maxFixedArity = 3;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function cljs$core$partition_all(){
var G__3911 = arguments.length;
switch (G__3911) {
case 1:
return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__3918 = null;
var G__3918__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3918__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__3912 = result;
var G__3913 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3912,G__3913) : rf.call(null,G__3912,G__3913));
})());
})());
var G__3914 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3914) : rf.call(null,G__3914));
});
var G__3918__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__3915 = result;
var G__3916 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3915,G__3916) : rf.call(null,G__3915,G__3916));
} else {
return result;
}
});
G__3918 = function(result,input){
switch(arguments.length){
case 0:
return G__3918__0.call(this);
case 1:
return G__3918__1.call(this,result);
case 2:
return G__3918__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3918.cljs$core$IFn$_invoke$arity$0 = G__3918__0;
G__3918.cljs$core$IFn$_invoke$arity$1 = G__3918__1;
G__3918.cljs$core$IFn$_invoke$arity$2 = G__3918__2;
return G__3918;
})()
;})(a))
});
});

cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = (function (n,coll){
return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});

cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});

cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function cljs$core$take_while(){
var G__3920 = arguments.length;
switch (G__3920) {
case 1:
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = (function (pred){
return (function (rf){
return (function() {
var G__3927 = null;
var G__3927__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3927__1 = (function (result){
var G__3921 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3921) : rf.call(null,G__3921));
});
var G__3927__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__3922 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3922) : pred.call(null,G__3922));
})())){
var G__3923 = result;
var G__3924 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3923,G__3924) : rf.call(null,G__3923,G__3924));
} else {
return cljs.core.reduced(result);
}
});
G__3927 = function(result,input){
switch(arguments.length){
case 0:
return G__3927__0.call(this);
case 1:
return G__3927__1.call(this,result);
case 2:
return G__3927__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3927.cljs$core$IFn$_invoke$arity$0 = G__3927__0;
G__3927.cljs$core$IFn$_invoke$arity$1 = G__3927__1;
G__3927.cljs$core$IFn$_invoke$arity$2 = G__3927__2;
return G__3927;
})()
});
});

cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
if(cljs.core.truth_((function (){var G__3925 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3925) : pred.call(null,G__3925));
})())){
return cljs.core.cons(cljs.core.first(s),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});

cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__3932 = (function (){var G__3934 = cljs.core._entry_key(sc,e);
var G__3935 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3934,G__3935) : comp.call(null,G__3934,G__3935));
})();
var G__3933 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__3932,G__3933) : test.call(null,G__3932,G__3933));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function cljs$core$subseq(){
var G__3937 = arguments.length;
switch (G__3937) {
case 3:
return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 5:
return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4404__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4404__auto__)){
var vec__3938 = temp__4404__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3938,(0),null);
var s = vec__3938;
if(cljs.core.truth_((function (){var G__3939 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__3939) : include.call(null,G__3939));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});

cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4404__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4404__auto__)){
var vec__3940 = temp__4404__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3940,(0),null);
var s = vec__3940;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});

cljs.core.subseq.cljs$lang$maxFixedArity = 5;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function cljs$core$rsubseq(){
var G__3943 = arguments.length;
switch (G__3943) {
case 3:
return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 5:
return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4404__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4404__auto__)){
var vec__3944 = temp__4404__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3944,(0),null);
var s = vec__3944;
if(cljs.core.truth_((function (){var G__3945 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__3945) : include.call(null,G__3945));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});

cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4404__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4404__auto__)){
var vec__3946 = temp__4404__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3946,(0),null);
var s = vec__3946;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});

cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__3948 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__3948) : Math.ceil.call(null,G__3948));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__3402__auto__ = self__.__hash;
if(!((h__3402__auto__ == null))){
return h__3402__auto__;
} else {
var h__3402__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__3402__auto____$1;

return h__3402__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__3949 = ret;
var G__3950 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3949,G__3950) : f.call(null,G__3949,G__3950));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__3951 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3951) : cljs.core.deref.call(null,G__3951));
} else {
var G__3952 = (i + self__.step);
var G__3953 = ret__$1;
i = G__3952;
ret = G__3953;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function cljs$core$range(){
var G__3955 = arguments.length;
switch (G__3955) {
case 0:
return cljs.core.range.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.range.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.range.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.range.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.range.cljs$core$IFn$_invoke$arity$0 = (function (){
return cljs.core.range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});

cljs.core.range.cljs$core$IFn$_invoke$arity$1 = (function (end){
return cljs.core.range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});

cljs.core.range.cljs$core$IFn$_invoke$arity$2 = (function (start,end){
return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});

cljs.core.range.cljs$core$IFn$_invoke$arity$3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});

cljs.core.range.cljs$lang$maxFixedArity = 3;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function cljs$core$take_nth(){
var G__3958 = arguments.length;
switch (G__3958) {
case 1:
return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__3963 = null;
var G__3963__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3963__1 = (function (result){
var G__3959 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3959) : rf.call(null,G__3959));
});
var G__3963__2 = (function (result,input){
var i = cljs.core._vreset_BANG_(ia,(cljs.core._deref(ia) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__3960 = result;
var G__3961 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3960,G__3961) : rf.call(null,G__3960,G__3961));
} else {
return result;
}
});
G__3963 = function(result,input){
switch(arguments.length){
case 0:
return G__3963__0.call(this);
case 1:
return G__3963__1.call(this,result);
case 2:
return G__3963__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3963.cljs$core$IFn$_invoke$arity$0 = G__3963__0;
G__3963.cljs$core$IFn$_invoke$arity$1 = G__3963__1;
G__3963.cljs$core$IFn$_invoke$arity$2 = G__3963__2;
return G__3963;
})()
;})(ia))
});
});

cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(s),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});

cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function cljs$core$partition_by(){
var G__3966 = arguments.length;
switch (G__3966) {
case 1:
return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__3977 = null;
var G__3977__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3977__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__3967 = result;
var G__3968 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3967,G__3968) : rf.call(null,G__3967,G__3968));
})());
})());
var G__3969 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3969) : rf.call(null,G__3969));
});
var G__3977__2 = (function (result,input){
var pval = (function (){var G__3970 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3970) : cljs.core.deref.call(null,G__3970));
})();
var val = (function (){var G__3971 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3971) : f.call(null,G__3971));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__3972 = result;
var G__3973 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3972,G__3973) : rf.call(null,G__3972,G__3973));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__3977 = function(result,input){
switch(arguments.length){
case 0:
return G__3977__0.call(this);
case 1:
return G__3977__1.call(this,result);
case 2:
return G__3977__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3977.cljs$core$IFn$_invoke$arity$0 = G__3977__0;
G__3977.cljs$core$IFn$_invoke$arity$1 = G__3977__1;
G__3977.cljs$core$IFn$_invoke$arity$2 = G__3977__2;
return G__3977;
})()
;})(a,pa))
});
});

cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__3974 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3974) : f.call(null,G__3974));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4404__auto__){
return (function (p1__3964_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__3975 = p1__3964_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3975) : f.call(null,G__3975));
})());
});})(fst,fv,s,temp__4404__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});

cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function cljs$core$reductions(){
var G__3979 = arguments.length;
switch (G__3979) {
case 2:
return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4402__auto__ = cljs.core.seq(coll);
if(temp__4402__auto__){
var s = temp__4402__auto__;
return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});

cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__3980 = init;
var G__3981 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3980,G__3981) : f.call(null,G__3980,G__3981));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});

cljs.core.reductions.cljs$lang$maxFixedArity = 3;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 */
cljs.core.juxt = (function cljs$core$juxt(){
var G__3998 = arguments.length;
switch (G__3998) {
case 1:
return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,3),(0)));
return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__3834__auto__);

}
});

cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = (function (f){
return (function() {
var G__4042 = null;
var G__4042__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__4042__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__3999 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3999) : f.call(null,G__3999));
})()],null));
});
var G__4042__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4000 = x;
var G__4001 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4000,G__4001) : f.call(null,G__4000,G__4001));
})()],null));
});
var G__4042__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4002 = x;
var G__4003 = y;
var G__4004 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4002,G__4003,G__4004) : f.call(null,G__4002,G__4003,G__4004));
})()],null));
});
var G__4042__4 = (function() { 
var G__4043__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__4043 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4044__i = 0, G__4044__a = new Array(arguments.length -  3);
while (G__4044__i < G__4044__a.length) {G__4044__a[G__4044__i] = arguments[G__4044__i + 3]; ++G__4044__i;}
  args = new cljs.core.IndexedSeq(G__4044__a,0);
} 
return G__4043__delegate.call(this,x,y,z,args);};
G__4043.cljs$lang$maxFixedArity = 3;
G__4043.cljs$lang$applyTo = (function (arglist__4045){
var x = cljs.core.first(arglist__4045);
arglist__4045 = cljs.core.next(arglist__4045);
var y = cljs.core.first(arglist__4045);
arglist__4045 = cljs.core.next(arglist__4045);
var z = cljs.core.first(arglist__4045);
var args = cljs.core.rest(arglist__4045);
return G__4043__delegate(x,y,z,args);
});
G__4043.cljs$core$IFn$_invoke$arity$variadic = G__4043__delegate;
return G__4043;
})()
;
G__4042 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4042__0.call(this);
case 1:
return G__4042__1.call(this,x);
case 2:
return G__4042__2.call(this,x,y);
case 3:
return G__4042__3.call(this,x,y,z);
default:
var G__4046 = null;
if (arguments.length > 3) {
var G__4047__i = 0, G__4047__a = new Array(arguments.length -  3);
while (G__4047__i < G__4047__a.length) {G__4047__a[G__4047__i] = arguments[G__4047__i + 3]; ++G__4047__i;}
G__4046 = new cljs.core.IndexedSeq(G__4047__a,0);
}
return G__4042__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4042.cljs$lang$maxFixedArity = 3;
G__4042.cljs$lang$applyTo = G__4042__4.cljs$lang$applyTo;
G__4042.cljs$core$IFn$_invoke$arity$0 = G__4042__0;
G__4042.cljs$core$IFn$_invoke$arity$1 = G__4042__1;
G__4042.cljs$core$IFn$_invoke$arity$2 = G__4042__2;
G__4042.cljs$core$IFn$_invoke$arity$3 = G__4042__3;
G__4042.cljs$core$IFn$_invoke$arity$variadic = G__4042__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4042;
})()
});

cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = (function (f,g){
return (function() {
var G__4048 = null;
var G__4048__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__4048__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4005 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4005) : f.call(null,G__4005));
})(),(function (){var G__4006 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4006) : g.call(null,G__4006));
})()],null));
});
var G__4048__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4007 = x;
var G__4008 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4007,G__4008) : f.call(null,G__4007,G__4008));
})(),(function (){var G__4009 = x;
var G__4010 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__4009,G__4010) : g.call(null,G__4009,G__4010));
})()],null));
});
var G__4048__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4011 = x;
var G__4012 = y;
var G__4013 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4011,G__4012,G__4013) : f.call(null,G__4011,G__4012,G__4013));
})(),(function (){var G__4014 = x;
var G__4015 = y;
var G__4016 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__4014,G__4015,G__4016) : g.call(null,G__4014,G__4015,G__4016));
})()],null));
});
var G__4048__4 = (function() { 
var G__4049__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__4049 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4050__i = 0, G__4050__a = new Array(arguments.length -  3);
while (G__4050__i < G__4050__a.length) {G__4050__a[G__4050__i] = arguments[G__4050__i + 3]; ++G__4050__i;}
  args = new cljs.core.IndexedSeq(G__4050__a,0);
} 
return G__4049__delegate.call(this,x,y,z,args);};
G__4049.cljs$lang$maxFixedArity = 3;
G__4049.cljs$lang$applyTo = (function (arglist__4051){
var x = cljs.core.first(arglist__4051);
arglist__4051 = cljs.core.next(arglist__4051);
var y = cljs.core.first(arglist__4051);
arglist__4051 = cljs.core.next(arglist__4051);
var z = cljs.core.first(arglist__4051);
var args = cljs.core.rest(arglist__4051);
return G__4049__delegate(x,y,z,args);
});
G__4049.cljs$core$IFn$_invoke$arity$variadic = G__4049__delegate;
return G__4049;
})()
;
G__4048 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4048__0.call(this);
case 1:
return G__4048__1.call(this,x);
case 2:
return G__4048__2.call(this,x,y);
case 3:
return G__4048__3.call(this,x,y,z);
default:
var G__4052 = null;
if (arguments.length > 3) {
var G__4053__i = 0, G__4053__a = new Array(arguments.length -  3);
while (G__4053__i < G__4053__a.length) {G__4053__a[G__4053__i] = arguments[G__4053__i + 3]; ++G__4053__i;}
G__4052 = new cljs.core.IndexedSeq(G__4053__a,0);
}
return G__4048__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4048.cljs$lang$maxFixedArity = 3;
G__4048.cljs$lang$applyTo = G__4048__4.cljs$lang$applyTo;
G__4048.cljs$core$IFn$_invoke$arity$0 = G__4048__0;
G__4048.cljs$core$IFn$_invoke$arity$1 = G__4048__1;
G__4048.cljs$core$IFn$_invoke$arity$2 = G__4048__2;
G__4048.cljs$core$IFn$_invoke$arity$3 = G__4048__3;
G__4048.cljs$core$IFn$_invoke$arity$variadic = G__4048__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4048;
})()
});

cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = (function (f,g,h){
return (function() {
var G__4054 = null;
var G__4054__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__4054__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4017 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4017) : f.call(null,G__4017));
})(),(function (){var G__4018 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4018) : g.call(null,G__4018));
})(),(function (){var G__4019 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__4019) : h.call(null,G__4019));
})()],null));
});
var G__4054__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4020 = x;
var G__4021 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4020,G__4021) : f.call(null,G__4020,G__4021));
})(),(function (){var G__4022 = x;
var G__4023 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__4022,G__4023) : g.call(null,G__4022,G__4023));
})(),(function (){var G__4024 = x;
var G__4025 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__4024,G__4025) : h.call(null,G__4024,G__4025));
})()],null));
});
var G__4054__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4026 = x;
var G__4027 = y;
var G__4028 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4026,G__4027,G__4028) : f.call(null,G__4026,G__4027,G__4028));
})(),(function (){var G__4029 = x;
var G__4030 = y;
var G__4031 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__4029,G__4030,G__4031) : g.call(null,G__4029,G__4030,G__4031));
})(),(function (){var G__4032 = x;
var G__4033 = y;
var G__4034 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__4032,G__4033,G__4034) : h.call(null,G__4032,G__4033,G__4034));
})()],null));
});
var G__4054__4 = (function() { 
var G__4055__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__4055 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4056__i = 0, G__4056__a = new Array(arguments.length -  3);
while (G__4056__i < G__4056__a.length) {G__4056__a[G__4056__i] = arguments[G__4056__i + 3]; ++G__4056__i;}
  args = new cljs.core.IndexedSeq(G__4056__a,0);
} 
return G__4055__delegate.call(this,x,y,z,args);};
G__4055.cljs$lang$maxFixedArity = 3;
G__4055.cljs$lang$applyTo = (function (arglist__4057){
var x = cljs.core.first(arglist__4057);
arglist__4057 = cljs.core.next(arglist__4057);
var y = cljs.core.first(arglist__4057);
arglist__4057 = cljs.core.next(arglist__4057);
var z = cljs.core.first(arglist__4057);
var args = cljs.core.rest(arglist__4057);
return G__4055__delegate(x,y,z,args);
});
G__4055.cljs$core$IFn$_invoke$arity$variadic = G__4055__delegate;
return G__4055;
})()
;
G__4054 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4054__0.call(this);
case 1:
return G__4054__1.call(this,x);
case 2:
return G__4054__2.call(this,x,y);
case 3:
return G__4054__3.call(this,x,y,z);
default:
var G__4058 = null;
if (arguments.length > 3) {
var G__4059__i = 0, G__4059__a = new Array(arguments.length -  3);
while (G__4059__i < G__4059__a.length) {G__4059__a[G__4059__i] = arguments[G__4059__i + 3]; ++G__4059__i;}
G__4058 = new cljs.core.IndexedSeq(G__4059__a,0);
}
return G__4054__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4054.cljs$lang$maxFixedArity = 3;
G__4054.cljs$lang$applyTo = G__4054__4.cljs$lang$applyTo;
G__4054.cljs$core$IFn$_invoke$arity$0 = G__4054__0;
G__4054.cljs$core$IFn$_invoke$arity$1 = G__4054__1;
G__4054.cljs$core$IFn$_invoke$arity$2 = G__4054__2;
G__4054.cljs$core$IFn$_invoke$arity$3 = G__4054__3;
G__4054.cljs$core$IFn$_invoke$arity$variadic = G__4054__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4054;
})()
});

cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = (function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__4060 = null;
var G__4060__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__3983_SHARP_,p2__3984_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__3983_SHARP_,(function (){return (p2__3984_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__3984_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__3984_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4060__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__3985_SHARP_,p2__3986_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__3985_SHARP_,(function (){var G__4035 = x;
return (p2__3986_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__3986_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4035) : p2__3986_SHARP_.call(null,G__4035));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4060__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__3987_SHARP_,p2__3988_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__3987_SHARP_,(function (){var G__4036 = x;
var G__4037 = y;
return (p2__3988_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__3988_SHARP_.cljs$core$IFn$_invoke$arity$2(G__4036,G__4037) : p2__3988_SHARP_.call(null,G__4036,G__4037));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4060__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__3989_SHARP_,p2__3990_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__3989_SHARP_,(function (){var G__4038 = x;
var G__4039 = y;
var G__4040 = z;
return (p2__3990_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__3990_SHARP_.cljs$core$IFn$_invoke$arity$3(G__4038,G__4039,G__4040) : p2__3990_SHARP_.call(null,G__4038,G__4039,G__4040));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4060__4 = (function() { 
var G__4061__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__3991_SHARP_,p2__3992_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__3991_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__3992_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__4061 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4062__i = 0, G__4062__a = new Array(arguments.length -  3);
while (G__4062__i < G__4062__a.length) {G__4062__a[G__4062__i] = arguments[G__4062__i + 3]; ++G__4062__i;}
  args = new cljs.core.IndexedSeq(G__4062__a,0);
} 
return G__4061__delegate.call(this,x,y,z,args);};
G__4061.cljs$lang$maxFixedArity = 3;
G__4061.cljs$lang$applyTo = (function (arglist__4063){
var x = cljs.core.first(arglist__4063);
arglist__4063 = cljs.core.next(arglist__4063);
var y = cljs.core.first(arglist__4063);
arglist__4063 = cljs.core.next(arglist__4063);
var z = cljs.core.first(arglist__4063);
var args = cljs.core.rest(arglist__4063);
return G__4061__delegate(x,y,z,args);
});
G__4061.cljs$core$IFn$_invoke$arity$variadic = G__4061__delegate;
return G__4061;
})()
;
G__4060 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4060__0.call(this);
case 1:
return G__4060__1.call(this,x);
case 2:
return G__4060__2.call(this,x,y);
case 3:
return G__4060__3.call(this,x,y,z);
default:
var G__4064 = null;
if (arguments.length > 3) {
var G__4065__i = 0, G__4065__a = new Array(arguments.length -  3);
while (G__4065__i < G__4065__a.length) {G__4065__a[G__4065__i] = arguments[G__4065__i + 3]; ++G__4065__i;}
G__4064 = new cljs.core.IndexedSeq(G__4065__a,0);
}
return G__4060__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4064);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4060.cljs$lang$maxFixedArity = 3;
G__4060.cljs$lang$applyTo = G__4060__4.cljs$lang$applyTo;
G__4060.cljs$core$IFn$_invoke$arity$0 = G__4060__0;
G__4060.cljs$core$IFn$_invoke$arity$1 = G__4060__1;
G__4060.cljs$core$IFn$_invoke$arity$2 = G__4060__2;
G__4060.cljs$core$IFn$_invoke$arity$3 = G__4060__3;
G__4060.cljs$core$IFn$_invoke$arity$variadic = G__4060__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4060;
})()
;})(fs__$1))
});

cljs.core.juxt.cljs$lang$applyTo = (function (seq3993){
var G__3994 = cljs.core.first(seq3993);
var seq3993__$1 = cljs.core.next(seq3993);
var G__3995 = cljs.core.first(seq3993__$1);
var seq3993__$2 = cljs.core.next(seq3993__$1);
var G__3996 = cljs.core.first(seq3993__$2);
var seq3993__$3 = cljs.core.next(seq3993__$2);
return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__3994,G__3995,G__3996,seq3993__$3);
});

cljs.core.juxt.cljs$lang$maxFixedArity = 3;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function cljs$core$dorun(){
var G__4067 = arguments.length;
switch (G__4067) {
case 1:
return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__4069 = cljs.core.next(coll);
coll = G__4069;
continue;
} else {
return null;
}
break;
}
});

cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__4070 = (n - (1));
var G__4071 = cljs.core.next(coll);
n = G__4070;
coll = G__4071;
continue;
} else {
return null;
}
break;
}
});

cljs.core.dorun.cljs$lang$maxFixedArity = 2;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function cljs$core$doall(){
var G__4073 = arguments.length;
switch (G__4073) {
case 1:
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.doall.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});

cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});

cljs.core.doall.cljs$lang$maxFixedArity = 2;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__4078 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4078,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4078,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__3310__auto__ = flags;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_4086 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3310__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__4087_4093 = cljs.core.first(coll);
var G__4088_4094 = writer;
var G__4089_4095 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4087_4093,G__4088_4094,G__4089_4095) : print_one.call(null,G__4087_4093,G__4088_4094,G__4089_4095));
} else {
}

var coll_4096__$1 = cljs.core.next(coll);
var n_4097 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_4096__$1) && (((n_4097 == null)) || (!((n_4097 === (0)))))){
cljs.core._write(writer,sep);

var G__4090_4098 = cljs.core.first(coll_4096__$1);
var G__4091_4099 = writer;
var G__4092_4100 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4090_4098,G__4091_4099,G__4092_4100) : print_one.call(null,G__4090_4098,G__4091_4099,G__4092_4100));

var G__4101 = cljs.core.next(coll_4096__$1);
var G__4102 = (n_4097 - (1));
coll_4096__$1 = G__4101;
n_4097 = G__4102;
continue;
} else {
if((cljs.core.seq(coll_4096__$1)) && ((n_4097 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3310__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_4086;
}});
cljs.core.write_all = (function cljs$core$write_all(){
var argseq__3822__auto__ = ((((1) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(1)),(0))):null);
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3822__auto__);
});

cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = (function (writer,ss){
var seq__4105 = cljs.core.seq(ss);
var chunk__4106 = null;
var count__4107 = (0);
var i__4108 = (0);
while(true){
if((i__4108 < count__4107)){
var s = chunk__4106.cljs$core$IIndexed$_nth$arity$2(null,i__4108);
cljs.core._write(writer,s);

var G__4109 = seq__4105;
var G__4110 = chunk__4106;
var G__4111 = count__4107;
var G__4112 = (i__4108 + (1));
seq__4105 = G__4109;
chunk__4106 = G__4110;
count__4107 = G__4111;
i__4108 = G__4112;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__4105);
if(temp__4404__auto__){
var seq__4105__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4105__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__4105__$1);
var G__4113 = cljs.core.chunk_rest(seq__4105__$1);
var G__4114 = c__3679__auto__;
var G__4115 = cljs.core.count(c__3679__auto__);
var G__4116 = (0);
seq__4105 = G__4113;
chunk__4106 = G__4114;
count__4107 = G__4115;
i__4108 = G__4116;
continue;
} else {
var s = cljs.core.first(seq__4105__$1);
cljs.core._write(writer,s);

var G__4117 = cljs.core.next(seq__4105__$1);
var G__4118 = null;
var G__4119 = (0);
var G__4120 = (0);
seq__4105 = G__4117;
chunk__4106 = G__4118;
count__4107 = G__4119;
i__4108 = G__4120;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.write_all.cljs$lang$maxFixedArity = (1);

cljs.core.write_all.cljs$lang$applyTo = (function (seq4103){
var G__4104 = cljs.core.first(seq4103);
var seq4103__$1 = cljs.core.next(seq4103);
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__4104,seq4103__$1);
});
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj4122 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj4122;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__4125 = "[\\\\\"\b\f\n\r\t]";
var G__4126 = "g";
return RegExp(G__4125,G__4126);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3302__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3302__auto__)){
var and__3302__auto____$1 = (function (){var G__4140 = obj;
if(G__4140){
var bit__3604__auto__ = (G__4140.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3604__auto__) || (G__4140.cljs$core$IMeta$)){
return true;
} else {
if((!G__4140.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__4140);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__4140);
}
})();
if(and__3302__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__4141_4151 = cljs.core.meta(obj);
var G__4142_4152 = writer;
var G__4143_4153 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__4141_4151,G__4142_4152,G__4143_4153) : cljs.core.pr_writer.call(null,G__4141_4151,G__4142_4152,G__4143_4153));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__4144 = obj;
if(G__4144){
var bit__3601__auto__ = (G__4144.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3601__auto__) || (G__4144.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__4145 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__4146 = cljs.core.pr_writer;
var G__4147 = writer;
var G__4148 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__4145,G__4146,G__4147,G__4148) : cljs.core.print_map.call(null,G__4145,G__4146,G__4147,G__4148));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__4149 = obj;
return goog.isString(G__4149);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__4154 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__4154;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.truth_(cljs.core.regexp_QMARK_(obj))){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__4150 = obj;
if(G__4150){
var bit__3604__auto__ = (G__4150.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3604__auto__) || (G__4150.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__4150.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__4150);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__4150);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4402__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4402__auto__)){
var alt_impl = temp__4402__auto__;
var G__4158 = obj;
var G__4159 = writer;
var G__4160 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__4158,G__4159,G__4160) : alt_impl.call(null,G__4158,G__4159,G__4160));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__4165 = cljs.core.seq(cljs.core.next(objs));
var chunk__4166 = null;
var count__4167 = (0);
var i__4168 = (0);
while(true){
if((i__4168 < count__4167)){
var obj = chunk__4166.cljs$core$IIndexed$_nth$arity$2(null,i__4168);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__4169 = seq__4165;
var G__4170 = chunk__4166;
var G__4171 = count__4167;
var G__4172 = (i__4168 + (1));
seq__4165 = G__4169;
chunk__4166 = G__4170;
count__4167 = G__4171;
i__4168 = G__4172;
continue;
} else {
var temp__4404__auto__ = cljs.core.seq(seq__4165);
if(temp__4404__auto__){
var seq__4165__$1 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4165__$1)){
var c__3679__auto__ = cljs.core.chunk_first(seq__4165__$1);
var G__4173 = cljs.core.chunk_rest(seq__4165__$1);
var G__4174 = c__3679__auto__;
var G__4175 = cljs.core.count(c__3679__auto__);
var G__4176 = (0);
seq__4165 = G__4173;
chunk__4166 = G__4174;
count__4167 = G__4175;
i__4168 = G__4176;
continue;
} else {
var obj = cljs.core.first(seq__4165__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__4177 = cljs.core.next(seq__4165__$1);
var G__4178 = null;
var G__4179 = (0);
var G__4180 = (0);
seq__4165 = G__4177;
chunk__4166 = G__4178;
count__4167 = G__4179;
i__4168 = G__4180;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 */
cljs.core.pr_str = (function cljs$core$pr_str(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = (function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
});

cljs.core.pr_str.cljs$lang$maxFixedArity = (0);

cljs.core.pr_str.cljs$lang$applyTo = (function (seq4181){
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4181));
});
/**
 * Same as pr-str followed by (newline)
 */
cljs.core.prn_str = (function cljs$core$prn_str(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = (function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
});

cljs.core.prn_str.cljs$lang$maxFixedArity = (0);

cljs.core.prn_str.cljs$lang$applyTo = (function (seq4182){
return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4182));
});
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 */
cljs.core.pr = (function cljs$core$pr(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = (function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
});

cljs.core.pr.cljs$lang$maxFixedArity = (0);

cljs.core.pr.cljs$lang$applyTo = (function (seq4183){
return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4183));
});
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4184__i = 0, G__4184__a = new Array(arguments.length -  0);
while (G__4184__i < G__4184__a.length) {G__4184__a[G__4184__i] = arguments[G__4184__i + 0]; ++G__4184__i;}
  objs = new cljs.core.IndexedSeq(G__4184__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__4185){
var objs = cljs.core.seq(arglist__4185);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 */
cljs.core.print_str = (function cljs$core$print_str(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = (function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
});

cljs.core.print_str.cljs$lang$maxFixedArity = (0);

cljs.core.print_str.cljs$lang$applyTo = (function (seq4186){
return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4186));
});
/**
 * Same as print followed by (newline)
 */
cljs.core.println = (function cljs$core$println(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = (function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
});

cljs.core.println.cljs$lang$maxFixedArity = (0);

cljs.core.println.cljs$lang$applyTo = (function (seq4187){
return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4187));
});
/**
 * println to a string, returning it
 */
cljs.core.println_str = (function cljs$core$println_str(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = (function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
});

cljs.core.println_str.cljs$lang$maxFixedArity = (0);

cljs.core.println_str.cljs$lang$applyTo = (function (seq4188){
return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4188));
});
/**
 * Same as pr followed by (newline).
 */
cljs.core.prn = (function cljs$core$prn(){
var argseq__3822__auto__ = ((((0) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(0)),(0))):null);
return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__3822__auto__);
});

cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = (function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
});

cljs.core.prn.cljs$lang$maxFixedArity = (0);

cljs.core.prn.cljs$lang$applyTo = (function (seq4189){
return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4189));
});
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__4196_4202 = cljs.core.key(e);
var G__4197_4203 = w;
var G__4198_4204 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4196_4202,G__4197_4203,G__4198_4204) : print_one.call(null,G__4196_4202,G__4197_4203,G__4198_4204));

cljs.core._write(w," ");

var G__4199 = cljs.core.val(e);
var G__4200 = w;
var G__4201 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4199,G__4200,G__4201) : print_one.call(null,G__4199,G__4200,G__4201));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 */
cljs.core.alter_meta_BANG_ = (function cljs$core$alter_meta_BANG_(){
var argseq__3822__auto__ = ((((2) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(2)),(0))):null);
return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__3822__auto__);
});

cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
});

cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = (2);

cljs.core.alter_meta_BANG_.cljs$lang$applyTo = (function (seq4205){
var G__4206 = cljs.core.first(seq4205);
var seq4205__$1 = cljs.core.next(seq4205);
var G__4207 = cljs.core.first(seq4205__$1);
var seq4205__$2 = cljs.core.next(seq4205__$1);
return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__4206,G__4207,seq4205__$2);
});
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function cljs$core$gensym(){
var G__4209 = arguments.length;
switch (G__4209) {
case 0:
return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = (function (){
return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
});

cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__4210 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__4210) : cljs.core.atom.call(null,G__4210));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});

cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 1;
})
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__4213 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4213) : cljs.core.deref.call(null,G__4213));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__4214_SHARP_,p2__4215_SHARP_){
var ret = (function (){var G__4218 = p1__4214_SHARP_;
var G__4219 = p2__4215_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4218,G__4219) : rf.call(null,G__4218,G__4219));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__4222 = null;
var G__4222__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4222__1 = (function (result){
var G__4221 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4221) : rf.call(null,G__4221));
});
var G__4222__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__4222 = function(result,input){
switch(arguments.length){
case 0:
return G__4222__0.call(this);
case 1:
return G__4222__1.call(this,result);
case 2:
return G__4222__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4222.cljs$core$IFn$_invoke$arity$0 = G__4222__0;
G__4222.cljs$core$IFn$_invoke$arity$1 = G__4222__1;
G__4222.cljs$core$IFn$_invoke$arity$2 = G__4222__2;
return G__4222;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function cljs$core$dedupe(){
var G__4224 = arguments.length;
switch (G__4224) {
case 0:
return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__4230 = null;
var G__4230__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4230__1 = (function (result){
var G__4225 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4225) : rf.call(null,G__4225));
});
var G__4230__2 = (function (result,input){
var prior = (function (){var G__4226 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4226) : cljs.core.deref.call(null,G__4226));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__4227 = result;
var G__4228 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4227,G__4228) : rf.call(null,G__4227,G__4228));
}
});
G__4230 = function(result,input){
switch(arguments.length){
case 0:
return G__4230__0.call(this);
case 1:
return G__4230__1.call(this,result);
case 2:
return G__4230__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4230.cljs$core$IFn$_invoke$arity$0 = G__4230__0;
G__4230.cljs$core$IFn$_invoke$arity$1 = G__4230__1;
G__4230.cljs$core$IFn$_invoke$arity$2 = G__4230__2;
return G__4230;
})()
;})(pa))
});
});

cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});

cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function cljs$core$random_sample(){
var G__4232 = arguments.length;
switch (G__4232) {
case 1:
return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});

cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});

cljs.core.random_sample.cljs$lang$maxFixedArity = 2;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__3786__auto__ = this;
return cljs.core.es6_iterator(this__3786__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__4235_SHARP_,p2__4234_SHARP_){
var G__4237 = p2__4234_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__4237) : proc.call(null,G__4237));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj4239 = {};
return obj4239;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__3302__auto__ = x;
if(and__3302__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3302__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__3574__auto__ = (((x == null))?null:x);
return (function (){var or__3310__auto__ = (cljs.core._clj__GT_js[(function (){var G__4243 = x__3574__auto__;
return goog.typeOf(G__4243);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__3302__auto__ = x;
if(and__3302__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3302__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__3574__auto__ = (((x == null))?null:x);
return (function (){var or__3310__auto__ = (cljs.core._key__GT_js[(function (){var G__4247 = x__3574__auto__;
return goog.typeOf(G__4247);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__4250 = k;
if(G__4250){
var bit__3604__auto__ = null;
if(cljs.core.truth_((function (){var or__3310__auto__ = bit__3604__auto__;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return G__4250.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__4250.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__4250);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__4250);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__4251 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__4251) : cljs.core.clj__GT_js.call(null,G__4251));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__4267 = x;
if(G__4267){
var bit__3604__auto__ = null;
if(cljs.core.truth_((function (){var or__3310__auto__ = bit__3604__auto__;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return G__4267.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__4267.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__4267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__4267);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj4269 = {};
return obj4269;
})();
var seq__4270_4280 = cljs.core.seq(x);
var chunk__4271_4281 = null;
var count__4272_4282 = (0);
var i__4273_4283 = (0);
while(true){
if((i__4273_4283 < count__4272_4282)){
var vec__4274_4284 = chunk__4271_4281.cljs$core$IIndexed$_nth$arity$2(null,i__4273_4283);
var k_4285 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4274_4284,(0),null);
var v_4286 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4274_4284,(1),null);
(m[cljs.core.key__GT_js(k_4285)] = cljs$core$clj__GT_js(v_4286));

var G__4287 = seq__4270_4280;
var G__4288 = chunk__4271_4281;
var G__4289 = count__4272_4282;
var G__4290 = (i__4273_4283 + (1));
seq__4270_4280 = G__4287;
chunk__4271_4281 = G__4288;
count__4272_4282 = G__4289;
i__4273_4283 = G__4290;
continue;
} else {
var temp__4404__auto___4291 = cljs.core.seq(seq__4270_4280);
if(temp__4404__auto___4291){
var seq__4270_4292__$1 = temp__4404__auto___4291;
if(cljs.core.chunked_seq_QMARK_(seq__4270_4292__$1)){
var c__3679__auto___4293 = cljs.core.chunk_first(seq__4270_4292__$1);
var G__4294 = cljs.core.chunk_rest(seq__4270_4292__$1);
var G__4295 = c__3679__auto___4293;
var G__4296 = cljs.core.count(c__3679__auto___4293);
var G__4297 = (0);
seq__4270_4280 = G__4294;
chunk__4271_4281 = G__4295;
count__4272_4282 = G__4296;
i__4273_4283 = G__4297;
continue;
} else {
var vec__4275_4298 = cljs.core.first(seq__4270_4292__$1);
var k_4299 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4275_4298,(0),null);
var v_4300 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4275_4298,(1),null);
(m[cljs.core.key__GT_js(k_4299)] = cljs$core$clj__GT_js(v_4300));

var G__4301 = cljs.core.next(seq__4270_4292__$1);
var G__4302 = null;
var G__4303 = (0);
var G__4304 = (0);
seq__4270_4280 = G__4301;
chunk__4271_4281 = G__4302;
count__4272_4282 = G__4303;
i__4273_4283 = G__4304;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__4276_4305 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__4277_4306 = null;
var count__4278_4307 = (0);
var i__4279_4308 = (0);
while(true){
if((i__4279_4308 < count__4278_4307)){
var x_4309__$1 = chunk__4277_4306.cljs$core$IIndexed$_nth$arity$2(null,i__4279_4308);
arr.push(x_4309__$1);

var G__4310 = seq__4276_4305;
var G__4311 = chunk__4277_4306;
var G__4312 = count__4278_4307;
var G__4313 = (i__4279_4308 + (1));
seq__4276_4305 = G__4310;
chunk__4277_4306 = G__4311;
count__4278_4307 = G__4312;
i__4279_4308 = G__4313;
continue;
} else {
var temp__4404__auto___4314 = cljs.core.seq(seq__4276_4305);
if(temp__4404__auto___4314){
var seq__4276_4315__$1 = temp__4404__auto___4314;
if(cljs.core.chunked_seq_QMARK_(seq__4276_4315__$1)){
var c__3679__auto___4316 = cljs.core.chunk_first(seq__4276_4315__$1);
var G__4317 = cljs.core.chunk_rest(seq__4276_4315__$1);
var G__4318 = c__3679__auto___4316;
var G__4319 = cljs.core.count(c__3679__auto___4316);
var G__4320 = (0);
seq__4276_4305 = G__4317;
chunk__4277_4306 = G__4318;
count__4278_4307 = G__4319;
i__4279_4308 = G__4320;
continue;
} else {
var x_4321__$1 = cljs.core.first(seq__4276_4315__$1);
arr.push(x_4321__$1);

var G__4322 = cljs.core.next(seq__4276_4315__$1);
var G__4323 = null;
var G__4324 = (0);
var G__4325 = (0);
seq__4276_4305 = G__4322;
chunk__4277_4306 = G__4323;
count__4278_4307 = G__4324;
i__4279_4308 = G__4325;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj4327 = {};
return obj4327;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__3302__auto__ = x;
if(and__3302__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3302__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__3574__auto__ = (((x == null))?null:x);
return (function (){var or__3310__auto__ = (cljs.core._js__GT_clj[(function (){var G__4331 = x__3574__auto__;
return goog.typeOf(G__4331);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 */
cljs.core.js__GT_clj = (function cljs$core$js__GT_clj(){
var G__4335 = arguments.length;
switch (G__4335) {
case 1:
return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,1),(0)));
return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3834__auto__);

}
});

cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = (function (x){
return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});

cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){
var map__4336 = opts;
var map__4336__$1 = ((cljs.core.seq_QMARK_(map__4336))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4336):map__4336);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4336__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__4336,map__4336__$1,keywordize_keys,keyfn){
return (function cljs$core$thisfn(x__$1){
if((function (){var G__4352 = x__$1;
if(G__4352){
var bit__3604__auto__ = null;
if(cljs.core.truth_((function (){var or__3310__auto__ = bit__3604__auto__;
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return G__4352.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__4352.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__4352);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__4352);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__3652__auto__ = ((function (map__4336,map__4336__$1,keywordize_keys,keyfn){
return (function cljs$core$thisfn_$_iter__4353(s__4354){
return (new cljs.core.LazySeq(null,((function (map__4336,map__4336__$1,keywordize_keys,keyfn){
return (function (){
var s__4354__$1 = s__4354;
while(true){
var temp__4404__auto__ = cljs.core.seq(s__4354__$1);
if(temp__4404__auto__){
var s__4354__$2 = temp__4404__auto__;
if(cljs.core.chunked_seq_QMARK_(s__4354__$2)){
var c__3650__auto__ = cljs.core.chunk_first(s__4354__$2);
var size__3651__auto__ = cljs.core.count(c__3650__auto__);
var b__4356 = cljs.core.chunk_buffer(size__3651__auto__);
if((function (){var i__4355 = (0);
while(true){
if((i__4355 < size__3651__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__3650__auto__,i__4355);
cljs.core.chunk_append(b__4356,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__4361 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__4361) : keyfn.call(null,G__4361));
})(),cljs$core$thisfn((x__$1[k]))], null));

var G__4364 = (i__4355 + (1));
i__4355 = G__4364;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__4356),cljs$core$thisfn_$_iter__4353(cljs.core.chunk_rest(s__4354__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__4356),null);
}
} else {
var k = cljs.core.first(s__4354__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__4362 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__4362) : keyfn.call(null,G__4362));
})(),cljs$core$thisfn((x__$1[k]))], null),cljs$core$thisfn_$_iter__4353(cljs.core.rest(s__4354__$2)));
}
} else {
return null;
}
break;
}
});})(map__4336,map__4336__$1,keywordize_keys,keyfn))
,null,null));
});})(map__4336,map__4336__$1,keywordize_keys,keyfn))
;
return iter__3652__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__4336,map__4336__$1,keywordize_keys,keyfn))
;
return f(x);
});

cljs.core.js__GT_clj.cljs$lang$applyTo = (function (seq4332){
var G__4333 = cljs.core.first(seq4332);
var seq4332__$1 = cljs.core.next(seq4332);
return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__4333,seq4332__$1);
});

cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__4367 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__4367) : cljs.core.atom.call(null,G__4367));
})();
return ((function (mem){
return (function() { 
var G__4369__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__4368 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4368) : cljs.core.deref.call(null,G__4368));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__4369 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4370__i = 0, G__4370__a = new Array(arguments.length -  0);
while (G__4370__i < G__4370__a.length) {G__4370__a[G__4370__i] = arguments[G__4370__i + 0]; ++G__4370__i;}
  args = new cljs.core.IndexedSeq(G__4370__a,0);
} 
return G__4369__delegate.call(this,args);};
G__4369.cljs$lang$maxFixedArity = 0;
G__4369.cljs$lang$applyTo = (function (arglist__4371){
var args = cljs.core.seq(arglist__4371);
return G__4369__delegate(args);
});
G__4369.cljs$core$IFn$_invoke$arity$variadic = G__4369__delegate;
return G__4369;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 */
cljs.core.trampoline = (function cljs$core$trampoline(){
var G__4375 = arguments.length;
switch (G__4375) {
case 1:
return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
var argseq__3834__auto__ = (new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,1),(0)));
return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3834__auto__);

}
});

cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__4377 = ret;
f = G__4377;
continue;
} else {
return ret;
}
break;
}
});

cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){
return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
});

cljs.core.trampoline.cljs$lang$applyTo = (function (seq4372){
var G__4373 = cljs.core.first(seq4372);
var seq4372__$1 = cljs.core.next(seq4372);
return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__4373,seq4372__$1);
});

cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function cljs$core$rand(){
var G__4379 = arguments.length;
switch (G__4379) {
case 0:
return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return cljs.core.rand.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = (function (){
return cljs.core.rand.cljs$core$IFn$_invoke$arity$1((1));
});

cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});

cljs.core.rand.cljs$lang$maxFixedArity = 1;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__4382 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__4382) : Math.floor.call(null,G__4382));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__4384 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4384) : f.call(null,G__4384));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__4386 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__4386) : cljs.core.atom.call(null,G__4386));
})();
} else {
}

return cljs.core._global_hierarchy;
});
cljs.core.swap_global_hierarchy_BANG_ = (function cljs$core$swap_global_hierarchy_BANG_(){
var argseq__3822__auto__ = ((((1) < arguments.length))?(new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments,(1)),(0))):null);
return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__3822__auto__);
});

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
});

cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = (1);

cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (seq4387){
var G__4388 = cljs.core.first(seq4387);
var seq4387__$1 = cljs.core.next(seq4387);
return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__4388,seq4387__$1);
});
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function cljs$core$isa_QMARK_(){
var G__4390 = arguments.length;
switch (G__4390) {
case 2:
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (child,parent){
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__4391 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4391) : cljs.core.deref.call(null,G__4391));
})(),child,parent);
});

cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = (function (h,child,parent){
var or__3310__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
var and__3302__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3302__auto__){
var and__3302__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3302__auto____$1){
var and__3302__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3302__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__4417 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__4414 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__4414) : child.call(null,G__4414));
})(),(function (){var G__4415 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__4415) : parent.call(null,G__4415));
})());
var G__4418 = (i + (1));
ret = G__4417;
i = G__4418;
continue;
}
break;
}
} else {
return and__3302__auto____$2;
}
} else {
return and__3302__auto____$1;
}
} else {
return and__3302__auto__;
}
}
}
});

cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function cljs$core$parents(){
var G__4420 = arguments.length;
switch (G__4420) {
case 1:
return cljs.core.parents.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.parents.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = (function (tag){
return cljs.core.parents.cljs$core$IFn$_invoke$arity$2((function (){var G__4421 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4421) : cljs.core.deref.call(null,G__4421));
})(),tag);
});

cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});

cljs.core.parents.cljs$lang$maxFixedArity = 2;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function cljs$core$ancestors(){
var G__4424 = arguments.length;
switch (G__4424) {
case 1:
return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = (function (tag){
return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__4425 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4425) : cljs.core.deref.call(null,G__4425));
})(),tag);
});

cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});

cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function cljs$core$descendants(){
var G__4428 = arguments.length;
switch (G__4428) {
case 1:
return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = (function (tag){
return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__4429 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4429) : cljs.core.deref.call(null,G__4429));
})(),tag);
});

cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});

cljs.core.descendants.cljs$lang$maxFixedArity = 2;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function cljs$core$derive(){
var G__4432 = arguments.length;
switch (G__4432) {
case 2:
return cljs.core.derive.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.derive.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive,cljs.core.array_seq([tag,parent], 0));

return null;
});

cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__4433 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__4433) : targets.call(null,G__4433));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__4434 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__4434) : sources.call(null,G__4434));
})()));
});})(tp,td,ta))
;
var or__3310__auto__ = ((cljs.core.contains_QMARK_((function (){var G__4438 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__4438) : tp.call(null,G__4438));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__4439 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__4439) : ta.call(null,G__4439));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__4440 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__4440) : ta.call(null,G__4440));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return h;
}
});

cljs.core.derive.cljs$lang$maxFixedArity = 3;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function cljs$core$underive(){
var G__4446 = arguments.length;
switch (G__4446) {
case 2:
return cljs.core.underive.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.underive.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive,cljs.core.array_seq([tag,parent], 0));

return null;
});

cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__4447 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__4447) : parentMap.call(null,G__4447));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__4448 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__4448) : parentMap.call(null,G__4448));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__4442_SHARP_){
return cljs.core.cons(cljs.core.first(p1__4442_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__4442_SHARP_),cljs.core.second(p1__4442_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__4449 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__4449) : parentMap.call(null,G__4449));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__4443_SHARP_,p2__4444_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__4443_SHARP_,p2__4444_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});

cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__4453 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4453) : cljs.core.deref.call(null,G__4453));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__4454 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4454) : cljs.core.deref.call(null,G__4454));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__4470 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4470) : cljs.core.deref.call(null,G__4470));
})().call(null,x);
var or__3310__auto__ = (cljs.core.truth_((function (){var and__3302__auto__ = xprefs;
if(cljs.core.truth_(and__3302__auto__)){
var G__4472 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__4472) : xprefs.call(null,G__4472));
} else {
return and__3302__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__4473 = cljs.core.rest(ps);
ps = G__4473;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3310__auto____$1)){
return or__3310__auto____$1;
} else {
var or__3310__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__4474 = cljs.core.rest(ps);
ps = G__4474;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3310__auto____$2)){
return or__3310__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__3310__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3310__auto__)){
return or__3310__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__4488){
var vec__4489 = p__4488;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4489,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4489,(1),null);
var e = vec__4489;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__4490 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4490) : cljs.core.deref.call(null,G__4490));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3310__auto__ = (be == null);
if(or__3310__auto__){
return or__3310__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__4491 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4491) : cljs.core.deref.call(null,G__4491));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__4492 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4492) : cljs.core.deref.call(null,G__4492));
})(),(function (){var G__4493 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4493) : cljs.core.deref.call(null,G__4493));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj4495 = {};
return obj4495;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._reset[(function (){var G__4499 = x__3574__auto__;
return goog.typeOf(G__4499);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._reset["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._add_method[(function (){var G__4503 = x__3574__auto__;
return goog.typeOf(G__4503);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._add_method["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._remove_method[(function (){var G__4507 = x__3574__auto__;
return goog.typeOf(G__4507);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._prefer_method[(function (){var G__4511 = x__3574__auto__;
return goog.typeOf(G__4511);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._get_method[(function (){var G__4515 = x__3574__auto__;
return goog.typeOf(G__4515);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._get_method["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._methods[(function (){var G__4519 = x__3574__auto__;
return goog.typeOf(G__4519);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._methods["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._prefers[(function (){var G__4523 = x__3574__auto__;
return goog.typeOf(G__4523);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._prefers["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core._default_dispatch_val = (function cljs$core$_default_dispatch_val(mf){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._default_dispatch_val[(function (){var G__4527 = x__3574__auto__;
return goog.typeOf(G__4527);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._default_dispatch_val["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val",mf);
}
}
})().call(null,mf);
}
});

cljs.core._dispatch_fn = (function cljs$core$_dispatch_fn(mf){
if((function (){var and__3302__auto__ = mf;
if(and__3302__auto__){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
} else {
return and__3302__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
} else {
var x__3574__auto__ = (((mf == null))?null:mf);
return (function (){var or__3310__auto__ = (cljs.core._dispatch_fn[(function (){var G__4531 = x__3574__auto__;
return goog.typeOf(G__4531);
})()]);
if(or__3310__auto__){
return or__3310__auto__;
} else {
var or__3310__auto____$1 = (cljs.core._dispatch_fn["_"]);
if(or__3310__auto____$1){
return or__3310__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.call = (function() {
var G__5380 = null;
var G__5380__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__5380__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4533 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__4533) : self__.dispatch_fn.call(null,G__4533));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4534 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__4534) : target_fn.call(null,G__4534));
});
var G__5380__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4535 = a;
var G__4536 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__4535,G__4536) : self__.dispatch_fn.call(null,G__4535,G__4536));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4537 = a;
var G__4538 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__4537,G__4538) : target_fn.call(null,G__4537,G__4538));
});
var G__5380__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4539 = a;
var G__4540 = b;
var G__4541 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__4539,G__4540,G__4541) : self__.dispatch_fn.call(null,G__4539,G__4540,G__4541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4542 = a;
var G__4543 = b;
var G__4544 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__4542,G__4543,G__4544) : target_fn.call(null,G__4542,G__4543,G__4544));
});
var G__5380__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4545 = a;
var G__4546 = b;
var G__4547 = c;
var G__4548 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__4545,G__4546,G__4547,G__4548) : self__.dispatch_fn.call(null,G__4545,G__4546,G__4547,G__4548));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4549 = a;
var G__4550 = b;
var G__4551 = c;
var G__4552 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__4549,G__4550,G__4551,G__4552) : target_fn.call(null,G__4549,G__4550,G__4551,G__4552));
});
var G__5380__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4553 = a;
var G__4554 = b;
var G__4555 = c;
var G__4556 = d;
var G__4557 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__4553,G__4554,G__4555,G__4556,G__4557) : self__.dispatch_fn.call(null,G__4553,G__4554,G__4555,G__4556,G__4557));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4558 = a;
var G__4559 = b;
var G__4560 = c;
var G__4561 = d;
var G__4562 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__4558,G__4559,G__4560,G__4561,G__4562) : target_fn.call(null,G__4558,G__4559,G__4560,G__4561,G__4562));
});
var G__5380__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4563 = a;
var G__4564 = b;
var G__4565 = c;
var G__4566 = d;
var G__4567 = e;
var G__4568 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__4563,G__4564,G__4565,G__4566,G__4567,G__4568) : self__.dispatch_fn.call(null,G__4563,G__4564,G__4565,G__4566,G__4567,G__4568));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4569 = a;
var G__4570 = b;
var G__4571 = c;
var G__4572 = d;
var G__4573 = e;
var G__4574 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__4569,G__4570,G__4571,G__4572,G__4573,G__4574) : target_fn.call(null,G__4569,G__4570,G__4571,G__4572,G__4573,G__4574));
});
var G__5380__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4575 = a;
var G__4576 = b;
var G__4577 = c;
var G__4578 = d;
var G__4579 = e;
var G__4580 = f;
var G__4581 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__4575,G__4576,G__4577,G__4578,G__4579,G__4580,G__4581) : self__.dispatch_fn.call(null,G__4575,G__4576,G__4577,G__4578,G__4579,G__4580,G__4581));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4582 = a;
var G__4583 = b;
var G__4584 = c;
var G__4585 = d;
var G__4586 = e;
var G__4587 = f;
var G__4588 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__4582,G__4583,G__4584,G__4585,G__4586,G__4587,G__4588) : target_fn.call(null,G__4582,G__4583,G__4584,G__4585,G__4586,G__4587,G__4588));
});
var G__5380__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4589 = a;
var G__4590 = b;
var G__4591 = c;
var G__4592 = d;
var G__4593 = e;
var G__4594 = f;
var G__4595 = g;
var G__4596 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__4589,G__4590,G__4591,G__4592,G__4593,G__4594,G__4595,G__4596) : self__.dispatch_fn.call(null,G__4589,G__4590,G__4591,G__4592,G__4593,G__4594,G__4595,G__4596));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4597 = a;
var G__4598 = b;
var G__4599 = c;
var G__4600 = d;
var G__4601 = e;
var G__4602 = f;
var G__4603 = g;
var G__4604 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__4597,G__4598,G__4599,G__4600,G__4601,G__4602,G__4603,G__4604) : target_fn.call(null,G__4597,G__4598,G__4599,G__4600,G__4601,G__4602,G__4603,G__4604));
});
var G__5380__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4605 = a;
var G__4606 = b;
var G__4607 = c;
var G__4608 = d;
var G__4609 = e;
var G__4610 = f;
var G__4611 = g;
var G__4612 = h;
var G__4613 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__4605,G__4606,G__4607,G__4608,G__4609,G__4610,G__4611,G__4612,G__4613) : self__.dispatch_fn.call(null,G__4605,G__4606,G__4607,G__4608,G__4609,G__4610,G__4611,G__4612,G__4613));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4614 = a;
var G__4615 = b;
var G__4616 = c;
var G__4617 = d;
var G__4618 = e;
var G__4619 = f;
var G__4620 = g;
var G__4621 = h;
var G__4622 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__4614,G__4615,G__4616,G__4617,G__4618,G__4619,G__4620,G__4621,G__4622) : target_fn.call(null,G__4614,G__4615,G__4616,G__4617,G__4618,G__4619,G__4620,G__4621,G__4622));
});
var G__5380__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4623 = a;
var G__4624 = b;
var G__4625 = c;
var G__4626 = d;
var G__4627 = e;
var G__4628 = f;
var G__4629 = g;
var G__4630 = h;
var G__4631 = i;
var G__4632 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__4623,G__4624,G__4625,G__4626,G__4627,G__4628,G__4629,G__4630,G__4631,G__4632) : self__.dispatch_fn.call(null,G__4623,G__4624,G__4625,G__4626,G__4627,G__4628,G__4629,G__4630,G__4631,G__4632));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4633 = a;
var G__4634 = b;
var G__4635 = c;
var G__4636 = d;
var G__4637 = e;
var G__4638 = f;
var G__4639 = g;
var G__4640 = h;
var G__4641 = i;
var G__4642 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__4633,G__4634,G__4635,G__4636,G__4637,G__4638,G__4639,G__4640,G__4641,G__4642) : target_fn.call(null,G__4633,G__4634,G__4635,G__4636,G__4637,G__4638,G__4639,G__4640,G__4641,G__4642));
});
var G__5380__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4643 = a;
var G__4644 = b;
var G__4645 = c;
var G__4646 = d;
var G__4647 = e;
var G__4648 = f;
var G__4649 = g;
var G__4650 = h;
var G__4651 = i;
var G__4652 = j;
var G__4653 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__4643,G__4644,G__4645,G__4646,G__4647,G__4648,G__4649,G__4650,G__4651,G__4652,G__4653) : self__.dispatch_fn.call(null,G__4643,G__4644,G__4645,G__4646,G__4647,G__4648,G__4649,G__4650,G__4651,G__4652,G__4653));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4654 = a;
var G__4655 = b;
var G__4656 = c;
var G__4657 = d;
var G__4658 = e;
var G__4659 = f;
var G__4660 = g;
var G__4661 = h;
var G__4662 = i;
var G__4663 = j;
var G__4664 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__4654,G__4655,G__4656,G__4657,G__4658,G__4659,G__4660,G__4661,G__4662,G__4663,G__4664) : target_fn.call(null,G__4654,G__4655,G__4656,G__4657,G__4658,G__4659,G__4660,G__4661,G__4662,G__4663,G__4664));
});
var G__5380__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4665 = a;
var G__4666 = b;
var G__4667 = c;
var G__4668 = d;
var G__4669 = e;
var G__4670 = f;
var G__4671 = g;
var G__4672 = h;
var G__4673 = i;
var G__4674 = j;
var G__4675 = k;
var G__4676 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__4665,G__4666,G__4667,G__4668,G__4669,G__4670,G__4671,G__4672,G__4673,G__4674,G__4675,G__4676) : self__.dispatch_fn.call(null,G__4665,G__4666,G__4667,G__4668,G__4669,G__4670,G__4671,G__4672,G__4673,G__4674,G__4675,G__4676));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4677 = a;
var G__4678 = b;
var G__4679 = c;
var G__4680 = d;
var G__4681 = e;
var G__4682 = f;
var G__4683 = g;
var G__4684 = h;
var G__4685 = i;
var G__4686 = j;
var G__4687 = k;
var G__4688 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__4677,G__4678,G__4679,G__4680,G__4681,G__4682,G__4683,G__4684,G__4685,G__4686,G__4687,G__4688) : target_fn.call(null,G__4677,G__4678,G__4679,G__4680,G__4681,G__4682,G__4683,G__4684,G__4685,G__4686,G__4687,G__4688));
});
var G__5380__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4689 = a;
var G__4690 = b;
var G__4691 = c;
var G__4692 = d;
var G__4693 = e;
var G__4694 = f;
var G__4695 = g;
var G__4696 = h;
var G__4697 = i;
var G__4698 = j;
var G__4699 = k;
var G__4700 = l;
var G__4701 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__4689,G__4690,G__4691,G__4692,G__4693,G__4694,G__4695,G__4696,G__4697,G__4698,G__4699,G__4700,G__4701) : self__.dispatch_fn.call(null,G__4689,G__4690,G__4691,G__4692,G__4693,G__4694,G__4695,G__4696,G__4697,G__4698,G__4699,G__4700,G__4701));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4702 = a;
var G__4703 = b;
var G__4704 = c;
var G__4705 = d;
var G__4706 = e;
var G__4707 = f;
var G__4708 = g;
var G__4709 = h;
var G__4710 = i;
var G__4711 = j;
var G__4712 = k;
var G__4713 = l;
var G__4714 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__4702,G__4703,G__4704,G__4705,G__4706,G__4707,G__4708,G__4709,G__4710,G__4711,G__4712,G__4713,G__4714) : target_fn.call(null,G__4702,G__4703,G__4704,G__4705,G__4706,G__4707,G__4708,G__4709,G__4710,G__4711,G__4712,G__4713,G__4714));
});
var G__5380__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4715 = a;
var G__4716 = b;
var G__4717 = c;
var G__4718 = d;
var G__4719 = e;
var G__4720 = f;
var G__4721 = g;
var G__4722 = h;
var G__4723 = i;
var G__4724 = j;
var G__4725 = k;
var G__4726 = l;
var G__4727 = m;
var G__4728 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__4715,G__4716,G__4717,G__4718,G__4719,G__4720,G__4721,G__4722,G__4723,G__4724,G__4725,G__4726,G__4727,G__4728) : self__.dispatch_fn.call(null,G__4715,G__4716,G__4717,G__4718,G__4719,G__4720,G__4721,G__4722,G__4723,G__4724,G__4725,G__4726,G__4727,G__4728));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4729 = a;
var G__4730 = b;
var G__4731 = c;
var G__4732 = d;
var G__4733 = e;
var G__4734 = f;
var G__4735 = g;
var G__4736 = h;
var G__4737 = i;
var G__4738 = j;
var G__4739 = k;
var G__4740 = l;
var G__4741 = m;
var G__4742 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__4729,G__4730,G__4731,G__4732,G__4733,G__4734,G__4735,G__4736,G__4737,G__4738,G__4739,G__4740,G__4741,G__4742) : target_fn.call(null,G__4729,G__4730,G__4731,G__4732,G__4733,G__4734,G__4735,G__4736,G__4737,G__4738,G__4739,G__4740,G__4741,G__4742));
});
var G__5380__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4743 = a;
var G__4744 = b;
var G__4745 = c;
var G__4746 = d;
var G__4747 = e;
var G__4748 = f;
var G__4749 = g;
var G__4750 = h;
var G__4751 = i;
var G__4752 = j;
var G__4753 = k;
var G__4754 = l;
var G__4755 = m;
var G__4756 = n;
var G__4757 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__4743,G__4744,G__4745,G__4746,G__4747,G__4748,G__4749,G__4750,G__4751,G__4752,G__4753,G__4754,G__4755,G__4756,G__4757) : self__.dispatch_fn.call(null,G__4743,G__4744,G__4745,G__4746,G__4747,G__4748,G__4749,G__4750,G__4751,G__4752,G__4753,G__4754,G__4755,G__4756,G__4757));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4758 = a;
var G__4759 = b;
var G__4760 = c;
var G__4761 = d;
var G__4762 = e;
var G__4763 = f;
var G__4764 = g;
var G__4765 = h;
var G__4766 = i;
var G__4767 = j;
var G__4768 = k;
var G__4769 = l;
var G__4770 = m;
var G__4771 = n;
var G__4772 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__4758,G__4759,G__4760,G__4761,G__4762,G__4763,G__4764,G__4765,G__4766,G__4767,G__4768,G__4769,G__4770,G__4771,G__4772) : target_fn.call(null,G__4758,G__4759,G__4760,G__4761,G__4762,G__4763,G__4764,G__4765,G__4766,G__4767,G__4768,G__4769,G__4770,G__4771,G__4772));
});
var G__5380__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4773 = a;
var G__4774 = b;
var G__4775 = c;
var G__4776 = d;
var G__4777 = e;
var G__4778 = f;
var G__4779 = g;
var G__4780 = h;
var G__4781 = i;
var G__4782 = j;
var G__4783 = k;
var G__4784 = l;
var G__4785 = m;
var G__4786 = n;
var G__4787 = o;
var G__4788 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__4773,G__4774,G__4775,G__4776,G__4777,G__4778,G__4779,G__4780,G__4781,G__4782,G__4783,G__4784,G__4785,G__4786,G__4787,G__4788) : self__.dispatch_fn.call(null,G__4773,G__4774,G__4775,G__4776,G__4777,G__4778,G__4779,G__4780,G__4781,G__4782,G__4783,G__4784,G__4785,G__4786,G__4787,G__4788));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4789 = a;
var G__4790 = b;
var G__4791 = c;
var G__4792 = d;
var G__4793 = e;
var G__4794 = f;
var G__4795 = g;
var G__4796 = h;
var G__4797 = i;
var G__4798 = j;
var G__4799 = k;
var G__4800 = l;
var G__4801 = m;
var G__4802 = n;
var G__4803 = o;
var G__4804 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__4789,G__4790,G__4791,G__4792,G__4793,G__4794,G__4795,G__4796,G__4797,G__4798,G__4799,G__4800,G__4801,G__4802,G__4803,G__4804) : target_fn.call(null,G__4789,G__4790,G__4791,G__4792,G__4793,G__4794,G__4795,G__4796,G__4797,G__4798,G__4799,G__4800,G__4801,G__4802,G__4803,G__4804));
});
var G__5380__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4805 = a;
var G__4806 = b;
var G__4807 = c;
var G__4808 = d;
var G__4809 = e;
var G__4810 = f;
var G__4811 = g;
var G__4812 = h;
var G__4813 = i;
var G__4814 = j;
var G__4815 = k;
var G__4816 = l;
var G__4817 = m;
var G__4818 = n;
var G__4819 = o;
var G__4820 = p;
var G__4821 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__4805,G__4806,G__4807,G__4808,G__4809,G__4810,G__4811,G__4812,G__4813,G__4814,G__4815,G__4816,G__4817,G__4818,G__4819,G__4820,G__4821) : self__.dispatch_fn.call(null,G__4805,G__4806,G__4807,G__4808,G__4809,G__4810,G__4811,G__4812,G__4813,G__4814,G__4815,G__4816,G__4817,G__4818,G__4819,G__4820,G__4821));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4822 = a;
var G__4823 = b;
var G__4824 = c;
var G__4825 = d;
var G__4826 = e;
var G__4827 = f;
var G__4828 = g;
var G__4829 = h;
var G__4830 = i;
var G__4831 = j;
var G__4832 = k;
var G__4833 = l;
var G__4834 = m;
var G__4835 = n;
var G__4836 = o;
var G__4837 = p;
var G__4838 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__4822,G__4823,G__4824,G__4825,G__4826,G__4827,G__4828,G__4829,G__4830,G__4831,G__4832,G__4833,G__4834,G__4835,G__4836,G__4837,G__4838) : target_fn.call(null,G__4822,G__4823,G__4824,G__4825,G__4826,G__4827,G__4828,G__4829,G__4830,G__4831,G__4832,G__4833,G__4834,G__4835,G__4836,G__4837,G__4838));
});
var G__5380__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4839 = a;
var G__4840 = b;
var G__4841 = c;
var G__4842 = d;
var G__4843 = e;
var G__4844 = f;
var G__4845 = g;
var G__4846 = h;
var G__4847 = i;
var G__4848 = j;
var G__4849 = k;
var G__4850 = l;
var G__4851 = m;
var G__4852 = n;
var G__4853 = o;
var G__4854 = p;
var G__4855 = q;
var G__4856 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__4839,G__4840,G__4841,G__4842,G__4843,G__4844,G__4845,G__4846,G__4847,G__4848,G__4849,G__4850,G__4851,G__4852,G__4853,G__4854,G__4855,G__4856) : self__.dispatch_fn.call(null,G__4839,G__4840,G__4841,G__4842,G__4843,G__4844,G__4845,G__4846,G__4847,G__4848,G__4849,G__4850,G__4851,G__4852,G__4853,G__4854,G__4855,G__4856));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4857 = a;
var G__4858 = b;
var G__4859 = c;
var G__4860 = d;
var G__4861 = e;
var G__4862 = f;
var G__4863 = g;
var G__4864 = h;
var G__4865 = i;
var G__4866 = j;
var G__4867 = k;
var G__4868 = l;
var G__4869 = m;
var G__4870 = n;
var G__4871 = o;
var G__4872 = p;
var G__4873 = q;
var G__4874 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__4857,G__4858,G__4859,G__4860,G__4861,G__4862,G__4863,G__4864,G__4865,G__4866,G__4867,G__4868,G__4869,G__4870,G__4871,G__4872,G__4873,G__4874) : target_fn.call(null,G__4857,G__4858,G__4859,G__4860,G__4861,G__4862,G__4863,G__4864,G__4865,G__4866,G__4867,G__4868,G__4869,G__4870,G__4871,G__4872,G__4873,G__4874));
});
var G__5380__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4875 = a;
var G__4876 = b;
var G__4877 = c;
var G__4878 = d;
var G__4879 = e;
var G__4880 = f;
var G__4881 = g;
var G__4882 = h;
var G__4883 = i;
var G__4884 = j;
var G__4885 = k;
var G__4886 = l;
var G__4887 = m;
var G__4888 = n;
var G__4889 = o;
var G__4890 = p;
var G__4891 = q;
var G__4892 = r;
var G__4893 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__4875,G__4876,G__4877,G__4878,G__4879,G__4880,G__4881,G__4882,G__4883,G__4884,G__4885,G__4886,G__4887,G__4888,G__4889,G__4890,G__4891,G__4892,G__4893) : self__.dispatch_fn.call(null,G__4875,G__4876,G__4877,G__4878,G__4879,G__4880,G__4881,G__4882,G__4883,G__4884,G__4885,G__4886,G__4887,G__4888,G__4889,G__4890,G__4891,G__4892,G__4893));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4894 = a;
var G__4895 = b;
var G__4896 = c;
var G__4897 = d;
var G__4898 = e;
var G__4899 = f;
var G__4900 = g;
var G__4901 = h;
var G__4902 = i;
var G__4903 = j;
var G__4904 = k;
var G__4905 = l;
var G__4906 = m;
var G__4907 = n;
var G__4908 = o;
var G__4909 = p;
var G__4910 = q;
var G__4911 = r;
var G__4912 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__4894,G__4895,G__4896,G__4897,G__4898,G__4899,G__4900,G__4901,G__4902,G__4903,G__4904,G__4905,G__4906,G__4907,G__4908,G__4909,G__4910,G__4911,G__4912) : target_fn.call(null,G__4894,G__4895,G__4896,G__4897,G__4898,G__4899,G__4900,G__4901,G__4902,G__4903,G__4904,G__4905,G__4906,G__4907,G__4908,G__4909,G__4910,G__4911,G__4912));
});
var G__5380__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__4913 = a;
var G__4914 = b;
var G__4915 = c;
var G__4916 = d;
var G__4917 = e;
var G__4918 = f;
var G__4919 = g;
var G__4920 = h;
var G__4921 = i;
var G__4922 = j;
var G__4923 = k;
var G__4924 = l;
var G__4925 = m;
var G__4926 = n;
var G__4927 = o;
var G__4928 = p;
var G__4929 = q;
var G__4930 = r;
var G__4931 = s;
var G__4932 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__4913,G__4914,G__4915,G__4916,G__4917,G__4918,G__4919,G__4920,G__4921,G__4922,G__4923,G__4924,G__4925,G__4926,G__4927,G__4928,G__4929,G__4930,G__4931,G__4932) : self__.dispatch_fn.call(null,G__4913,G__4914,G__4915,G__4916,G__4917,G__4918,G__4919,G__4920,G__4921,G__4922,G__4923,G__4924,G__4925,G__4926,G__4927,G__4928,G__4929,G__4930,G__4931,G__4932));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4933 = a;
var G__4934 = b;
var G__4935 = c;
var G__4936 = d;
var G__4937 = e;
var G__4938 = f;
var G__4939 = g;
var G__4940 = h;
var G__4941 = i;
var G__4942 = j;
var G__4943 = k;
var G__4944 = l;
var G__4945 = m;
var G__4946 = n;
var G__4947 = o;
var G__4948 = p;
var G__4949 = q;
var G__4950 = r;
var G__4951 = s;
var G__4952 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__4933,G__4934,G__4935,G__4936,G__4937,G__4938,G__4939,G__4940,G__4941,G__4942,G__4943,G__4944,G__4945,G__4946,G__4947,G__4948,G__4949,G__4950,G__4951,G__4952) : target_fn.call(null,G__4933,G__4934,G__4935,G__4936,G__4937,G__4938,G__4939,G__4940,G__4941,G__4942,G__4943,G__4944,G__4945,G__4946,G__4947,G__4948,G__4949,G__4950,G__4951,G__4952));
});
var G__5380__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__5380 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5380__1.call(this,self__);
case 2:
return G__5380__2.call(this,self__,a);
case 3:
return G__5380__3.call(this,self__,a,b);
case 4:
return G__5380__4.call(this,self__,a,b,c);
case 5:
return G__5380__5.call(this,self__,a,b,c,d);
case 6:
return G__5380__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5380__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5380__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5380__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5380__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5380__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5380__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5380__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5380__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5380__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5380__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5380__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5380__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5380__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5380__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5380__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5380__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5380.cljs$core$IFn$_invoke$arity$1 = G__5380__1;
G__5380.cljs$core$IFn$_invoke$arity$2 = G__5380__2;
G__5380.cljs$core$IFn$_invoke$arity$3 = G__5380__3;
G__5380.cljs$core$IFn$_invoke$arity$4 = G__5380__4;
G__5380.cljs$core$IFn$_invoke$arity$5 = G__5380__5;
G__5380.cljs$core$IFn$_invoke$arity$6 = G__5380__6;
G__5380.cljs$core$IFn$_invoke$arity$7 = G__5380__7;
G__5380.cljs$core$IFn$_invoke$arity$8 = G__5380__8;
G__5380.cljs$core$IFn$_invoke$arity$9 = G__5380__9;
G__5380.cljs$core$IFn$_invoke$arity$10 = G__5380__10;
G__5380.cljs$core$IFn$_invoke$arity$11 = G__5380__11;
G__5380.cljs$core$IFn$_invoke$arity$12 = G__5380__12;
G__5380.cljs$core$IFn$_invoke$arity$13 = G__5380__13;
G__5380.cljs$core$IFn$_invoke$arity$14 = G__5380__14;
G__5380.cljs$core$IFn$_invoke$arity$15 = G__5380__15;
G__5380.cljs$core$IFn$_invoke$arity$16 = G__5380__16;
G__5380.cljs$core$IFn$_invoke$arity$17 = G__5380__17;
G__5380.cljs$core$IFn$_invoke$arity$18 = G__5380__18;
G__5380.cljs$core$IFn$_invoke$arity$19 = G__5380__19;
G__5380.cljs$core$IFn$_invoke$arity$20 = G__5380__20;
G__5380.cljs$core$IFn$_invoke$arity$21 = G__5380__21;
G__5380.cljs$core$IFn$_invoke$arity$22 = G__5380__22;
return G__5380;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args4532){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4532)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__4953 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__4953) : self__.dispatch_fn.call(null,G__4953));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4954 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__4954) : target_fn.call(null,G__4954));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__4955 = a;
var G__4956 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__4955,G__4956) : self__.dispatch_fn.call(null,G__4955,G__4956));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4957 = a;
var G__4958 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__4957,G__4958) : target_fn.call(null,G__4957,G__4958));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__4959 = a;
var G__4960 = b;
var G__4961 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__4959,G__4960,G__4961) : self__.dispatch_fn.call(null,G__4959,G__4960,G__4961));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4962 = a;
var G__4963 = b;
var G__4964 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__4962,G__4963,G__4964) : target_fn.call(null,G__4962,G__4963,G__4964));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__4965 = a;
var G__4966 = b;
var G__4967 = c;
var G__4968 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__4965,G__4966,G__4967,G__4968) : self__.dispatch_fn.call(null,G__4965,G__4966,G__4967,G__4968));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4969 = a;
var G__4970 = b;
var G__4971 = c;
var G__4972 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__4969,G__4970,G__4971,G__4972) : target_fn.call(null,G__4969,G__4970,G__4971,G__4972));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__4973 = a;
var G__4974 = b;
var G__4975 = c;
var G__4976 = d;
var G__4977 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__4973,G__4974,G__4975,G__4976,G__4977) : self__.dispatch_fn.call(null,G__4973,G__4974,G__4975,G__4976,G__4977));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4978 = a;
var G__4979 = b;
var G__4980 = c;
var G__4981 = d;
var G__4982 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__4978,G__4979,G__4980,G__4981,G__4982) : target_fn.call(null,G__4978,G__4979,G__4980,G__4981,G__4982));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__4983 = a;
var G__4984 = b;
var G__4985 = c;
var G__4986 = d;
var G__4987 = e;
var G__4988 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__4983,G__4984,G__4985,G__4986,G__4987,G__4988) : self__.dispatch_fn.call(null,G__4983,G__4984,G__4985,G__4986,G__4987,G__4988));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__4989 = a;
var G__4990 = b;
var G__4991 = c;
var G__4992 = d;
var G__4993 = e;
var G__4994 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__4989,G__4990,G__4991,G__4992,G__4993,G__4994) : target_fn.call(null,G__4989,G__4990,G__4991,G__4992,G__4993,G__4994));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__4995 = a;
var G__4996 = b;
var G__4997 = c;
var G__4998 = d;
var G__4999 = e;
var G__5000 = f;
var G__5001 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__4995,G__4996,G__4997,G__4998,G__4999,G__5000,G__5001) : self__.dispatch_fn.call(null,G__4995,G__4996,G__4997,G__4998,G__4999,G__5000,G__5001));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5002 = a;
var G__5003 = b;
var G__5004 = c;
var G__5005 = d;
var G__5006 = e;
var G__5007 = f;
var G__5008 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__5002,G__5003,G__5004,G__5005,G__5006,G__5007,G__5008) : target_fn.call(null,G__5002,G__5003,G__5004,G__5005,G__5006,G__5007,G__5008));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5009 = a;
var G__5010 = b;
var G__5011 = c;
var G__5012 = d;
var G__5013 = e;
var G__5014 = f;
var G__5015 = g;
var G__5016 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__5009,G__5010,G__5011,G__5012,G__5013,G__5014,G__5015,G__5016) : self__.dispatch_fn.call(null,G__5009,G__5010,G__5011,G__5012,G__5013,G__5014,G__5015,G__5016));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5017 = a;
var G__5018 = b;
var G__5019 = c;
var G__5020 = d;
var G__5021 = e;
var G__5022 = f;
var G__5023 = g;
var G__5024 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__5017,G__5018,G__5019,G__5020,G__5021,G__5022,G__5023,G__5024) : target_fn.call(null,G__5017,G__5018,G__5019,G__5020,G__5021,G__5022,G__5023,G__5024));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5025 = a;
var G__5026 = b;
var G__5027 = c;
var G__5028 = d;
var G__5029 = e;
var G__5030 = f;
var G__5031 = g;
var G__5032 = h;
var G__5033 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__5025,G__5026,G__5027,G__5028,G__5029,G__5030,G__5031,G__5032,G__5033) : self__.dispatch_fn.call(null,G__5025,G__5026,G__5027,G__5028,G__5029,G__5030,G__5031,G__5032,G__5033));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5034 = a;
var G__5035 = b;
var G__5036 = c;
var G__5037 = d;
var G__5038 = e;
var G__5039 = f;
var G__5040 = g;
var G__5041 = h;
var G__5042 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__5034,G__5035,G__5036,G__5037,G__5038,G__5039,G__5040,G__5041,G__5042) : target_fn.call(null,G__5034,G__5035,G__5036,G__5037,G__5038,G__5039,G__5040,G__5041,G__5042));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5043 = a;
var G__5044 = b;
var G__5045 = c;
var G__5046 = d;
var G__5047 = e;
var G__5048 = f;
var G__5049 = g;
var G__5050 = h;
var G__5051 = i;
var G__5052 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__5043,G__5044,G__5045,G__5046,G__5047,G__5048,G__5049,G__5050,G__5051,G__5052) : self__.dispatch_fn.call(null,G__5043,G__5044,G__5045,G__5046,G__5047,G__5048,G__5049,G__5050,G__5051,G__5052));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5053 = a;
var G__5054 = b;
var G__5055 = c;
var G__5056 = d;
var G__5057 = e;
var G__5058 = f;
var G__5059 = g;
var G__5060 = h;
var G__5061 = i;
var G__5062 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__5053,G__5054,G__5055,G__5056,G__5057,G__5058,G__5059,G__5060,G__5061,G__5062) : target_fn.call(null,G__5053,G__5054,G__5055,G__5056,G__5057,G__5058,G__5059,G__5060,G__5061,G__5062));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5063 = a;
var G__5064 = b;
var G__5065 = c;
var G__5066 = d;
var G__5067 = e;
var G__5068 = f;
var G__5069 = g;
var G__5070 = h;
var G__5071 = i;
var G__5072 = j;
var G__5073 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__5063,G__5064,G__5065,G__5066,G__5067,G__5068,G__5069,G__5070,G__5071,G__5072,G__5073) : self__.dispatch_fn.call(null,G__5063,G__5064,G__5065,G__5066,G__5067,G__5068,G__5069,G__5070,G__5071,G__5072,G__5073));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5074 = a;
var G__5075 = b;
var G__5076 = c;
var G__5077 = d;
var G__5078 = e;
var G__5079 = f;
var G__5080 = g;
var G__5081 = h;
var G__5082 = i;
var G__5083 = j;
var G__5084 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__5074,G__5075,G__5076,G__5077,G__5078,G__5079,G__5080,G__5081,G__5082,G__5083,G__5084) : target_fn.call(null,G__5074,G__5075,G__5076,G__5077,G__5078,G__5079,G__5080,G__5081,G__5082,G__5083,G__5084));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5085 = a;
var G__5086 = b;
var G__5087 = c;
var G__5088 = d;
var G__5089 = e;
var G__5090 = f;
var G__5091 = g;
var G__5092 = h;
var G__5093 = i;
var G__5094 = j;
var G__5095 = k;
var G__5096 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__5085,G__5086,G__5087,G__5088,G__5089,G__5090,G__5091,G__5092,G__5093,G__5094,G__5095,G__5096) : self__.dispatch_fn.call(null,G__5085,G__5086,G__5087,G__5088,G__5089,G__5090,G__5091,G__5092,G__5093,G__5094,G__5095,G__5096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5097 = a;
var G__5098 = b;
var G__5099 = c;
var G__5100 = d;
var G__5101 = e;
var G__5102 = f;
var G__5103 = g;
var G__5104 = h;
var G__5105 = i;
var G__5106 = j;
var G__5107 = k;
var G__5108 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__5097,G__5098,G__5099,G__5100,G__5101,G__5102,G__5103,G__5104,G__5105,G__5106,G__5107,G__5108) : target_fn.call(null,G__5097,G__5098,G__5099,G__5100,G__5101,G__5102,G__5103,G__5104,G__5105,G__5106,G__5107,G__5108));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5109 = a;
var G__5110 = b;
var G__5111 = c;
var G__5112 = d;
var G__5113 = e;
var G__5114 = f;
var G__5115 = g;
var G__5116 = h;
var G__5117 = i;
var G__5118 = j;
var G__5119 = k;
var G__5120 = l;
var G__5121 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__5109,G__5110,G__5111,G__5112,G__5113,G__5114,G__5115,G__5116,G__5117,G__5118,G__5119,G__5120,G__5121) : self__.dispatch_fn.call(null,G__5109,G__5110,G__5111,G__5112,G__5113,G__5114,G__5115,G__5116,G__5117,G__5118,G__5119,G__5120,G__5121));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5122 = a;
var G__5123 = b;
var G__5124 = c;
var G__5125 = d;
var G__5126 = e;
var G__5127 = f;
var G__5128 = g;
var G__5129 = h;
var G__5130 = i;
var G__5131 = j;
var G__5132 = k;
var G__5133 = l;
var G__5134 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__5122,G__5123,G__5124,G__5125,G__5126,G__5127,G__5128,G__5129,G__5130,G__5131,G__5132,G__5133,G__5134) : target_fn.call(null,G__5122,G__5123,G__5124,G__5125,G__5126,G__5127,G__5128,G__5129,G__5130,G__5131,G__5132,G__5133,G__5134));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5135 = a;
var G__5136 = b;
var G__5137 = c;
var G__5138 = d;
var G__5139 = e;
var G__5140 = f;
var G__5141 = g;
var G__5142 = h;
var G__5143 = i;
var G__5144 = j;
var G__5145 = k;
var G__5146 = l;
var G__5147 = m;
var G__5148 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__5135,G__5136,G__5137,G__5138,G__5139,G__5140,G__5141,G__5142,G__5143,G__5144,G__5145,G__5146,G__5147,G__5148) : self__.dispatch_fn.call(null,G__5135,G__5136,G__5137,G__5138,G__5139,G__5140,G__5141,G__5142,G__5143,G__5144,G__5145,G__5146,G__5147,G__5148));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5149 = a;
var G__5150 = b;
var G__5151 = c;
var G__5152 = d;
var G__5153 = e;
var G__5154 = f;
var G__5155 = g;
var G__5156 = h;
var G__5157 = i;
var G__5158 = j;
var G__5159 = k;
var G__5160 = l;
var G__5161 = m;
var G__5162 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__5149,G__5150,G__5151,G__5152,G__5153,G__5154,G__5155,G__5156,G__5157,G__5158,G__5159,G__5160,G__5161,G__5162) : target_fn.call(null,G__5149,G__5150,G__5151,G__5152,G__5153,G__5154,G__5155,G__5156,G__5157,G__5158,G__5159,G__5160,G__5161,G__5162));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5163 = a;
var G__5164 = b;
var G__5165 = c;
var G__5166 = d;
var G__5167 = e;
var G__5168 = f;
var G__5169 = g;
var G__5170 = h;
var G__5171 = i;
var G__5172 = j;
var G__5173 = k;
var G__5174 = l;
var G__5175 = m;
var G__5176 = n;
var G__5177 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__5163,G__5164,G__5165,G__5166,G__5167,G__5168,G__5169,G__5170,G__5171,G__5172,G__5173,G__5174,G__5175,G__5176,G__5177) : self__.dispatch_fn.call(null,G__5163,G__5164,G__5165,G__5166,G__5167,G__5168,G__5169,G__5170,G__5171,G__5172,G__5173,G__5174,G__5175,G__5176,G__5177));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5178 = a;
var G__5179 = b;
var G__5180 = c;
var G__5181 = d;
var G__5182 = e;
var G__5183 = f;
var G__5184 = g;
var G__5185 = h;
var G__5186 = i;
var G__5187 = j;
var G__5188 = k;
var G__5189 = l;
var G__5190 = m;
var G__5191 = n;
var G__5192 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__5178,G__5179,G__5180,G__5181,G__5182,G__5183,G__5184,G__5185,G__5186,G__5187,G__5188,G__5189,G__5190,G__5191,G__5192) : target_fn.call(null,G__5178,G__5179,G__5180,G__5181,G__5182,G__5183,G__5184,G__5185,G__5186,G__5187,G__5188,G__5189,G__5190,G__5191,G__5192));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5193 = a;
var G__5194 = b;
var G__5195 = c;
var G__5196 = d;
var G__5197 = e;
var G__5198 = f;
var G__5199 = g;
var G__5200 = h;
var G__5201 = i;
var G__5202 = j;
var G__5203 = k;
var G__5204 = l;
var G__5205 = m;
var G__5206 = n;
var G__5207 = o;
var G__5208 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__5193,G__5194,G__5195,G__5196,G__5197,G__5198,G__5199,G__5200,G__5201,G__5202,G__5203,G__5204,G__5205,G__5206,G__5207,G__5208) : self__.dispatch_fn.call(null,G__5193,G__5194,G__5195,G__5196,G__5197,G__5198,G__5199,G__5200,G__5201,G__5202,G__5203,G__5204,G__5205,G__5206,G__5207,G__5208));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5209 = a;
var G__5210 = b;
var G__5211 = c;
var G__5212 = d;
var G__5213 = e;
var G__5214 = f;
var G__5215 = g;
var G__5216 = h;
var G__5217 = i;
var G__5218 = j;
var G__5219 = k;
var G__5220 = l;
var G__5221 = m;
var G__5222 = n;
var G__5223 = o;
var G__5224 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__5209,G__5210,G__5211,G__5212,G__5213,G__5214,G__5215,G__5216,G__5217,G__5218,G__5219,G__5220,G__5221,G__5222,G__5223,G__5224) : target_fn.call(null,G__5209,G__5210,G__5211,G__5212,G__5213,G__5214,G__5215,G__5216,G__5217,G__5218,G__5219,G__5220,G__5221,G__5222,G__5223,G__5224));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5225 = a;
var G__5226 = b;
var G__5227 = c;
var G__5228 = d;
var G__5229 = e;
var G__5230 = f;
var G__5231 = g;
var G__5232 = h;
var G__5233 = i;
var G__5234 = j;
var G__5235 = k;
var G__5236 = l;
var G__5237 = m;
var G__5238 = n;
var G__5239 = o;
var G__5240 = p;
var G__5241 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__5225,G__5226,G__5227,G__5228,G__5229,G__5230,G__5231,G__5232,G__5233,G__5234,G__5235,G__5236,G__5237,G__5238,G__5239,G__5240,G__5241) : self__.dispatch_fn.call(null,G__5225,G__5226,G__5227,G__5228,G__5229,G__5230,G__5231,G__5232,G__5233,G__5234,G__5235,G__5236,G__5237,G__5238,G__5239,G__5240,G__5241));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5242 = a;
var G__5243 = b;
var G__5244 = c;
var G__5245 = d;
var G__5246 = e;
var G__5247 = f;
var G__5248 = g;
var G__5249 = h;
var G__5250 = i;
var G__5251 = j;
var G__5252 = k;
var G__5253 = l;
var G__5254 = m;
var G__5255 = n;
var G__5256 = o;
var G__5257 = p;
var G__5258 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__5242,G__5243,G__5244,G__5245,G__5246,G__5247,G__5248,G__5249,G__5250,G__5251,G__5252,G__5253,G__5254,G__5255,G__5256,G__5257,G__5258) : target_fn.call(null,G__5242,G__5243,G__5244,G__5245,G__5246,G__5247,G__5248,G__5249,G__5250,G__5251,G__5252,G__5253,G__5254,G__5255,G__5256,G__5257,G__5258));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5259 = a;
var G__5260 = b;
var G__5261 = c;
var G__5262 = d;
var G__5263 = e;
var G__5264 = f;
var G__5265 = g;
var G__5266 = h;
var G__5267 = i;
var G__5268 = j;
var G__5269 = k;
var G__5270 = l;
var G__5271 = m;
var G__5272 = n;
var G__5273 = o;
var G__5274 = p;
var G__5275 = q;
var G__5276 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__5259,G__5260,G__5261,G__5262,G__5263,G__5264,G__5265,G__5266,G__5267,G__5268,G__5269,G__5270,G__5271,G__5272,G__5273,G__5274,G__5275,G__5276) : self__.dispatch_fn.call(null,G__5259,G__5260,G__5261,G__5262,G__5263,G__5264,G__5265,G__5266,G__5267,G__5268,G__5269,G__5270,G__5271,G__5272,G__5273,G__5274,G__5275,G__5276));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5277 = a;
var G__5278 = b;
var G__5279 = c;
var G__5280 = d;
var G__5281 = e;
var G__5282 = f;
var G__5283 = g;
var G__5284 = h;
var G__5285 = i;
var G__5286 = j;
var G__5287 = k;
var G__5288 = l;
var G__5289 = m;
var G__5290 = n;
var G__5291 = o;
var G__5292 = p;
var G__5293 = q;
var G__5294 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__5277,G__5278,G__5279,G__5280,G__5281,G__5282,G__5283,G__5284,G__5285,G__5286,G__5287,G__5288,G__5289,G__5290,G__5291,G__5292,G__5293,G__5294) : target_fn.call(null,G__5277,G__5278,G__5279,G__5280,G__5281,G__5282,G__5283,G__5284,G__5285,G__5286,G__5287,G__5288,G__5289,G__5290,G__5291,G__5292,G__5293,G__5294));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5295 = a;
var G__5296 = b;
var G__5297 = c;
var G__5298 = d;
var G__5299 = e;
var G__5300 = f;
var G__5301 = g;
var G__5302 = h;
var G__5303 = i;
var G__5304 = j;
var G__5305 = k;
var G__5306 = l;
var G__5307 = m;
var G__5308 = n;
var G__5309 = o;
var G__5310 = p;
var G__5311 = q;
var G__5312 = r;
var G__5313 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__5295,G__5296,G__5297,G__5298,G__5299,G__5300,G__5301,G__5302,G__5303,G__5304,G__5305,G__5306,G__5307,G__5308,G__5309,G__5310,G__5311,G__5312,G__5313) : self__.dispatch_fn.call(null,G__5295,G__5296,G__5297,G__5298,G__5299,G__5300,G__5301,G__5302,G__5303,G__5304,G__5305,G__5306,G__5307,G__5308,G__5309,G__5310,G__5311,G__5312,G__5313));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5314 = a;
var G__5315 = b;
var G__5316 = c;
var G__5317 = d;
var G__5318 = e;
var G__5319 = f;
var G__5320 = g;
var G__5321 = h;
var G__5322 = i;
var G__5323 = j;
var G__5324 = k;
var G__5325 = l;
var G__5326 = m;
var G__5327 = n;
var G__5328 = o;
var G__5329 = p;
var G__5330 = q;
var G__5331 = r;
var G__5332 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__5314,G__5315,G__5316,G__5317,G__5318,G__5319,G__5320,G__5321,G__5322,G__5323,G__5324,G__5325,G__5326,G__5327,G__5328,G__5329,G__5330,G__5331,G__5332) : target_fn.call(null,G__5314,G__5315,G__5316,G__5317,G__5318,G__5319,G__5320,G__5321,G__5322,G__5323,G__5324,G__5325,G__5326,G__5327,G__5328,G__5329,G__5330,G__5331,G__5332));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5333 = a;
var G__5334 = b;
var G__5335 = c;
var G__5336 = d;
var G__5337 = e;
var G__5338 = f;
var G__5339 = g;
var G__5340 = h;
var G__5341 = i;
var G__5342 = j;
var G__5343 = k;
var G__5344 = l;
var G__5345 = m;
var G__5346 = n;
var G__5347 = o;
var G__5348 = p;
var G__5349 = q;
var G__5350 = r;
var G__5351 = s;
var G__5352 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__5333,G__5334,G__5335,G__5336,G__5337,G__5338,G__5339,G__5340,G__5341,G__5342,G__5343,G__5344,G__5345,G__5346,G__5347,G__5348,G__5349,G__5350,G__5351,G__5352) : self__.dispatch_fn.call(null,G__5333,G__5334,G__5335,G__5336,G__5337,G__5338,G__5339,G__5340,G__5341,G__5342,G__5343,G__5344,G__5345,G__5346,G__5347,G__5348,G__5349,G__5350,G__5351,G__5352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5353 = a;
var G__5354 = b;
var G__5355 = c;
var G__5356 = d;
var G__5357 = e;
var G__5358 = f;
var G__5359 = g;
var G__5360 = h;
var G__5361 = i;
var G__5362 = j;
var G__5363 = k;
var G__5364 = l;
var G__5365 = m;
var G__5366 = n;
var G__5367 = o;
var G__5368 = p;
var G__5369 = q;
var G__5370 = r;
var G__5371 = s;
var G__5372 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__5353,G__5354,G__5355,G__5356,G__5357,G__5358,G__5359,G__5360,G__5361,G__5362,G__5363,G__5364,G__5365,G__5366,G__5367,G__5368,G__5369,G__5370,G__5371,G__5372) : target_fn.call(null,G__5353,G__5354,G__5355,G__5356,G__5357,G__5358,G__5359,G__5360,G__5361,G__5362,G__5363,G__5364,G__5365,G__5366,G__5367,G__5368,G__5369,G__5370,G__5371,G__5372));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.default_dispatch_val;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__5373 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5373) : cljs.core.deref.call(null,G__5373));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__5374 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5374) : cljs.core.deref.call(null,G__5374));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.dispatch_fn;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__5376 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5376) : cljs.core.deref.call(null,G__5376));
})(),(function (){var G__5377 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5377) : cljs.core.deref.call(null,G__5377));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4402__auto__ = (function (){var G__5378 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5378) : cljs.core.deref.call(null,G__5378));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4402__auto__)){
var target_fn = temp__4402__auto__;
return target_fn;
} else {
var temp__4402__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4402__auto____$1)){
var target_fn = temp__4402__auto____$1;
return target_fn;
} else {
return (function (){var G__5379 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5379) : cljs.core.deref.call(null,G__5379));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__5375 = this$__$1;
return goog.getUid(G__5375);
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});
/**
 * Given a multimethod, return it's default-dispatch-val.
 */
cljs.core.default_dispatch_val = (function cljs$core$default_dispatch_val(multifn){
return cljs.core._default_dispatch_val(multifn);
});
/**
 * Given a multimethod, return it's dispatch-fn.
 */
cljs.core.dispatch_fn = (function cljs$core$dispatch_fn(multifn){
return cljs.core._dispatch_fn(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
this.cljs$lang$protocol_mask$partition1$ = 2048;
})
cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__5381 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__5381);
});

cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__5382 = self__.uuid;
var G__5383 = other.uuid;
return goog.array.defaultCompare(G__5382,G__5383);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__3525__auto__,writer__3526__auto__,opt__3527__auto__){
return cljs.core._write(writer__3526__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function cljs$core$ex_info(){
var G__5385 = arguments.length;
switch (G__5385) {
case 2:
return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error([cljs.core.str("Invalid arity: "),cljs.core.str(arguments.length)].join('')));

}
});

cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = (function (msg,data){
return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});

cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});

cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__5391 = x;
var G__5392 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__5391,G__5392) : pred.call(null,G__5391,G__5392));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__5393 = y;
var G__5394 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__5393,G__5394) : pred.call(null,G__5393,G__5394));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
