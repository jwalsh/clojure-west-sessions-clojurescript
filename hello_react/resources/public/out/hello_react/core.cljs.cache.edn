;; Analyzed by ClojureScript 0.0-3208
{:name hello-react.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {cljsjs.react cljsjs.react, gdom goog.dom, goog.dom goog.dom, repl clojure.browser.repl, clojure.browser.repl clojure.browser.repl}, :imports nil, :defs {conn {:name hello-react.core/conn, :file "src/hello_react/core.cljs", :line 8, :column 1, :end-line 8, :end-column 14, :test true, :meta {:file "/Users/jwalsh/sandbox/clojure-west-sessions-clojurescript/hello_react/src/hello_react/core.cljs", :line 8, :column 10, :end-line 8, :end-column 14}}, HelloComponent {:num-fields 1, :protocols #{hello-react.core/Object}, :name hello-react.core/HelloComponent, :file "src/hello_react/core.cljs", :end-column 24, :type true, :column 10, :line 11, :record false, :end-line 11, :skip-protocol-flag nil}, ->HelloComponent {:protocol-inline nil, :meta {:file "/Users/jwalsh/sandbox/clojure-west-sessions-clojurescript/hello_react/src/hello_react/core.cljs", :line 11, :column 10, :end-line 11, :end-column 24, :protocols #{hello-react.core/Object}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([props]))}, :protocols #{hello-react.core/Object}, :name hello-react.core/->HelloComponent, :variadic false, :file "src/hello_react/core.cljs", :end-column 24, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props])), :skip-protocol-flag nil, :test true}, hello {:name hello-react.core/hello, :file "src/hello_react/core.cljs", :line 16, :column 1, :end-line 16, :end-column 11, :test true, :meta {:file "/Users/jwalsh/sandbox/clojure-west-sessions-clojurescript/hello_react/src/hello_react/core.cljs", :line 16, :column 6, :end-line 16, :end-column 11}}}}